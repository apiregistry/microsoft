#%RAML 1.0
title: BatchService
version: 2016-07-01.3.1
baseUri: batch.core.windows.net
description: A client for issuing REST requests to the Azure Batch service.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AccountListNodeAgentSkusResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of supported node agent SKUs.
        items:
          type: NodeAgentSku
      odata.nextLink?:
        type: string
        description: The URL to get the next set of results.
    displayName: Response to an AccountOperation.ListNodeAgentSkus request.
  AffinityInformation:
    type: object
    properties:
      affinityId:
        type: string
        description: You can pass the affinityId of a compute node or task to indicate that this task needs to be placed close to the node or task.
        displayName: An opaque string representing the location of a compute node or a task that has run previously.
    displayName: A locality hint that can be used by the Batch service to select a compute node on which to start a task.
  ApplicationListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of applications available in the account.
        items:
          type: ApplicationSummary
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a ApplicationOperations.List request.
  ApplicationPackageReference:
    type: object
    properties:
      applicationId:
        type: string
        displayName: The id of the application to deploy.
      version?:
        type: string
        displayName: The version of the application to deploy. If omitted, the default version is deployed.
    displayName: A reference to an application package to be deployed to compute nodes.
  ApplicationSummary:
    type: object
    properties:
      id:
        type: string
        displayName: A string that uniquely identifies the application within the account.
      displayName:
        type: string
        displayName: The display name for the application.
      versions:
        type: array
        displayName: The versions of the application which are available.
        items:
          type: string
    displayName: Contains information about an application in an Azure Batch account.
  AutoPoolSpecification:
    type: object
    properties:
      autoPoolIdPrefix?:
        type: string
        description: The prefix can be up to 20 characters long.
        displayName: A prefix to be added to the unique identifier when a pool is automatically created.
      poolLifetimeOption:
        type: string
        displayName: The minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools.
        enum:
        - jobschedule
        - job
        - unmapped
      keepAlive?:
        type: boolean
        displayName: Whether to keep an auto pool alive after its lifetime expires.
      pool?:
        type: PoolSpecification
        displayName: The pool specification for the auto pool.
    displayName: Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool when the job is submitted.
  AutoScaleRun:
    type: object
    properties:
      timestamp:
        type: datetime
        displayName: The time at which the autoscale formula was last evaluated.
      results?:
        type: string
        description: Each variable value is returned in the form $variable=value, and variables are separated by semicolons.
        displayName: The final values of all variables used in the evaluation of the autoscale formula.
      error?:
        type: AutoScaleRunError
        displayName: Details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.
    displayName: The results and errors from an execution of a pool autoscale formula.
  AutoScaleRunError:
    type: object
    properties:
      code?:
        type: string
        displayName: An identifier for the autoscale error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        displayName: A message describing the autoscale error, intended to be suitable for display in a user interface.
      values?:
        type: array
        displayName: A list of additional error details related to the autoscale error.
        items:
          type: NameValuePair
    displayName: An error that occurred when executing or evaluating a pool autoscale formula.
  BatchError:
    type: object
    properties:
      code?:
        type: string
        displayName: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: ErrorMessage
        displayName: A message describing the error, intended to be suitable for display in a user interface.
      values?:
        type: array
        displayName: A collection of key-value pairs containing additional details about the error.
        items:
          type: BatchErrorDetail
    displayName: An error response received from the Azure Batch service.
  BatchErrorDetail:
    type: object
    properties:
      key?:
        type: string
        displayName: An identifier specifying the meaning of the Value property.
      value?:
        type: string
        displayName: The additional information included with the error response.
    displayName: An item of additional information included in an Azure Batch error response.
  Certificate:
    type: object
    properties:
      thumbprint?:
        type: string
        displayName: The X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
      thumbprintAlgorithm?:
        type: string
        displayName: The algorithm used to derive the thumbprint. This must be sha1.
      url?:
        type: string
        displayName: The URL of the certificate.
      state?:
        type: string
        displayName: The current state of the certificate.
        enum:
        - active
        - deleting
        - deletefailed
      stateTransitionTime?:
        type: datetime
        displayName: The time at which the certificate entered its current state.
      previousState?:
        type: string
        description: This property is not set if the certificate is in its initial Active state.
        displayName: The previous state of the certificate.
        enum:
        - active
        - deleting
        - deletefailed
      previousStateTransitionTime?:
        type: datetime
        description: This property is not set if the certificate is in its initial Active state.
        displayName: The time at which the certificate entered its previous state.
      publicData?:
        type: string
        displayName: The public part of the certificate as a base-64 encoded .cer file.
      deleteCertificateError?:
        type: DeleteCertificateError
        description: ' This property is set only if the certificate is in the DeleteFailed
          state.'
        displayName: The error that occurred on the last attempt to delete this certificate.
    description: A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine.
  CertificateAddParameter:
    type: object
    properties:
      thumbprint:
        type: string
        displayName: The X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
      thumbprintAlgorithm:
        type: string
        displayName: The algorithm used to derive the thumbprint. This must be sha1.
      data:
        type: string
        displayName: The base64-encoded contents of the certificate. The maximum size is 10KB.
      certificateFormat?:
        type: string
        displayName: The format of the certificate data.
        enum:
        - pfx
        - cer
        - unmapped
      password?:
        type: string
        displayName: The password to access the certificate's private key.
    displayName: A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine.
    description: The certificate to be added.
  CertificateListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of certificates.
        items:
          type: Certificate
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a CertificateOperation.List request.
  CertificateReference:
    type: object
    properties:
      thumbprint:
        type: string
        displayName: The thumbprint of the certificate.
      thumbprintAlgorithm:
        type: string
        displayName: The algorithm with which the thumbprint is associated. This must be sha1.
      storeLocation?:
        type: string
        description: The default value is CurrentUser.
        displayName: The location of the certificate store on the compute node into which to install the certificate.
        enum:
        - currentuser
        - localmachine
        - unmapped
      storeName?:
        type: string
        description: The default value is My.
        displayName: The name of the certificate store on the compute node into which to install the certificate.
      visibility?:
        type: array
        description: The default is all accounts.
        displayName: Which user accounts on the compute node should have access to the private data of the certificate.
        items:
          type: string
          enum:
          - starttask
          - task
          - remoteuser
          - unmapped
    displayName: A reference to a certificate to be installed on compute nodes in a pool.
  CloudJob:
    type: object
    properties:
      id?:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
        displayName: A string that uniquely identifies the job within the account.
      displayName?:
        type: string
        displayName: The display name for the job.
      usesTaskDependencies?:
        type: boolean
        displayName: The flag that determines if this job will use tasks with dependencies.
      url?:
        type: string
        displayName: The URL of the job.
      eTag?:
        type: string
        displayName: The ETag of the job.
      lastModified?:
        type: datetime
        displayName: The last modified time of the job.
      creationTime?:
        type: datetime
        displayName: The creation time of the job.
      state?:
        type: string
        displayName: The current state of the job.
        enum:
        - active
        - disabling
        - disabled
        - enabling
        - terminating
        - completed
        - deleting
      stateTransitionTime?:
        type: datetime
        displayName: The time at which the job entered its current state.
      previousState?:
        type: string
        description: This property is not set if the job is in its initial Active state.
        displayName: The previous state of the job.
        enum:
        - active
        - disabling
        - disabled
        - enabling
        - terminating
        - completed
        - deleting
      previousStateTransitionTime?:
        type: datetime
        description: This property is not set if the job is in its initial Active state.
        displayName: The time at which the job entered its previous state.
      priority?:
        type: integer
        description: ' Priority values can range from -1000 to 1000, with -1000 being
          the lowest priority and 1000 being the highest priority. The default value
          is 0.'
        displayName: The priority of the job.
        format: int32
      constraints?:
        type: JobConstraints
        displayName: The execution constraints for the job.
      jobManagerTask?:
        type: JobManagerTask
        displayName: Details of a Job Manager task to be launched when the job is started.
      jobPreparationTask?:
        type: JobPreparationTask
        displayName: The Job Preparation task.
      jobReleaseTask?:
        type: JobReleaseTask
        displayName: The Job Release task.
      commonEnvironmentSettings?:
        type: array
        displayName: The list of common environment variable settings. These environment variables are set for all tasks in the job (including the Job Manager, Job Preparation and Job Release tasks).
        items:
          type: EnvironmentSetting
      poolInfo?:
        type: PoolInformation
        displayName: The pool on which the Batch service runs the job's tasks.
      onAllTasksComplete?:
        type: string
        description: The action the Batch service should take when all tasks in the job are in the completed state.
        enum:
        - noAction
        - terminateJob
      onTaskFailure?:
        type: string
        description: The action the Batch service should take when any task in the job fails. A task is considered to have failed if it completes with a non-zero exit code and has exhausted its retry count, or if it had a scheduling error.
        enum:
        - noAction
        - performExitOptionsJobAction
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the job as metadata.
        items:
          type: MetadataItem
      executionInfo?:
        type: JobExecutionInformation
        displayName: The execution information for the job.
      stats?:
        type: JobStatistics
        displayName: Resource usage statistics for the entire lifetime of the job.
    displayName: An Azure Batch job.
  CloudJobListPreparationAndReleaseTaskStatusResult:
    type: object
    properties:
      value?:
        type: array
        displayName: A list of Job Preparation and Job Release task execution information.
        items:
          type: JobPreparationAndReleaseTaskExecutionInformation
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
  CloudJobListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of jobs.
        items:
          type: CloudJob
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a CloudJobOperation.List or ListFromJobSchedule request.
  CloudJobSchedule:
    type: object
    properties:
      id?:
        type: string
        description: It is common to use a GUID for the id.
        displayName: A string that uniquely identifies the schedule within the account.
      displayName?:
        type: string
        displayName: The display name for the schedule.
      url?:
        type: string
        displayName: The URL of the job schedule.
      eTag?:
        type: string
        displayName: The ETag of the job schedule.
      lastModified?:
        type: datetime
        displayName: The last modified time of the job schedule.
      creationTime?:
        type: datetime
        displayName: The creation time of the job schedule.
      state?:
        type: string
        displayName: The current state of the job schedule.
        enum:
        - active
        - completed
        - disabled
        - terminating
        - deleting
      stateTransitionTime?:
        type: datetime
        displayName: The time at which the job schedule entered the current state.
      previousState?:
        type: string
        displayName: The previous state of the job schedule.
        enum:
        - active
        - completed
        - disabled
        - terminating
        - deleting
      previousStateTransitionTime?:
        type: datetime
        displayName: The time at which the job schedule entered its previous state.
      schedule?:
        type: Schedule
        displayName: The schedule according to which jobs will be created.
      jobSpecification?:
        type: JobSpecification
        displayName: The details of the jobs to be created on this schedule.
      executionInfo?:
        type: JobScheduleExecutionInformation
        displayName: Information about jobs that have been and will be run under this schedule.
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the schedule as metadata.
        items:
          type: MetadataItem
      stats?:
        type: JobScheduleStatistics
        displayName: The lifetime resource usage statistics for the job schedule.
    displayName: A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
  CloudJobScheduleListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of job schedules.
        items:
          type: CloudJobSchedule
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a CloudJobScheduleOperation.List request.
  CloudPool:
    type: object
    properties:
      id?:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
        displayName: A string that uniquely identifies the pool within the account.
      displayName?:
        type: string
        displayName: The display name for the pool.
      url?:
        type: string
        displayName: The URL of the pool.
      eTag?:
        type: string
        displayName: The ETag of the pool.
      lastModified?:
        type: datetime
        displayName: The last modified time of the pool.
      creationTime?:
        type: datetime
        displayName: The creation time of the pool.
      state?:
        type: string
        displayName: The current state of the pool.
        enum:
        - active
        - deleting
        - upgrading
      stateTransitionTime?:
        type: datetime
        displayName: The time at which the pool entered its current state.
      allocationState?:
        type: string
        displayName: Whether the pool is resizing.
        enum:
        - steady
        - resizing
        - stopping
      allocationStateTransitionTime?:
        type: datetime
        displayName: The time at which the pool entered its current allocation state.
      vmSize?:
        type: string
        displayName: The size of virtual machines in the pool. All virtual machines in a pool are the same size.
      cloudServiceConfiguration?:
        type: CloudServiceConfiguration
        description: This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified.
        displayName: The cloud service configuration for the pool.
      virtualMachineConfiguration?:
        type: VirtualMachineConfiguration
        description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
        displayName: The virtual machine configuration for the pool.
      resizeTimeout?:
        type: string
        description: This is the timeout for the most recent resize operation. The default value is 10 minutes.
        displayName: The timeout for allocation of compute nodes to the pool.
      resizeError?:
        type: ResizeError
        description: This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.
        displayName: Details of any error encountered while performing the last resize on the pool.
      currentDedicated?:
        type: integer
        displayName: The number of compute nodes currently in the pool.
        format: int32
      targetDedicated?:
        type: integer
        description: This property must have the default value if enableAutoScale is true. It is required if enableAutoScale is false.
        displayName: The desired number of compute nodes in the pool.
        format: int32
      enableAutoScale?:
        type: boolean
        description: If true, the autoScaleFormula property must be set. If false, the targetDedicated property must be set.
        displayName: Whether the pool size should automatically adjust over time.
      autoScaleFormula?:
        type: string
        displayName: A formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        displayName: A time interval for the desired AutoScale evaluation period in the pool.
      autoScaleRun?:
        type: AutoScaleRun
        displayName: The results and errors from the last execution of the autoscale formula.
      enableInterNodeCommunication?:
        type: boolean
        displayName: Whether the pool permits direct communication between nodes.
      networkConfiguration?:
        type: NetworkConfiguration
        displayName: The network configuration for the pool.
      startTask?:
        type: StartTask
        displayName: A task specified to run on each compute node as it joins the pool.
      certificateReferences?:
        type: array
        displayName: The list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        displayName: The list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      maxTasksPerNode?:
        type: integer
        displayName: The maximum number of tasks that can run concurrently on a single compute node in the pool.
        format: int32
      taskSchedulingPolicy?:
        type: TaskSchedulingPolicy
        displayName: How the Batch service distributes tasks between compute nodes in the pool.
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
      stats?:
        type: PoolStatistics
        displayName: Utilization and resource usage statistics for the entire lifetime of the pool.
    displayName: A pool in the Azure Batch service.
  CloudPoolListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of pools.
        items:
          type: CloudPool
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a CloudPoolOperations.List request.
  CloudServiceConfiguration:
    type: object
    properties:
      osFamily:
        type: string
        displayName: The Azure Guest OS family to be installed on the virtual machines in the pool.
      targetOSVersion?:
        type: string
        description: The default value is * which specifies the latest operating system version for the specified OS family.
        displayName: The Azure Guest OS version to be installed on the virtual machines in the pool.
      currentOSVersion?:
        type: string
        displayName: The Azure Guest OS Version currently installed on the virtual machines in the pool. This may differ from targetOSVersion if the pool state is Upgrading.
    displayName: The configuration for nodes in a pool based on the Azure Cloud Services platform.
  CloudTask:
    type: object
    properties:
      id?:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
        displayName: A string that uniquely identifies the task within the job.
      displayName?:
        type: string
        displayName: A display name for the task.
      url?:
        type: string
        displayName: The URL of the task.
      eTag?:
        type: string
        displayName: The ETag of the task.
      lastModified?:
        type: datetime
        displayName: The last modified time of the task.
      creationTime?:
        type: datetime
        displayName: The creation time of the task.
      exitConditions?:
        type: ExitConditions
        description: How the Batch service should respond when the task completes.
      state?:
        type: string
        displayName: The current state of the task.
        enum:
        - active
        - preparing
        - running
        - completed
      stateTransitionTime?:
        type: datetime
        displayName: The time at which the task entered its current state.
      previousState?:
        type: string
        description: This property is not set if the task is in its initial Active state.
        displayName: The previous state of the task.
        enum:
        - active
        - preparing
        - running
        - completed
      previousStateTransitionTime?:
        type: datetime
        description: This property is not set if the task is in its initial Active state.
        displayName: The time at which the task entered its previous state.
      commandLine?:
        type: string
        description: For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordianation command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        displayName: The command line of the task.
      resourceFiles?:
        type: array
        description: For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
        displayName: A list of files that the Batch service will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        displayName: A list of environment variable settings for the task.
        items:
          type: EnvironmentSetting
      affinityInfo?:
        type: AffinityInformation
        displayName: A locality hint that can be used by the Batch service to select a compute node on which to start the new task.
      constraints?:
        type: TaskConstraints
        displayName: The execution constraints that apply to this task.
      runElevated?:
        type: boolean
        displayName: Whether to run the task in elevated mode.
      executionInfo?:
        type: TaskExecutionInformation
        displayName: Information about the execution of the task.
      nodeInfo?:
        type: ComputeNodeInformation
        displayName: Information about the compute node on which the task ran.
      multiInstanceSettings?:
        type: MultiInstanceSettings
        displayName: Information about how to run the multi-instance task.
      stats?:
        type: TaskStatistics
        displayName: Resource usage statistics for the task.
      dependsOn?:
        type: TaskDependencies
        displayName: Any dependencies this task has.
      applicationPackageReferences?:
        type: array
        displayName: A list of application packages that the Batch service will deploy to the compute node before running the command line.
        items:
          type: ApplicationPackageReference
    displayName: An Azure Batch task.
  CloudTaskListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of tasks.
        items:
          type: CloudTask
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a CloudTaskOperations.List request.
  CloudTaskListSubtasksResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of information of subtasks.
        items:
          type: SubtaskInformation
    displayName: Response to a CloudTaskOperations.ListSubtasks request.
  ComputeNode:
    type: object
    properties:
      id?:
        type: string
        displayName: The id of the compute node.
      url?:
        type: string
        displayName: The URL of the compute node.
      state?:
        type: string
        displayName: The current state of the compute node.
        enum:
        - idle
        - rebooting
        - reimaging
        - running
        - unusable
        - creating
        - starting
        - waitingforstarttask
        - starttaskfailed
        - unknown
        - leavingpool
        - offline
      schedulingState?:
        type: string
        displayName: Whether the compute node should be available for task scheduling.
        enum:
        - enabled
        - disabled
      stateTransitionTime?:
        type: datetime
        displayName: The time at which the compute node entered its current state.
      lastBootTime?:
        type: datetime
        displayName: The time at which the compute node was started.
      allocationTime?:
        type: datetime
        displayName: The time at which this compute node was allocated to the pool.
      ipAddress?:
        type: string
        displayName: The IP address that other compute nodes can use to communicate with this compute node.
      affinityId?:
        type: string
        displayName: An identifier which can be passed in the Add Task API to request that the task be scheduled close to this compute node.
      vmSize?:
        type: string
        displayName: The size of the virtual machine hosting the compute node.
      totalTasksRun?:
        type: integer
        displayName: The total number of job tasks completed on the compute node. This includes Job Preparation, Job Release and Job Manager tasks, but not the pool start task.
        format: int32
      runningTasksCount?:
        type: integer
        displayName: The total number of currently running job tasks on the compute node. This includes Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.
        format: int32
      totalTasksSucceeded?:
        type: integer
        displayName: The total number of job tasks which completed successfully (with exitCode 0) on the compute node. This includes Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.
        format: int32
      recentTasks?:
        type: array
        displayName: The list of tasks that are currently running on the compute node.
        items:
          type: TaskInformation
      startTask?:
        type: StartTask
        displayName: The task specified to run on the compute node as it joins the pool.
      startTaskInfo?:
        type: StartTaskInformation
        displayName: Runtime information about the execution of the start task on the compute node.
      certificateReferences?:
        type: array
        displayName: The list of certificates installed on the compute node.
        items:
          type: CertificateReference
      errors?:
        type: array
        displayName: The list of errors that are currently being encountered by the compute node.
        items:
          type: ComputeNodeError
    displayName: A compute node in the Batch service.
  ComputeNodeError:
    type: object
    properties:
      code?:
        type: string
        displayName: An identifier for the compute node error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        displayName: A message describing the compute node error, intended to be suitable for display in a user interface.
      errorDetails?:
        type: array
        displayName: The list of additional error details related to the compute node error.
        items:
          type: NameValuePair
    displayName: An error encountered by a compute node.
  ComputeNodeGetRemoteLoginSettingsResult:
    type: object
    properties:
      remoteLoginIPAddress:
        type: string
        displayName: The IP address used for remote login to the compute node.
      remoteLoginPort:
        type: integer
        displayName: The port used for remote login to the compute node.
        format: int32
    displayName: Response to a ComputeNodeOperation.GetRemoteLoginSettings request.
  ComputeNodeInformation:
    type: object
    properties:
      affinityId?:
        type: string
        displayName: An identifier for the compute node on which the task ran, which can be passed when adding a task to request that the task be scheduled close to this compute node.
      nodeUrl?:
        type: string
        displayName: 'The URL of the node on which the task ran. '
      poolId?:
        type: string
        displayName: The id of the pool on which the task ran.
      nodeId?:
        type: string
        displayName: The id of the node on which the task ran.
      taskRootDirectory?:
        type: string
        displayName: The root directory of the task on the compute node.
      taskRootDirectoryUrl?:
        type: string
        displayName: The URL to the root directory of the task on the compute node.
    displayName: Information about the compute node on which a task ran.
  ComputeNodeListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of compute nodes.
        items:
          type: ComputeNode
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a ComputeNodeOperation.List request.
  ComputeNodeUser:
    type: object
    properties:
      name:
        type: string
        displayName: The user name of the account.
      isAdmin?:
        type: boolean
        displayName: Whether the account should be an administrator on the compute node.
      expiryTime?:
        type: datetime
        description: If omitted, the default is 1 day from the current time.
        displayName: The time at which the account should expire.
      password?:
        type: string
        displayName: The password of the account.
      sshPublicKey?:
        type: string
        displayName: The SSH public key that can be used for remote login to the compute node.
    displayName: An user account on a compute node.
    description: The user account to be created.
  DeleteCertificateError:
    type: object
    properties:
      code?:
        type: string
        displayName: An identifier for the certificate deletion error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        displayName: A message describing the certificate deletion error, intended to be suitable for display in a user interface.
      values?:
        type: array
        displayName: A list of additional error details related to the certificate deletion error.
        items:
          type: NameValuePair
    displayName: An error encountered by the Batch service when deleting a certificate.
  EnvironmentSetting:
    type: object
    properties:
      name:
        type: string
        displayName: The name of the environment variable.
      value?:
        type: string
        displayName: The value of the environment variable.
    displayName: An environment variable to be set on a task process.
  ErrorMessage:
    type: object
    properties:
      lang?:
        type: string
        displayName: The language code of the error message
      value?:
        type: string
        displayName: The text of the message.
    displayName: An error message received in an Azure Batch error response.
  ExitCodeMapping:
    type: object
    properties:
      code:
        type: integer
        description: A process exit code.
        format: int32
      exitOptions:
        type: ExitOptions
        description: How the Batch service should respond if the task exits with this exit code.
    description: How the Batch service should respond if a task exits with a particular exit code.
  ExitCodeRangeMapping:
    type: object
    properties:
      start:
        type: integer
        description: The first exit code in the range.
        format: int32
      end:
        type: integer
        description: The last exit code in the range.
        format: int32
      exitOptions:
        type: ExitOptions
        description: An exitOptions specifying how the Batch service should respond if the task exits with an exit code in the range start to end.
    description: A range of exit codes and how the Batch service should respond to exit codes within that range.
  ExitConditions:
    type: object
    properties:
      exitCodes?:
        type: array
        description: A list of individual task exit codes and how the Batch service should respond to them.
        items:
          type: ExitCodeMapping
      exitCodeRanges?:
        type: array
        description: A list of task exit codes ranges and how the Batch service should respond to them.
        items:
          type: ExitCodeRangeMapping
      schedulingError?:
        type: ExitOptions
        description: How the Batch service should respond if the task fails with a scheduling error.
      default?:
        type: ExitOptions
        description: How the Batch service should respond if the task fails with an exit condition not covered by any of the other properties – that is, any nonzero exit code not listed in the exitCodes or exitCodeRanges collection, or a scheduling error if the schedulingError property is not present.
    description: Specifies how the Batch service should respond when the task completes.
  ExitOptions:
    type: object
    properties:
      jobAction?:
        type: string
        description: An action to take on the job containing the task, if the task completes with the given exit condition and the job’s onTaskFailed property is 'performexitoptionsjobaction'.
        enum:
        - none
        - disable
        - terminate
    description: How the Batch service should respond to a particular exit condition.
  FileProperties:
    type: object
    properties:
      creationTime?:
        type: datetime
        displayName: The file creation time.
      lastModified:
        type: datetime
        displayName: The time at which the file was last modified.
      contentLength:
        type: integer
        displayName: The length of the file.
        format: int64
      contentType?:
        type: string
        displayName: The content type of the file.
      fileMode?:
        type: string
        description: This property will be returned only from a Linux compute node.
        displayName: The file mode attribute in octal format.
    displayName: The properties of a file on a compute node.
  ImageReference:
    type: object
    properties:
      publisher:
        type: string
        description: For example, Canonical or MicrosoftWindowsServer.
        displayName: The publisher of the Azure Virtual Machines Marketplace image.
      offer:
        type: string
        description: For example, UbuntuServer or WindowsServer.
        displayName: The offer type of the Azure Virtual Machines Marketplace image.
      sku:
        type: string
        description: For example, 14.04.0-LTS or 2012-R2-Datacenter.
        displayName: The SKU of the Azure Virtual Machines Marketplace image.
      version?:
        type: string
        description: A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
        displayName: The version of the Azure Virtual Machines Marketplace image.
    displayName: A reference to an Azure Virtual Machines Marketplace image.
  JobAddParameter:
    type: object
    properties:
      id:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
        displayName: A string that uniquely identifies the job within the account.
      displayName?:
        type: string
        displayName: The display name for the job.
      priority?:
        type: integer
        description: ' Priority values can range from -1000 to 1000, with -1000 being
          the lowest priority and 1000 being the highest priority. The default value
          is 0.'
        displayName: The priority of the job.
        format: int32
      constraints?:
        type: JobConstraints
        description: The execution constraints for the job.
      jobManagerTask?:
        type: JobManagerTask
        displayName: Details of a Job Manager task to be launched when the job is started.
      jobPreparationTask?:
        type: JobPreparationTask
        displayName: The Job Preparation task.
      jobReleaseTask?:
        type: JobReleaseTask
        displayName: The Job Release task.
      commonEnvironmentSettings?:
        type: array
        displayName: The list of common environment variable settings. These environment variables are set for all tasks in the job (including the Job Manager, Job Preparation and Job Release tasks).
        items:
          type: EnvironmentSetting
      poolInfo:
        type: PoolInformation
        displayName: The pool on which the Batch service runs the job's tasks.
      onAllTasksComplete?:
        type: string
        description: The action the Batch service should take when all tasks in the job are in the completed state.
        enum:
        - noAction
        - terminateJob
      onTaskFailure?:
        type: string
        description: The action the Batch service should take when any task in the job fails. A task is considered to have failed if it completes with a non-zero exit code and has exhausted its retry count, or if it had a scheduling error.
        enum:
        - noAction
        - performExitOptionsJobAction
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the job as metadata.
        items:
          type: MetadataItem
      usesTaskDependencies?:
        type: boolean
        displayName: The flag that determines if this job will use tasks with dependencies.
    displayName: An Azure Batch job to add.
    description: The job to be added.
  JobConstraints:
    type: object
    properties:
      maxWallClockTime?:
        type: string
        displayName: The maximum elapsed time that the job may run, measured from the time the job starts. If the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running.
      maxTaskRetryCount?:
        type: integer
        displayName: The maximum number of times each task may be retried. The Batch service retries a task if its exit code is nonzero.
        format: int32
    displayName: Specifies the execution constraints for jobs created on a schedule.
  JobDisableParameter:
    type: object
    properties:
      disableTasks:
        type: string
        displayName: What to do with active tasks associated with the job.
        enum:
        - requeue
        - terminate
        - wait
    displayName: Parameters for a CloudJobOperations.Disable request.
    description: The parameters for the request.
  JobExecutionInformation:
    type: object
    properties:
      startTime:
        type: datetime
        displayName: The start time of the job.
      endTime?:
        type: datetime
        description: This property is set only if the job is in the completed state.
        displayName: The completion time of the job.
      poolId?:
        type: string
        displayName: The id of the pool to which this job is assigned.
      schedulingError?:
        type: JobSchedulingError
        displayName: Details of any error encountered by the service in starting the job.
      terminateReason?:
        type: string
        displayName: A string describing the reason the job ended.
    displayName: Contains information about the execution of a job in the Azure Batch service.
  JobManagerTask:
    type: object
    properties:
      id:
        type: string
        displayName: A string that uniquely identifies the Job Manager task.
      displayName?:
        type: string
        displayName: The display name of the Job Manager task.
      commandLine:
        type: string
        description: The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        displayName: The command line of the Job Manager task.
      resourceFiles?:
        type: array
        displayName: A list of files that the Batch service will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        displayName: A list of environment variable settings for the Job Manager task.
        items:
          type: EnvironmentSetting
      constraints?:
        type: TaskConstraints
        displayName: Constraints that apply to the Job Manager task.
      killJobOnCompletion?:
        type: boolean
        displayName: Whether completion of the Job Manager task signifies completion of the entire job.
      runElevated?:
        type: boolean
        displayName: Whether to run the Job Manager task in elevated mode. The default value is false.
      runExclusive?:
        type: boolean
        description: If true, no other tasks will run on the same compute node for as long as the Job Manager is running. If false, other tasks can run simultaneously with the Job Manager on a compute node. The Job Manager task counts normally against the node's concurrent task limit, so this is only relevant if the node allows multiple concurrent tasks.
        displayName: Whether the Job Manager task requires exclusive use of the compute node where it runs.
      applicationPackageReferences?:
        type: array
        displayName: A list of application packages that the Batch service will deploy to the compute node before running the command line.
        items:
          type: ApplicationPackageReference
    displayName: Specifies details of a Job Manager task.
  JobPatchParameter:
    type: object
    properties:
      priority?:
        type: integer
        description: Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged.
        displayName: The priority of the job.
        format: int32
      onAllTasksComplete?:
        type: string
        description: Specifies an action the Batch service should take when all tasks in the job are in the completed state.
        enum:
        - noAction
        - terminateJob
      constraints?:
        type: JobConstraints
        description: If omitted, the existing execution constraints are left unchanged.
        displayName: The execution constraints for the job.
      poolInfo?:
        type: PoolInformation
        description: You may change the pool for a job only when the job is disabled. The Patch Job call will fail if you include the poolInfo element and the job is not disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job. If omitted, the job continues to run on its current pool.
        displayName: The pool on which the Batch service runs the job's tasks.
      metadata?:
        type: array
        description: If omitted, the existing job metadata is left unchanged.
        displayName: A list of name-value pairs associated with the job as metadata.
        items:
          type: MetadataItem
    displayName: Parameters for a CloudJobOperations.Patch request.
    description: The parameters for the request.
  JobPreparationAndReleaseTaskExecutionInformation:
    type: object
    properties:
      poolId?:
        type: string
        displayName: The id of the pool containing the compute node to which this entry refers.
      nodeId?:
        type: string
        displayName: The id of the compute node to which this entry refers.
      nodeUrl?:
        type: string
        displayName: The URL of the compute node to which this entry refers.
      jobPreparationTaskExecutionInfo?:
        type: JobPreparationTaskExecutionInformation
        displayName: Information about the execution status of the Job Preparation task on this compute node.
      jobReleaseTaskExecutionInfo?:
        type: JobReleaseTaskExecutionInformation
        description: This property is set only if the Job Release task has run on the node.
        displayName: Information about the execution status of the Job Release task on this compute node.
    displayName: The status of the Job Preparation and Job Release tasks on a compute node.
  JobPreparationTask:
    type: object
    properties:
      id?:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
        displayName: A string that uniquely identifies the job preparation task within the job.
      commandLine:
        type: string
        description: The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        displayName: The command line of the Job Preparation task.
      resourceFiles?:
        type: array
        displayName: A list of files that the Batch service will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        displayName: A list of environment variable settings for the Job Preparation task.
        items:
          type: EnvironmentSetting
      constraints?:
        type: TaskConstraints
        displayName: Constraints that apply to the Job Preparation task.
      waitForSuccess?:
        type: boolean
        displayName: Whether the Batch service should wait for the Job Preparation task to complete successfully before scheduling any other tasks of the job on the compute node.
      runElevated?:
        type: boolean
        displayName: Whether to run the Job Preparation task in elevated mode. The default value is false.
      rerunOnNodeRebootAfterSuccess?:
        type: boolean
        description: Note that the Job Preparation task should still be written to be idempotent because it can be rerun if the compute node is rebooted while Job Preparation task is still running. The default value is true.
        displayName: Whether the Batch service should rerun the Job Preparation task after a compute node reboots.
    displayName: A Job Preparation task to run before any tasks of the job on any given compute node.
  JobPreparationTaskExecutionInformation:
    type: object
    properties:
      startTime:
        type: datetime
        description: Note that every time the task is restarted, this value is updated.
        displayName: The time at which the task started running.
      endTime?:
        type: datetime
        description: This property is set only if the task is in the Completed state.
        displayName: The time at which the Job Preparation task completed.
      state:
        type: string
        displayName: The current state of the Job Preparation task.
        enum:
        - running
        - completed
      taskRootDirectory?:
        type: string
        displayName: The root directory of the Job Preparation task on the compute node. You can use this path to retrieve files created by the task, such as log files.
      taskRootDirectoryUrl?:
        type: string
        displayName: The URL to the root directory of the Job Preparation task on the compute node.
      exitCode?:
        type: integer
        description: This parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.
        displayName: The exit code of the program specified on the task command line.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        displayName: The error encountered by the Batch service when starting the task.
      retryCount:
        type: integer
        displayName: The number of times the task has been retried by the Batch service. Every time the task exits with a non-zero exit code, it is deemed a task failure. The Batch service will retry the task up to the limit specified by the constraints.
        format: int32
      lastRetryTime?:
        type: datetime
        description: This property is set only if the task was retried (i.e. retryCount is nonzero).
        displayName: The most recent time at which a retry of the Job Preparation task started running.
    displayName: Contains information about the execution of a Job Preparation task on a compute node.
  JobReleaseTask:
    type: object
    properties:
      id?:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
        displayName: A string that uniquely identifies the Job Release task within the job.
      commandLine:
        type: string
        description: The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        displayName: The command line of the Job Release task.
      resourceFiles?:
        type: array
        displayName: A list of files that the Batch service will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        displayName: A list of environment variable settings for the Job Release task.
        items:
          type: EnvironmentSetting
      maxWallClockTime?:
        type: string
        displayName: The maximum elapsed time that the Job Release task may run on a given compute node, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes.
      retentionTime?:
        type: string
        description: ' The default is infinite.'
        displayName: The minimum time to retain the working directory for the Job Release task on the compute node. After this time, the Batch service may delete the working directory and all its contents.
      runElevated?:
        type: boolean
        description: The default value is false.
        displayName: Whether to run the Job Release task in elevated mode.
    displayName: A Job Release task to run on job completion on any compute node where the job has run.
  JobReleaseTaskExecutionInformation:
    type: object
    properties:
      startTime:
        type: datetime
        displayName: The time at which the task started running. Note that every time the task is restarted, this value is updated.
      endTime?:
        type: datetime
        description: This property is set only if the task is in the Completed state.
        displayName: The time at which the Job Release task completed.
      state:
        type: string
        displayName: The current state of the Job Release task.
        enum:
        - running
        - completed
      taskRootDirectory?:
        type: string
        displayName: The root directory of the Job Release task on the compute node. You can use this path to retrieve files created by the task, such as log files.
      taskRootDirectoryUrl?:
        type: string
        displayName: The URL to the root directory of the Job Release task on the compute node.
      exitCode?:
        type: integer
        description: This parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.
        displayName: The exit code of the program specified on the task command line.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        displayName: The scheduling error encountered by the Batch service when starting the task.
    displayName: Contains information about the execution of a Job Release task on a compute node.
  JobScheduleAddParameter:
    type: object
    properties:
      id:
        type: string
        displayName: A string that uniquely identifies the schedule within the account.
      displayName?:
        type: string
        displayName: The display name for the schedule.
      schedule:
        type: Schedule
        displayName: The schedule according to which jobs will be created.
      jobSpecification:
        type: JobSpecification
        displayName: The details of the jobs to be created on this schedule.
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the schedule as metadata.
        items:
          type: MetadataItem
    displayName: A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
    description: The job schedule to be added.
  JobScheduleExecutionInformation:
    type: object
    properties:
      nextRunTime?:
        type: datetime
        displayName: The next time at which a job will be created under this schedule.
      recentJob?:
        type: RecentJob
        displayName: Information about the most recent job under the job schedule.
      endTime?:
        type: datetime
        description: This property is set only if the job schedule is in the completed state.
        displayName: The time at which the schedule ended.
    displayName: Specifies how tasks should be run in a job associated with a job schedule.
  JobSchedulePatchParameter:
    type: object
    properties:
      schedule?:
        type: Schedule
        displayName: The schedule according to which jobs will be created.
      jobSpecification?:
        type: JobSpecification
        displayName: The details of the jobs to be created on this schedule.
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the job schedule as metadata.
        items:
          type: MetadataItem
    displayName: Parameters for a CloudJobScheduleOperations.Patch request.
    description: The parameters for the request.
  JobScheduleStatistics:
    type: object
    properties:
      url:
        type: string
        displayName: The URL of the statistics.
      startTime:
        type: datetime
        displayName: The start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        displayName: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      userCPUTime:
        type: string
        displayName: The total user mode CPU time (summed across all cores and all compute nodes) consumed by all tasks in all jobs created under the schedule.
      kernelCPUTime:
        type: string
        displayName: The total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all tasks in all jobs created under the schedule.
      wallClockTime:
        type: string
        displayName: The total wall clock time of all the tasks in all the jobs created under the schedule.
      readIOps:
        type: integer
        displayName: The total number of disk read operations made by all tasks in all jobs created under the schedule.
        format: int64
      writeIOps:
        type: integer
        displayName: The total number of disk write operations made by all tasks in all jobs created under the schedule.
        format: int64
      readIOGiB:
        type: number
        displayName: The total gibibytes read from disk by all tasks in all jobs created under the schedule.
        format: double
      writeIOGiB:
        type: number
        displayName: The total gibibytes written to disk by all tasks in all jobs created under the schedule.
        format: double
      numSucceededTasks:
        type: integer
        displayName: The total number of tasks successfully completed during the given time range in jobs created under the schedule. A task completes successfully if it returns exit code 0.
        format: int64
      numFailedTasks:
        type: integer
        displayName: The total number of tasks that failed during the given time range in jobs created under the schedule. A task fails if it exhausts its maximum retry count without returning exit code 0.
        format: int64
      numTaskRetries:
        type: integer
        displayName: The total number of retries during the given time range on all tasks in all jobs created under the schedule.
        format: int64
      waitTime:
        type: string
        displayName: The total wait time of all tasks in all jobs created under the schedule. The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)
    displayName: Resource usage statistics for a job schedule.
  JobScheduleUpdateParameter:
    type: object
    properties:
      schedule:
        type: Schedule
        description: 'If you do not specify this element, it is equivalent to passing
          the default schedule: that is, a single job scheduled to run immediately.'
        displayName: The schedule according to which jobs will be created.
      jobSpecification:
        type: JobSpecification
        displayName: Details of the jobs to be created on this schedule.
      metadata?:
        type: array
        description: If you do not specify this element, it takes the default value of an empty list; in effect, any existing metadata is deleted.
        displayName: A list of name-value pairs associated with the job schedule as metadata.
        items:
          type: MetadataItem
    displayName: Parameters for a CloudJobScheduleOperations.Update request.
    description: The parameters for the request.
  JobSchedulingError:
    type: object
    properties:
      category:
        type: string
        displayName: The category of the job scheduling error.
        enum:
        - usererror
        - servererror
        - unmapped
      code?:
        type: string
        displayName: An identifier for the job scheduling error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        displayName: A message describing the job scheduling error, intended to be suitable for display in a user interface.
      details?:
        type: array
        displayName: A list of additional error details related to the scheduling error.
        items:
          type: NameValuePair
    displayName: An error encountered by the Batch service when scheduling a job.
  JobSpecification:
    type: object
    properties:
      priority?:
        type: integer
        description: ' Priority values can range from -1000 to 1000, with -1000 being
          the lowest priority and 1000 being the highest priority. The default value
          is 0.'
        displayName: The priority of jobs created under this schedule.
        format: int32
      displayName?:
        type: string
        description: The name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        displayName: The display name for jobs created under this schedule.
      usesTaskDependencies?:
        type: boolean
        displayName: The flag that determines if this job will use tasks with dependencies.
      constraints?:
        type: JobConstraints
        displayName: The execution constraints for jobs created under this schedule.
      jobManagerTask?:
        type: JobManagerTask
        displayName: The details of a Job Manager task to be launched when a job is started under this schedule.
      jobPreparationTask?:
        type: JobPreparationTask
        displayName: The Job Preparation task for jobs created under this schedule.
      jobReleaseTask?:
        type: JobReleaseTask
        displayName: The Job Release task for jobs created under this schedule.
      commonEnvironmentSettings?:
        type: array
        displayName: A list of common environment variable settings. These environment variables are set for all tasks in jobs created under this schedule (including the Job Manager, Job Preparation and Job Release tasks).
        items:
          type: EnvironmentSetting
      poolInfo:
        type: PoolInformation
        displayName: The pool on which the Batch service runs the tasks of jobs created under this schedule.
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with each job created under this schedule as metadata.
        items:
          type: MetadataItem
    displayName: Specifies details of the jobs to be created on a schedule.
  JobStatistics:
    type: object
    properties:
      url:
        type: string
        displayName: The URL of the statistics.
      startTime:
        type: datetime
        displayName: The start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        displayName: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      userCPUTime:
        type: string
        displayName: The total user mode CPU time (summed across all cores and all compute nodes) consumed by all tasks in the job.
      kernelCPUTime:
        type: string
        displayName: The total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all tasks in the job.
      wallClockTime:
        type: string
        displayName: The total wall clock time of all tasks in the job.
      readIOps:
        type: integer
        displayName: The total number of disk read operations made by all tasks in the job.
        format: int64
      writeIOps:
        type: integer
        displayName: The total number of disk write operations made by all tasks in the job.
        format: int64
      readIOGiB:
        type: number
        displayName: The total gibibytes read from disk by all tasks in the job.
        format: double
      writeIOGiB:
        type: number
        displayName: The total gibibytes written to disk by all tasks in the job.
        format: double
      numSucceededTasks:
        type: integer
        displayName: The total number of tasks successfully completed in the job during the given time range.
        format: int64
      numFailedTasks:
        type: integer
        displayName: The total number of tasks in the job that failed during the given time range.
        format: int64
      numTaskRetries:
        type: integer
        displayName: The total number of retries on all the tasks in the job during the given time range.
        format: int64
      waitTime:
        type: string
        description: The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)
        displayName: The total wait time of all tasks in the job.
    displayName: Resource usage statistics for a job.
  JobTerminateParameter:
    type: object
    properties:
      terminateReason?:
        type: string
        displayName: The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'.
    displayName: Parameters for a CloudJobOperations.Terminate request.
    description: The parameters for the request.
  JobUpdateParameter:
    type: object
    properties:
      priority?:
        type: integer
        description: Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, it is set to the default value 0.
        displayName: The priority of the job.
        format: int32
      constraints?:
        type: JobConstraints
        description: If omitted, the constraints are cleared.
        displayName: The execution constraints for the job.
      poolInfo:
        type: PoolInformation
        description: You may change the pool for a job only when the job is disabled. The Update Job call will fail if you include the poolInfo element and the job is not disabled. If you specify an autoPoolSpecification specification in the poolInfo, only the keepAlive property can be updated, and then only if the auto pool has a poolLifetimeOption of job.
        displayName: The pool on which the Batch service runs the job's tasks.
      metadata?:
        type: array
        description: If omitted, it takes the default value of an empty list; in effect, any existing metadata is deleted.
        displayName: A list of name-value pairs associated with the job as metadata.
        items:
          type: MetadataItem
      onAllTasksComplete?:
        type: string
        description: Specifies an action the Batch service should take when all tasks in the job are in the completed state.
        enum:
        - noAction
        - terminateJob
    displayName: Parameters for a CloudJobOperations.Update request.
    description: The parameters for the request.
  MetadataItem:
    type: object
    properties:
      name:
        type: string
        displayName: The name of the metadata item.
      value:
        type: string
        displayName: The value of the metadata item.
    description: The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
    displayName: A name-value pair associated with a Batch service resource.
  MultiInstanceSettings:
    type: object
    properties:
      numberOfInstances:
        type: integer
        displayName: The number of compute nodes required by the multi-instance task.
        format: int32
      coordinationCommandLine?:
        type: string
        displayName: The command to run on the compute node instances for coordinating among the subtasks.
      commonResourceFiles?:
        type: array
        description: The difference between common resource files and task resource files is that common resource files are downloaded for all subtasks including the primary, whereas task resource files are downloaded only for the primary.
        displayName: A list of files that the Batch service will download before running the coordination command line.
        items:
          type: ResourceFile
    description: Multi-instance tasks are commonly used to support MPI tasks.
    displayName: Settings which specify how to run a multi-instance task.
  NameValuePair:
    type: object
    properties:
      name?:
        type: string
        displayName: The name in the name-value pair.
      value?:
        type: string
        displayName: The value in the name-value pair.
    displayName: Represents a name-value pair.
  NetworkConfiguration:
    type: object
    properties:
      subnetId?:
        type: string
        description: The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. The virtual network must be in the same region and subscription as the Azure Batch account. This property can only be specified for pools created with a cloudServiceConfiguration.
    description: The network configuration for a pool.
  NodeAgentSku:
    type: object
    properties:
      id?:
        type: string
        displayName: The node agent SKU id.
      verifiedImageReferences?:
        type: array
        description: This collection is not exhaustive (the node agent may be compatible with other images).
        displayName: The list of images verified to be compatible with this node agent SKU.
        items:
          type: ImageReference
      osType?:
        type: string
        displayName: The type of operating system compatible with the node agent SKU.
        enum:
        - linux
        - windows
        - unmapped
    description: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems.
    displayName: A node agent SKU supported by the Batch service.
  NodeDisableSchedulingParameter:
    type: object
    properties:
      nodeDisableSchedulingOption?:
        type: string
        description: The default value is requeue.
        displayName: What to do with currently running tasks when disable task scheduling on the compute node.
        enum:
        - requeue
        - terminate
        - taskcompletion
    displayName: Parameters for a ComputeNodeOperations.DisableScheduling request.
    description: The parameters for the request.
  NodeFile:
    type: object
    properties:
      name?:
        type: string
        displayName: The file path.
      url?:
        type: string
        displayName: The URL of the file.
      isDirectory?:
        type: boolean
        displayName: Whether the object represents a directory.
      properties?:
        type: FileProperties
        displayName: The file properties.
    displayName: Information about a file or directory on a compute node.
  NodeFileListResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The list of files.
        items:
          type: NodeFile
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to a FileOperation.ListFromComputeNode or FileOperation.ListFromTask request.
  NodeRebootParameter:
    type: object
    properties:
      nodeRebootOption?:
        type: string
        description: The default value is requeue.
        displayName: When to reboot the compute node and what to do with currently running tasks.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    displayName: Parameters for a ComputeNodeOperations.Reboot request.
    description: The parameters for the request.
  NodeReimageParameter:
    type: object
    properties:
      nodeReimageOption?:
        type: string
        description: The default value is requeue.
        displayName: When to reimage the compute node and what to do with currently running tasks.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    displayName: Parameters for a ComputeNodeOperations.Reimage request.
    description: The parameters for the request.
  NodeRemoveParameter:
    type: object
    properties:
      nodeList:
        type: array
        displayName: A list containing the ids of the compute nodes to be removed from the specified pool.
        items:
          type: string
      resizeTimeout?:
        type: string
        description: The default value is 10 minutes.
        displayName: The timeout for removal of compute nodes to the pool.
      nodeDeallocationOption?:
        type: string
        displayName: When compute nodes may be removed from the pool.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    displayName: Parameters for a ComputeNodeOperations.Remove request.
    description: The parameters for the request.
  NodeUpdateUserParameter:
    type: object
    properties:
      password?:
        type: string
        displayName: The password of the account.
      expiryTime?:
        type: datetime
        description: If omitted, the default is 1 day from the current time.
        displayName: The time at which the account should expire.
      sshPublicKey?:
        type: string
        displayName: The SSH public key that can be used for remote login to the compute node.
    displayName: Parameters for a ComputeNodeOperations.UpdateUser request.
    description: The parameters for the request.
  PoolAddParameter:
    type: object
    properties:
      id:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
        displayName: A string that uniquely identifies the pool within the account.
      displayName?:
        type: string
        displayName: The display name for the pool.
      vmSize:
        type: string
        displayName: The size of virtual machines in the pool. All virtual machines in a pool are the same size.
      cloudServiceConfiguration?:
        type: CloudServiceConfiguration
        description: ' This property and virtualMachineConfiguration are mutually
          exclusive and one of the properties must be specified.'
        displayName: The cloud service configuration for the pool.
      virtualMachineConfiguration?:
        type: VirtualMachineConfiguration
        description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
        displayName: The virtual machine configuration for the pool.
      resizeTimeout?:
        type: string
        description: The default value is 10 minutes.
        displayName: The timeout for allocation of compute nodes to the pool.
      targetDedicated?:
        type: integer
        description: This property must have the default value if enableAutoScale is true. It is required if enableAutoScale is false.
        displayName: The desired number of compute nodes in the pool.
        format: int32
      enableAutoScale?:
        type: boolean
        description: If true, the autoScaleFormula property must be set. If false, the targetDedicated property must be set.
        displayName: Whether the pool size should automatically adjust over time.
      autoScaleFormula?:
        type: string
        displayName: A formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        displayName: A time interval for the desired autoscale evaluation period in the pool.
      enableInterNodeCommunication?:
        type: boolean
        displayName: Whether the pool permits direct communication between nodes.
      networkConfiguration?:
        type: NetworkConfiguration
        displayName: The network configuration for the pool.
      startTask?:
        type: StartTask
        displayName: A task specified to run on each compute node as it joins the pool.
      certificateReferences?:
        type: array
        displayName: The list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        displayName: The list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      maxTasksPerNode?:
        type: integer
        displayName: The maximum number of tasks that can run concurrently on a single compute node in the pool.
        format: int32
      taskSchedulingPolicy?:
        type: TaskSchedulingPolicy
        displayName: How the Batch service distributes tasks between compute nodes in the pool.
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
    displayName: A pool in the Azure Batch service to add.
    description: The pool to be added.
  PoolEnableAutoScaleParameter:
    type: object
    properties:
      autoScaleFormula?:
        type: string
        displayName: The formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        displayName: A time interval for the desired autoscale evaluation period in the pool.
    displayName: Parameters for a CloudPoolOperations.EnableAutoScale request.
    description: The parameters for the request.
  PoolEvaluateAutoScaleParameter:
    type: object
    properties:
      autoScaleFormula:
        type: string
        displayName: A formula for the desired number of compute nodes in the pool.
    displayName: Parameters for a CloudJobOperations.EvaluateAutoScale request.
    description: The parameters for the request.
  PoolInformation:
    type: object
    properties:
      poolId?:
        type: string
        description: You must specify either poolId or autoPoolSpecification, but not both.
        displayName: The id of an existing pool. All the tasks of the job will run on the specified pool.
      autoPoolSpecification?:
        type: AutoPoolSpecification
        description: You must specify either poolId or autoPoolSpecification, but not both.
        displayName: Characteristics for a temporary 'auto pool'. The Batch service will create this auto pool when the job is submitted.
    displayName: Specifies how a job should be assigned to a pool.
  PoolListPoolUsageMetricsResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The pool usage metrics data.
        items:
          type: PoolUsageMetrics
      odata.nextLink?:
        type: string
        displayName: The URL to get the next set of results.
    displayName: Response to an AccountOperation.ListPoolUsageMetrics request.
  PoolPatchParameter:
    type: object
    properties:
      startTask?:
        type: StartTask
        description: If omitted, any existing start task is left unchanged.
        displayName: A task to run on each compute node as it joins the pool.
      certificateReferences?:
        type: array
        description: If omitted, any existing certificate references are left unchanged.
        displayName: A list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        description: If omitted, any existing application package references are left unchanged.
        displayName: A list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      metadata?:
        type: array
        description: If omitted, any existing metadata is left unchanged.
        displayName: A list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
    displayName: Parameters for a CloudPoolOperations.Patch request.
    description: The parameters for the request.
  PoolResizeParameter:
    type: object
    properties:
      targetDedicated:
        type: integer
        displayName: The desired number of compute nodes in the pool.
        format: int32
      resizeTimeout?:
        type: string
        description: The default value is 10 minutes.
        displayName: The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.
      nodeDeallocationOption?:
        type: string
        displayName: When nodes may be removed from the pool, if the pool size is decreasing.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    displayName: Parameters for a CloudPoolOperations.Resize request.
    description: The parameters for the request.
  PoolSpecification:
    type: object
    properties:
      displayName?:
        type: string
        displayName: The display name for the pool.
      vmSize:
        type: string
        displayName: The size of the virtual machines in the pool. All virtual machines in a pool are the same size.
      cloudServiceConfiguration?:
        type: CloudServiceConfiguration
        description: This property and VirtualMachineConfiguration are mutually exclusive and one of the properties must be specified.
        displayName: The cloud service configuration for the pool.
      virtualMachineConfiguration?:
        type: VirtualMachineConfiguration
        description: This property and CloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
        displayName: The virtual machine configuration for the pool.
      maxTasksPerNode?:
        type: integer
        displayName: The maximum number of tasks that can run concurrently on a single compute node in the pool.
        format: int32
      taskSchedulingPolicy?:
        type: TaskSchedulingPolicy
        description: How tasks are distributed among compute nodes in the pool.
      resizeTimeout?:
        type: string
        displayName: The timeout for allocation of compute nodes to the pool.
      targetDedicated?:
        type: integer
        displayName: The desired number of compute nodes in the pool.
        format: int32
      enableAutoScale?:
        type: boolean
        displayName: Whether the pool size should automatically adjust over time.
      autoScaleFormula?:
        type: string
        displayName: The formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        displayName: A time interval for the desired AutoScale evaluation period in the pool.
      enableInterNodeCommunication?:
        type: boolean
        displayName: Whether the pool permits direct communication between nodes.
      networkConfiguration?:
        type: NetworkConfiguration
        displayName: The network configuration for the pool.
      startTask?:
        type: StartTask
        displayName: A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.
      certificateReferences?:
        type: array
        displayName: A list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        displayName: The list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      metadata?:
        type: array
        displayName: A list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
    displayName: Specification for creating a new pool.
  PoolStatistics:
    type: object
    properties:
      url:
        type: string
        displayName: The URL for the statistics.
      startTime:
        type: datetime
        displayName: The start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        displayName: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      usageStats?:
        type: UsageStatistics
        displayName: Statistics related to pool usage, such as the amount of core-time used.
      resourceStats?:
        type: ResourceStatistics
        displayName: Statistics related to resource consumption by compute nodes in the pool.
    displayName: Contains utilization and resource usage statistics for the lifetime of a pool.
  PoolUpdatePropertiesParameter:
    type: object
    properties:
      startTask?:
        type: StartTask
        description: If omitted, any existing start task is removed from the pool.
        displayName: A task to run on each compute node as it joins the pool.
      certificateReferences:
        type: array
        description: If you specify an empty collection, any existing certificate references are removed from the pool.
        displayName: A list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences:
        type: array
        description: If you specify an empty collection, any existing application packages references are removed from the pool.
        displayName: A list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      metadata:
        type: array
        description: If you specify an empty collection, any existing metadata is removed from the pool.
        displayName: A list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
    displayName: Parameters for a CloudPoolOperations.UpdateProperties request.
    description: The parameters for the request.
  PoolUpgradeOSParameter:
    type: object
    properties:
      targetOSVersion:
        type: string
        displayName: The Azure Guest OS version to be installed on the virtual machines in the pool.
    displayName: Parameters for a CloudPoolOperations.UpgradeOS request.
    description: The parameters for the request.
  PoolUsageMetrics:
    type: object
    properties:
      poolId:
        type: string
        displayName: The id of the pool whose metrics are being aggregated.
      startTime:
        type: datetime
        displayName: The start time of the aggregation interval.
      endTime:
        type: datetime
        displayName: The end time of the aggregation interval.
      vmSize:
        type: string
        displayName: The size of virtual machines in the pool. All VMs in a pool are the same size.
      totalCoreHours:
        type: number
        displayName: The total core hours used in the pool during this aggregation interval.
        format: double
      dataIngressGiB:
        type: number
        displayName: The cross data center network ingress in GiB to the pool during this interval.
        format: double
      dataEgressGiB:
        type: number
        displayName: The cross data center network egress in GiB from the pool during this interval.
        format: double
    description: Usage metrics for a pool across an aggregation interval.
  RecentJob:
    type: object
    properties:
      id?:
        type: string
        displayName: The id of the job.
      url?:
        type: string
        displayName: The URL of the job.
    displayName: Information about the most recent job to run under the job schedule.
  ResizeError:
    type: object
    properties:
      code?:
        type: string
        displayName: An identifier for the pool resize error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        displayName: A message describing the pool resize error, intended to be suitable for display in a user interface.
      values?:
        type: array
        displayName: A list of additional error details related to the pool resize error.
        items:
          type: NameValuePair
    displayName: An error that occurred when resizing a pool.
  ResourceFile:
    type: object
    properties:
      blobSource:
        type: string
        displayName: The URL of the file within Azure Blob Storage. This URL should include a shared access signature if the blob is not publicly readable.
      filePath:
        type: string
        displayName: The location to which to download the file, relative to the task's working directory.
      fileMode?:
        type: string
        description: This property will be ignored if it is specified for a resourceFile which will be downloaded to a Windows compute node.
        displayName: The file mode attribute in octal format.
    description: A file to be downloaded from Azure blob storage to a compute node.
  ResourceStatistics:
    type: object
    properties:
      startTime:
        type: datetime
        displayName: The start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        displayName: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      avgCPUPercentage:
        type: number
        displayName: The average CPU usage across all nodes in the pool (percentage per node).
        format: double
      avgMemoryGiB:
        type: number
        displayName: The average memory usage in GiB across all nodes in the pool.
        format: double
      peakMemoryGiB:
        type: number
        displayName: The peak memory usage in GiB across all nodes in the pool.
        format: double
      avgDiskGiB:
        type: number
        displayName: The average used disk space in GiB across all nodes in the pool.
        format: double
      peakDiskGiB:
        type: number
        displayName: The peak used disk space in GiB across all nodes in the pool.
        format: double
      diskReadIOps:
        type: integer
        displayName: The total number of disk read operations across all nodes in the pool.
        format: int64
      diskWriteIOps:
        type: integer
        displayName: The total number of disk write operations across all nodes in the pool.
        format: int64
      diskReadGiB:
        type: number
        displayName: The total amount of data in GiB of disk reads across all nodes in the pool.
        format: double
      diskWriteGiB:
        type: number
        displayName: The total amount of data in GiB of disk writes across all nodes in the pool.
        format: double
      networkReadGiB:
        type: number
        displayName: The total amount of data in GiB of network reads across all nodes in the pool.
        format: double
      networkWriteGiB:
        type: number
        displayName: The total amount of data in GiB of network writes across all nodes in the pool.
        format: double
    displayName: Statistics related to resource consumption by compute nodes in a pool.
  Schedule:
    type: object
    properties:
      doNotRunUntil?:
        type: datetime
        description: If you do not specify a doNotRunUntil time, the schedule becomes ready to create jobs immediately.
        displayName: The earliest time at which any job may be created under this job schedule.
      doNotRunAfter?:
        type: datetime
        displayName: A time after which no job will be created under this job schedule. The schedule will move to the completed state as soon as this deadline is past and there is no active job under this job schedule.
      startWindow?:
        type: string
        description: If a job is not created within the startWindow interval, then the 'opportunity' is lost; no job will be created until the next recurrence of the schedule.
        displayName: The time interval, starting from the time at which the schedule indicates a job should be created, within which a job must be created.
      recurrenceInterval?:
        type: string
        displayName: The time interval between the start times of two successive jobs under the job schedule. A job schedule can have at most one active job under it at any given time.
    displayName: The schedule according to which jobs will be created
  StartTask:
    type: object
    properties:
      commandLine:
        type: string
        description: The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        displayName: The command line of the start task.
      resourceFiles?:
        type: array
        displayName: A list of files that the Batch service will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        displayName: A list of environment variable settings for the start task.
        items:
          type: EnvironmentSetting
      runElevated?:
        type: boolean
        displayName: Whether to run the start task in elevated mode. The default value is false.
      maxTaskRetryCount?:
        type: integer
        displayName: The maximum number of times the task may be retried.
        format: int32
      waitForSuccess?:
        type: boolean
        displayName: Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.
    displayName: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
  StartTaskInformation:
    type: object
    properties:
      state:
        type: string
        displayName: The state of the start task on the compute node.
        enum:
        - running
        - completed
      startTime:
        type: datetime
        displayName: The time at which the start task started running.
      endTime?:
        type: datetime
        displayName: The time at which the start task stopped running.
      exitCode?:
        type: integer
        description: This parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.
        displayName: The exit code of the program specified on the task command line.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        displayName: Any error encountered scheduling the start task.
      retryCount:
        type: integer
        displayName: The number of times the task has been retried by the Batch service.
        format: int32
      lastRetryTime?:
        type: datetime
        displayName: The most recent time at which a retry of the task started running.
    displayName: Information about a start task running on a compute node.
  SubtaskInformation:
    type: object
    properties:
      id?:
        type: integer
        displayName: The id of the subtask.
        format: int32
      nodeInfo?:
        type: ComputeNodeInformation
        displayName: Information about the compute node on which the subtask ran.
      startTime?:
        type: datetime
        displayName: The time at which the subtask started running. If the subtask has been restarted or retried, this is the most recent time at which the subtask started running.
      endTime?:
        type: datetime
        description: This property is set only if the subtask is in the Completed state.
        displayName: The time at which the subtask completed.
      exitCode?:
        type: integer
        description: This parameter is returned only if the subtask is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.
        displayName: The exit code of the program specified on the subtask command line.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        displayName: Details of any error encountered scheduling the subtask.
      state?:
        type: string
        displayName: The current state of the subtask.
        enum:
        - active
        - preparing
        - running
        - completed
      stateTransitionTime?:
        type: datetime
        displayName: The time at which the subtask entered its current state.
      previousState?:
        type: string
        description: This property is not set if the subtask is in its initial Active state.
        displayName: The previous state of the subtask.
        enum:
        - active
        - preparing
        - running
        - completed
      previousStateTransitionTime?:
        type: datetime
        description: This property is not set if the subtask is in its initial Active state.
        displayName: The time at which the subtask entered its previous state.
    displayName: Information about an Azure Batch subtask.
  TaskAddCollectionParameter:
    type: object
    properties:
      value:
        type: array
        displayName: The collection of tasks to add.
        items:
          type: TaskAddParameter
    displayName: A collection of Azure Batch tasks to add.
    description: The tasks to be added.
  TaskAddCollectionResult:
    type: object
    properties:
      value?:
        type: array
        displayName: The results of the add task collection operation.
        items:
          type: TaskAddResult
    displayName: Response to a TaskOperations.AddCollection request.
  TaskAddParameter:
    type: object
    properties:
      id:
        type: string
        description: The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
        displayName: A string that uniquely identifies the task within the job.
      displayName?:
        type: string
        displayName: A display name for the task.
      commandLine:
        type: string
        description: The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
        displayName: The command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordianation command line.
      exitConditions?:
        type: ExitConditions
        description: How the Batch service should respond when the task completes.
      resourceFiles?:
        type: array
        description: For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
        displayName: A list of files that the Batch service will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        displayName: A list of environment variable settings for the task.
        items:
          type: EnvironmentSetting
      affinityInfo?:
        type: AffinityInformation
        displayName: A locality hint that can be used by the Batch service to select a compute node on which to start the new task.
      constraints?:
        type: TaskConstraints
        displayName: The execution constraints that apply to this task.
      runElevated?:
        type: boolean
        displayName: Whether to run the task in elevated mode.
      multiInstanceSettings?:
        type: MultiInstanceSettings
        displayName: Information about how to run the multi-instance task.
      dependsOn?:
        type: TaskDependencies
        displayName: Any other tasks that this task depends on.
      applicationPackageReferences?:
        type: array
        displayName: A list of application packages that the Batch service will deploy to the compute node before running the command line.
        items:
          type: ApplicationPackageReference
    displayName: An Azure Batch task to add.
    description: The task to be added.
  TaskAddResult:
    type: object
    properties:
      status:
        type: string
        displayName: The status of the add task request.
        enum:
        - success
        - clienterror
        - servererror
        - unmapped
      taskId:
        type: string
        displayName: The id of the task for which this is the result.
      eTag?:
        type: string
        displayName: The ETag of the task, if the task was successfully added.
      lastModified?:
        type: datetime
        displayName: The last modified time of the task.
      location?:
        type: string
        displayName: The URL of the task, if the task was successfully added.
      error?:
        type: BatchError
        displayName: The error encountered while attempting to add the task.
    displayName: Result for a single task added as part of an add task collection operation.
  TaskConstraints:
    type: object
    properties:
      maxWallClockTime?:
        type: string
        displayName: The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.
      retentionTime?:
        type: string
        description: The default is infinite.
        displayName: The minimum time to retain the working directory for the task on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the working directory and all its contents.
      maxTaskRetryCount?:
        type: integer
        displayName: The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.
        format: int32
    displayName: Constraints to apply to the Job Manager task.
  TaskDependencies:
    type: object
    properties:
      taskIds?:
        type: array
        displayName: The list of task ids that must complete before this task can be scheduled.
        items:
          type: string
      taskIdRanges?:
        type: array
        displayName: The list of task ranges that must complete before this task can be scheduled.
        items:
          type: TaskIdRange
    displayName: Specifies any dependencies of a task. Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled.
  TaskExecutionInformation:
    type: object
    properties:
      startTime?:
        type: datetime
        description: If the task has been restarted or retried, this is the most recent time at which the task started running.
        displayName: The time at which the task started running.
      endTime?:
        type: datetime
        description: This property is set only if the task is in the Completed state.
        displayName: The time at which the task completed.
      exitCode?:
        type: integer
        description: This parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.
        displayName: The exit code of the program specified on the task command line.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        displayName: Details of any error encountered scheduling the task.
      retryCount:
        type: integer
        displayName: The number of times the task has been retried by the Batch service.
        format: int32
      lastRetryTime?:
        type: datetime
        displayName: The most recent time at which a retry of the task started running.
      requeueCount:
        type: integer
        displayName: The number of times the task has been requeued by the Batch service as the result of a user request.
        format: int32
      lastRequeueTime?:
        type: datetime
        displayName: The most recent time at which the task has been requeued by the Batch service as the result of a user request.
    displayName: Information about the execution of a task.
  TaskIdRange:
    type: object
    properties:
      start:
        type: integer
        displayName: The first task id in the range.
        format: int32
      end:
        type: integer
        displayName: The last task id in the range.
        format: int32
    displayName: A range of task ids that a task can depend on. All tasks with ids in the range must complete successfully before the dependent task can be scheduled.
  TaskInformation:
    type: object
    properties:
      taskUrl?:
        type: string
        displayName: The URL of the task.
      jobId?:
        type: string
        displayName: The id of the job to which the task belongs.
      taskId?:
        type: string
        displayName: The id of the task.
      subtaskId?:
        type: integer
        displayName: The id of the subtask if the task is a multi-instance task.
        format: int32
      taskState:
        type: string
        displayName: The current state of the task.
        enum:
        - active
        - preparing
        - running
        - completed
      executionInfo?:
        type: TaskExecutionInformation
        displayName: Information about the execution of the task.
    displayName: Information about a task running on a compute node.
  TaskSchedulingError:
    type: object
    properties:
      category:
        type: string
        displayName: The category of the task scheduling error.
        enum:
        - usererror
        - servererror
        - unmapped
      code?:
        type: string
        displayName: An identifier for the task scheduling error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        displayName: A message describing the task scheduling error, intended to be suitable for display in a user interface.
      details?:
        type: array
        displayName: The list of additional error details related to the scheduling error.
        items:
          type: NameValuePair
    displayName: Information about an error when scheduling a task.
  TaskSchedulingPolicy:
    type: object
    properties:
      nodeFillType:
        type: string
        displayName: How tasks should be distributed across compute nodes
        enum:
        - spread
        - pack
        - unmapped
    displayName: Specifies how tasks should be distributed across compute nodes.
  TaskStatistics:
    type: object
    properties:
      url:
        type: string
        displayName: The URL of the statistics.
      startTime:
        type: datetime
        displayName: The start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        displayName: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      userCPUTime:
        type: string
        displayName: The total user mode CPU time (summed across all cores and all compute nodes) consumed by the task.
      kernelCPUTime:
        type: string
        displayName: The total kernel mode CPU time (summed across all cores and all compute nodes) consumed by the task.
      wallClockTime:
        type: string
        displayName: The total wall clock time of the task.
      readIOps:
        type: integer
        displayName: The total number of disk read operations made by the task.
        format: int64
      writeIOps:
        type: integer
        displayName: The total number of disk write operations made by the task.
        format: int64
      readIOGiB:
        type: number
        displayName: The total gibibytes read from disk by the task.
        format: double
      writeIOGiB:
        type: number
        displayName: The total gibibytes written to disk by the task.
        format: double
      waitTime:
        type: string
        displayName: The total wait time of the task. The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)
    displayName: Resource usage statistics for a task.
  TaskUpdateParameter:
    type: object
    properties:
      constraints?:
        type: TaskConstraints
        description: If omitted, the task is given the default constraints.
        displayName: Constraints that apply to this task.
    displayName: Parameters for a CloudTaskOperations.Update request.
    description: The parameters for the request.
  UsageStatistics:
    type: object
    properties:
      startTime:
        type: datetime
        displayName: The start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        displayName: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      dedicatedCoreTime:
        type: string
        displayName: The aggregated wall-clock time of the dedicated compute node cores being part of the pool.
    displayName: Statistics related to pool usage information.
  VirtualMachineConfiguration:
    type: object
    properties:
      imageReference:
        type: ImageReference
        displayName: A reference to the Azure Virtual Machines Marketplace image to use.
      nodeAgentSKUId:
        type: string
        description: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems.
        displayName: The SKU of Batch Node Agent to be provisioned on the compute node.
      windowsConfiguration?:
        type: WindowsConfiguration
        description: This property must not be specified if the imageReference property specifies a Linux OS image.
        displayName: Windows operating system settings on the virtual machine.
    displayName: The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.
  WindowsConfiguration:
    type: object
    properties:
      enableAutomaticUpdates?:
        type: boolean
        description: If omitted, the default value is true.
        displayName: Whether automatic updates are enabled on the virtual machine.
    displayName: Windows operating system settings to apply to the virtual machine.
/applications:
  /{applicationId}:
    uriParameters:
      applicationId:
        type: string
        description: The id of the application.
        displayName: applicationId
    get:
      displayName: Gets information about the specified application.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
          body:
            application/json:
              type: ApplicationSummary
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
  get:
    displayName: Lists all of the applications available in the specified account.
    queryParameters:
      maxresults?:
        type: integer
        description: The maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: ApplicationListResult
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
    (extras.Pagination):
      nextLinkName: odata.nextLink
/certificates:
  get:
    description: Lists all of the certificates that have been added to the specified account.
    queryParameters:
      $filter?:
        type: string
        description: An OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: An OData $select clause.
        displayName: $select
      maxresults?:
        type: integer
        description: The maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: Gets the list of certificates.
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: CertificateListResult
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
    (extras.Pagination):
      nextLinkName: odata.nextLink
  post:
    displayName: Adds a certificate to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: CertificateAddParameter
    responses:
      201:
        description: Initial response
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
          DataServiceId?:
            type: string
            description: The OData id of the resource to which the request applied.
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint}):
  uriParameters:
    thumbprintAlgorithm:
      type: string
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
      displayName: thumbprintAlgorithm
    thumbprint:
      type: string
      description: The thumbprint of the certificate to get.
      displayName: thumbprint
  /canceldelete:
    post:
      displayName: Cancels a failed deletion of a certificate from the specified account.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
      responses:
        204:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
            DataServiceId?:
              type: string
              description: The OData id of the resource to which the request applied.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
  get:
    description: Gets information about the specified certificate.
    queryParameters:
      $select?:
        type: string
        description: An OData $select clause.
        displayName: $select
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: Certificate
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
  delete:
    displayName: Deletes a certificate from the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      202:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
/jobs:
  /{jobId}:
    uriParameters:
      jobId:
        type: string
        description: The id of the job.
        displayName: jobId
    /addtaskcollection:
      post:
        displayName: Adds a collection of tasks to the specified job.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        body:
          application/json: TaskAddCollectionParameter
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
            body:
              application/json:
                type: TaskAddCollectionResult
          500:
            description: Unexpected error
            body:
              application/json:
                type: BatchError
    /disable:
      post:
        displayName: Disables the specified job, preventing new tasks from running.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: JobDisableParameter
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /enable:
      post:
        displayName: Enables the specified job, allowing new tasks to run.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /jobpreparationandreleasetaskstatus:
      get:
        displayName: Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.
        queryParameters:
          $filter?:
            type: string
            description: An OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: An OData $select clause.
            displayName: $select
          maxresults?:
            type: integer
            description: The maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
            body:
              application/json:
                type: CloudJobListPreparationAndReleaseTaskStatusResult
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
        (extras.Pagination):
          nextLinkName: odata.nextLink
    /tasks:
      /{taskId}:
        uriParameters:
          taskId:
            type: string
            description: The id of the task to get information about.
            displayName: taskId
        /files:
          /{fileName}:
            uriParameters:
              fileName:
                type: string
                description: The path to the task file that you want to get the content of.
                displayName: fileName
            get:
              description: Returns the content of the specified task file.
              queryParameters:
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                ocp-range?:
                  type: string
                  description: The byte range to be retrieved. The default is to retrieve the entire file. The format is bytes=startRange-endRange.
                  displayName: ocp-range
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
              responses:
                200:
                  description: ''
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                    ETag?:
                      type: string
                      description: The content of the ETag HTTP response header.
                    Last-Modified?:
                      type: string
                      description: The content of the Last-Modified HTTP response header.
                    ocp-creation-time?:
                      type: string
                      description: The file creation time.
                    ocp-batch-file-isdirectory?:
                      type: boolean
                      description: Whether the object represents a directory.
                    ocp-batch-file-url?:
                      type: string
                      description: The URL of the file.
                    ocp-batch-file-mode?:
                      type: string
                      description: The file mode attribute in octal format.
                    Content-Type?:
                      type: string
                      description: The content type of the file.
                    Content-Length?:
                      type: integer
                      description: The length of the file.
                      format: int64
                  body:
                    application/json:
                      type: file
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
            head:
              description: Gets the properties of the specified task file.
              queryParameters:
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
              responses:
                200:
                  description: Found the file
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                    ETag?:
                      type: string
                      description: The content of the ETag HTTP response header.
                    Last-Modified?:
                      type: string
                      description: The content of the Last-Modified HTTP response header.
                    ocp-creation-time?:
                      type: string
                      description: The file creation time.
                    ocp-batch-file-isdirectory?:
                      type: boolean
                      description: Whether the object represents a directory.
                    ocp-batch-file-url?:
                      type: string
                      description: The URL of the file.
                    ocp-batch-file-mode?:
                      type: string
                      description: The file mode attribute in octal format.
                    Content-Type?:
                      type: string
                      description: The content type of the file.
                    Content-Length?:
                      type: integer
                      description: The length of the file.
                      format: int64
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
            delete:
              displayName: Deletes the specified task file from the compute node where the task ran.
              queryParameters:
                recursive?:
                  type: boolean
                  description: Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail.
                  displayName: recursive
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
              responses:
                200:
                  description: ''
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
          get:
            displayName: Lists the files in a task's directory on its compute node.
            queryParameters:
              $filter?:
                type: string
                description: An OData $filter clause.
                displayName: $filter
              recursive?:
                type: boolean
                description: Whether to list children of a directory.
                displayName: recursive
              maxresults?:
                type: integer
                description: The maximum number of items to return in the response.
                displayName: maxresults
                format: int32
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            responses:
              200:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                body:
                  application/json:
                    type: NodeFileListResult
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
            (extras.Pagination):
              nextLinkName: odata.nextLink
        /reactivate:
          post:
            description: Reactivation makes a task eligible to be retried again up to its maximum retry count. This will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, this will fail if the job has completed (or is terminating or deleting).
            displayName: Reactivates the specified task.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
              If-Match?:
                type: string
                description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
                displayName: If-Match
              If-None-Match?:
                type: string
                description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
                displayName: If-None-Match
              If-Modified-Since?:
                type: string
                description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                displayName: If-Modified-Since
              If-Unmodified-Since?:
                type: string
                description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                displayName: If-Unmodified-Since
            responses:
              204:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                  DataServiceId?:
                    type: string
                    description: The OData id of the resource to which the request applied.
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /subtasksinfo:
          get:
            displayName: Lists all of the subtasks that are associated with the specified multi-instance task.
            queryParameters:
              $select?:
                type: string
                description: An OData $select clause.
                displayName: $select
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            responses:
              200:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                body:
                  application/json:
                    type: CloudTaskListSubtasksResult
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /terminate:
          post:
            displayName: Terminates the specified task.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
              If-Match?:
                type: string
                description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
                displayName: If-Match
              If-None-Match?:
                type: string
                description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
                displayName: If-None-Match
              If-Modified-Since?:
                type: string
                description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                displayName: If-Modified-Since
              If-Unmodified-Since?:
                type: string
                description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                displayName: If-Unmodified-Since
            responses:
              204:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                  DataServiceId?:
                    type: string
                    description: The OData id of the resource to which the request applied.
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        get:
          description: Gets information about the specified task.
          queryParameters:
            $select?:
              type: string
              description: An OData $select clause.
              displayName: $select
            $expand?:
              type: string
              description: An OData $expand clause.
              displayName: $expand
            timeout?:
              type: integer
              description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Whether the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
            If-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
              displayName: If-Match
            If-None-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
              displayName: If-None-Match
            If-Modified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
              displayName: If-Modified-Since
            If-Unmodified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
              displayName: If-Unmodified-Since
          responses:
            200:
              description: ''
              headers:
                client-request-id?:
                  type: string
                  description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                request-id?:
                  type: string
                  description: The value that uniquely identifies a request.
                ETag?:
                  type: string
                  description: The content of the ETag HTTP response header.
                Last-Modified?:
                  type: string
                  description: The content of the Last-Modified HTTP response header.
                DataServiceId?:
                  type: string
                  description: The OData id of the resource to which the request applied.
              body:
                application/json:
                  type: CloudTask
            500:
              description: The error from the Batch service.
              body:
                application/json:
                  type: BatchError
        delete:
          displayName: Deletes a task from the specified job.
          queryParameters:
            timeout?:
              type: integer
              description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Whether the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
            If-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
              displayName: If-Match
            If-None-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
              displayName: If-None-Match
            If-Modified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
              displayName: If-Modified-Since
            If-Unmodified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
              displayName: If-Unmodified-Since
          responses:
            200:
              description: ''
              headers:
                client-request-id?:
                  type: string
                  description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                request-id?:
                  type: string
                  description: The value that uniquely identifies a request.
            500:
              description: The error from the Batch service.
              body:
                application/json:
                  type: BatchError
        put:
          description: Updates the properties of the specified task.
          queryParameters:
            timeout?:
              type: integer
              description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Whether the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
            If-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
              displayName: If-Match
            If-None-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
              displayName: If-None-Match
            If-Modified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
              displayName: If-Modified-Since
            If-Unmodified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
              displayName: If-Unmodified-Since
          body:
            application/json: TaskUpdateParameter
          responses:
            200:
              description: ''
              headers:
                client-request-id?:
                  type: string
                  description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                request-id?:
                  type: string
                  description: The value that uniquely identifies a request.
                ETag?:
                  type: string
                  description: The content of the ETag HTTP response header.
                Last-Modified?:
                  type: string
                  description: The content of the Last-Modified HTTP response header.
                DataServiceId?:
                  type: string
                  description: The OData id of the resource to which the request applied.
            500:
              description: The error from the Batch service.
              body:
                application/json:
                  type: BatchError
      get:
        description: Lists all of the tasks that are associated with the specified job.
        queryParameters:
          $filter?:
            type: string
            description: An OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: An OData $select clause.
            displayName: $select
          $expand?:
            type: string
            description: An OData $expand clause.
            displayName: $expand
          maxresults?:
            type: integer
            description: The maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
            body:
              application/json:
                type: CloudTaskListResult
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
        (extras.Pagination):
          nextLinkName: odata.nextLink
      post:
        displayName: Adds a task to the specified job.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        body:
          application/json: TaskAddParameter
        responses:
          201:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /terminate:
      post:
        displayName: Terminates the specified job, marking it as completed.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: JobTerminateParameter
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    get:
      description: Gets information about the specified job.
      queryParameters:
        $select?:
          type: string
          description: An OData $select clause.
          displayName: $select
        $expand?:
          type: string
          description: An OData $expand clause.
          displayName: $expand
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
          body:
            application/json:
              type: CloudJob
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    delete:
      displayName: Deletes a job.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        202:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    patch:
      description: Updates the properties of a job.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobPatchParameter
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
            DataServiceId?:
              type: string
              description: The OData id of the resource to which the request applied.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    put:
      description: Updates the properties of a job.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobUpdateParameter
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
            DataServiceId?:
              type: string
              description: The OData id of the resource to which the request applied.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
  get:
    description: Lists all of the jobs in the specified account.
    queryParameters:
      $filter?:
        type: string
        description: An OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: An OData $select clause.
        displayName: $select
      $expand?:
        type: string
        description: An OData $expand clause.
        displayName: $expand
      maxresults?:
        type: integer
        description: The maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: CloudJobListResult
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
    (extras.Pagination):
      nextLinkName: odata.nextLink
  post:
    displayName: Adds a job to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: JobAddParameter
    responses:
      201:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
          DataServiceId?:
            type: string
            description: The OData id of the resource to which the request applied.
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
/jobschedules:
  /{jobScheduleId}:
    uriParameters:
      jobScheduleId:
        type: string
        description: The id of the job schedule to get.
        displayName: jobScheduleId
    /disable:
      post:
        displayName: Disables a job schedule.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        responses:
          204:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /enable:
      post:
        displayName: Enables a job schedule.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        responses:
          204:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /jobs:
      get:
        displayName: Lists the jobs that have been created under the specified job schedule.
        queryParameters:
          $filter?:
            type: string
            description: An OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: An OData $select clause.
            displayName: $select
          $expand?:
            type: string
            description: An OData $expand clause.
            displayName: $expand
          maxresults?:
            type: integer
            description: The maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
            body:
              application/json:
                type: CloudJobListResult
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
        (extras.Pagination):
          nextLinkName: odata.nextLink
    /terminate:
      post:
        displayName: Terminates a job schedule.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    get:
      description: Gets information about the specified job schedule.
      queryParameters:
        $select?:
          type: string
          description: An OData $select clause.
          displayName: $select
        $expand?:
          type: string
          description: An OData $expand clause.
          displayName: $expand
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
          body:
            application/json:
              type: CloudJobSchedule
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    head:
      displayName: Checks the specified job schedule exists.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        200:
          description: Found the jobschedule.
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
        404:
          description: JobSchedules not found
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    delete:
      description: Deletes a job schedule from the specified account.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        202:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    patch:
      description: Updates the properties of the specified job schedule.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobSchedulePatchParameter
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
            DataServiceId?:
              type: string
              description: The OData id of the resource to which the request applied.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    put:
      description: Updates the properties of the specified job schedule.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobScheduleUpdateParameter
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
            DataServiceId?:
              type: string
              description: The OData id of the resource to which the request applied.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
  get:
    description: Lists all of the job schedules in the specified account.
    queryParameters:
      $filter?:
        type: string
        description: An OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: An OData $select clause.
        displayName: $select
      $expand?:
        type: string
        description: An OData $expand clause.
        displayName: $expand
      maxresults?:
        type: integer
        description: The maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: CloudJobScheduleListResult
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
    (extras.Pagination):
      nextLinkName: odata.nextLink
  post:
    displayName: Adds a job schedule to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: JobScheduleAddParameter
    responses:
      201:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
          DataServiceId?:
            type: string
            description: The OData id of the resource to which the request applied.
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
/lifetimejobstats:
  get:
    description: Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.
    displayName: Gets lifetime summary statistics for all of the jobs in the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: JobStatistics
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
/lifetimepoolstats:
  get:
    description: Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
    displayName: Gets lifetime summary statistics for all of the pools in the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: PoolStatistics
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
/nodeagentskus:
  get:
    displayName: Lists all node agent SKUs supported by the Azure Batch service.
    queryParameters:
      $filter?:
        type: string
        description: An OData $filter clause.
        displayName: $filter
      maxresults?:
        type: integer
        description: The maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: AccountListNodeAgentSkusResult
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
    (extras.Pagination):
      nextLinkName: odata.nextLink
/pools:
  /{poolId}:
    uriParameters:
      poolId:
        type: string
        description: The id of the pool to get.
        displayName: poolId
    /disableautoscale:
      post:
        displayName: Disables automatic scaling for a pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /enableautoscale:
      post:
        displayName: Enables automatic scaling for a pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: PoolEnableAutoScaleParameter
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /evaluateautoscale:
      post:
        displayName: Gets the result of evaluating an automatic scaling formula on the pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        body:
          application/json: PoolEvaluateAutoScaleParameter
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
            body:
              application/json:
                type: AutoScaleRun
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /nodes:
      /{nodeId}:
        uriParameters:
          nodeId:
            type: string
            description: The id of the compute node that you want to get information about.
            displayName: nodeId
        /disablescheduling:
          post:
            displayName: Disables task scheduling on the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: NodeDisableSchedulingParameter
            responses:
              200:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                  DataServiceId?:
                    type: string
                    description: The OData id of the resource to which the request applied.
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /enablescheduling:
          post:
            displayName: Enables task scheduling on the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            responses:
              200:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                  DataServiceId?:
                    type: string
                    description: The OData id of the resource to which the request applied.
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /files:
          /{fileName}:
            uriParameters:
              fileName:
                type: string
                description: The path to the task file that you want to get the content of.
                displayName: fileName
            get:
              description: Returns the content of the specified task file.
              queryParameters:
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                ocp-range?:
                  type: string
                  description: The byte range to be retrieved. The default is to retrieve the entire file. The format is bytes=startRange-endRange.
                  displayName: ocp-range
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
              responses:
                200:
                  description: ''
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                    ETag?:
                      type: string
                      description: The content of the ETag HTTP response header.
                    Last-Modified?:
                      type: string
                      description: The content of the Last-Modified HTTP response header.
                    ocp-creation-time?:
                      type: string
                      description: The file creation time.
                    ocp-batch-file-isdirectory?:
                      type: boolean
                      description: Whether the object represents a directory.
                    ocp-batch-file-url?:
                      type: string
                      description: The URL of the file.
                    ocp-batch-file-mode?:
                      type: string
                      description: The file mode attribute in octal format.
                    Content-Type?:
                      type: string
                      description: The content type of the file.
                    Content-Length?:
                      type: integer
                      description: The length of the file.
                      format: int64
                  body:
                    application/json:
                      type: file
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
            head:
              description: Gets the properties of the specified compute node file.
              queryParameters:
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
              responses:
                200:
                  description: Found the file
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                    ETag?:
                      type: string
                      description: The content of the ETag HTTP response header.
                    Last-Modified?:
                      type: string
                      description: The content of the Last-Modified HTTP response header.
                    ocp-creation-time?:
                      type: string
                      description: The file creation time.
                    ocp-batch-file-isdirectory?:
                      type: boolean
                      description: Whether the object represents a directory.
                    ocp-batch-file-url?:
                      type: string
                      description: The URL of the file.
                    ocp-batch-file-mode?:
                      type: string
                      description: The file mode attribute in octal format.
                    Content-Type?:
                      type: string
                      description: The content type of the file.
                    Content-Length?:
                      type: integer
                      description: The length of the file.
                      format: int64
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
            delete:
              displayName: Deletes the specified task file from the compute node.
              queryParameters:
                recursive?:
                  type: boolean
                  description: Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail.
                  displayName: recursive
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
              responses:
                200:
                  description: ''
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
          get:
            displayName: Lists all of the files in task directories on the specified compute node.
            queryParameters:
              $filter?:
                type: string
                description: An OData $filter clause.
                displayName: $filter
              recursive?:
                type: boolean
                description: Whether to list children of a directory.
                displayName: recursive
              maxresults?:
                type: integer
                description: The maximum number of items to return in the response.
                displayName: maxresults
                format: int32
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            responses:
              200:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                body:
                  application/json:
                    type: NodeFileListResult
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
            (extras.Pagination):
              nextLinkName: odata.nextLink
        /rdp:
          get:
            displayName: Gets the Remote Desktop Protocol file for the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            responses:
              200:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                body:
                  application/json:
                    type: file
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /reboot:
          post:
            displayName: Restarts the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: NodeRebootParameter
            responses:
              202:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                  DataServiceId?:
                    type: string
                    description: The OData id of the resource to which the request applied.
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /reimage:
          post:
            displayName: Reinstalls the operating system on the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: NodeReimageParameter
            responses:
              202:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                  DataServiceId?:
                    type: string
                    description: The OData id of the resource to which the request applied.
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /remoteloginsettings:
          get:
            displayName: Gets the settings required for remote login to a compute node.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            responses:
              200:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                body:
                  application/json:
                    type: ComputeNodeGetRemoteLoginSettingsResult
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        /users:
          /{userName}:
            uriParameters:
              userName:
                type: string
                description: The name of the user account to delete.
                displayName: userName
            delete:
              displayName: Deletes a user account from the specified compute node.
              queryParameters:
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
              responses:
                200:
                  description: ''
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
            put:
              description: Updates the password or expiration time of a user account on the specified compute node.
              queryParameters:
                timeout?:
                  type: integer
                  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Whether the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
              body:
                application/json: NodeUpdateUserParameter
              responses:
                200:
                  description: ''
                  headers:
                    client-request-id?:
                      type: string
                      description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                    request-id?:
                      type: string
                      description: The value that uniquely identifies a request.
                    ETag?:
                      type: string
                      description: The content of the ETag HTTP response header.
                    Last-Modified?:
                      type: string
                      description: The content of the Last-Modified HTTP response header.
                    DataServiceId?:
                      type: string
                      description: The OData id of the resource to which the request applied.
                500:
                  description: The error from the Batch service.
                  body:
                    application/json:
                      type: BatchError
          post:
            displayName: Adds a user account to the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Whether the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: ComputeNodeUser
            responses:
              201:
                description: ''
                headers:
                  client-request-id?:
                    type: string
                    description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                  request-id?:
                    type: string
                    description: The value that uniquely identifies a request.
                  ETag?:
                    type: string
                    description: The content of the ETag HTTP response header.
                  Last-Modified?:
                    type: string
                    description: The content of the Last-Modified HTTP response header.
                  DataServiceId?:
                    type: string
                    description: The OData id of the resource to which the request applied.
              500:
                description: The error from the Batch service.
                body:
                  application/json:
                    type: BatchError
        get:
          displayName: Gets information about the specified compute node.
          queryParameters:
            $select?:
              type: string
              description: An OData $select clause.
              displayName: $select
            timeout?:
              type: integer
              description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Whether the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
          responses:
            200:
              description: ''
              headers:
                client-request-id?:
                  type: string
                  description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
                request-id?:
                  type: string
                  description: The value that uniquely identifies a request.
                ETag?:
                  type: string
                  description: The content of the ETag HTTP response header.
                Last-Modified?:
                  type: string
                  description: The content of the Last-Modified HTTP response header.
              body:
                application/json:
                  type: ComputeNode
            500:
              description: The error from the Batch service.
              body:
                application/json:
                  type: BatchError
      get:
        description: Lists the compute nodes in the specified pool.
        queryParameters:
          $filter?:
            type: string
            description: An OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: An OData $select clause.
            displayName: $select
          maxresults?:
            type: integer
            description: The maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        responses:
          200:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
            body:
              application/json:
                type: ComputeNodeListResult
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
        (extras.Pagination):
          nextLinkName: odata.nextLink
    /removenodes:
      post:
        displayName: Removes compute nodes from the specified pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: NodeRemoveParameter
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /resize:
      post:
        displayName: Changes the number of compute nodes that are assigned to a pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: PoolResizeParameter
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /stopresize:
      post:
        description: 'This does not restore the pool to its previous state before
          the resize operation: it only stops any further changes being made, and
          the pool maintains its current state.'
        displayName: Stops an ongoing resize operation on the pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /updateproperties:
      post:
        displayName: Updates the properties of a pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        body:
          application/json: PoolUpdatePropertiesParameter
        responses:
          204:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    /upgradeos:
      post:
        displayName: Upgrades the operating system of the specified pool.
        queryParameters:
          timeout?:
            type: integer
            description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Whether the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: PoolUpgradeOSParameter
        responses:
          202:
            description: ''
            headers:
              client-request-id?:
                type: string
                description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
              request-id?:
                type: string
                description: The value that uniquely identifies a request.
              ETag?:
                type: string
                description: The content of the ETag HTTP response header.
              Last-Modified?:
                type: string
                description: The content of the Last-Modified HTTP response header.
              DataServiceId?:
                type: string
                description: The OData id of the resource to which the request applied.
          500:
            description: The error from the Batch service.
            body:
              application/json:
                type: BatchError
    get:
      description: Gets information about the specified pool.
      queryParameters:
        $select?:
          type: string
          description: An OData $select clause.
          displayName: $select
        $expand?:
          type: string
          description: An OData $expand clause.
          displayName: $expand
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
          body:
            application/json:
              type: CloudPool
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    head:
      description: Gets basic properties of a pool.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
        404:
          description: Pool not found
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    delete:
      displayName: Deletes a pool from the specified account.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      responses:
        202:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
    patch:
      description: Updates the properties of a pool.
      queryParameters:
        timeout?:
          type: integer
          description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Whether the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: PoolPatchParameter
      responses:
        200:
          description: ''
          headers:
            client-request-id?:
              type: string
              description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
            request-id?:
              type: string
              description: The value that uniquely identifies a request.
            ETag?:
              type: string
              description: The content of the ETag HTTP response header.
            Last-Modified?:
              type: string
              description: The content of the Last-Modified HTTP response header.
            DataServiceId?:
              type: string
              description: The OData id of the resource to which the request applied.
        500:
          description: The error from the Batch service.
          body:
            application/json:
              type: BatchError
  get:
    description: Lists all of the pools in the specified account.
    queryParameters:
      $filter?:
        type: string
        description: An OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: An OData $select clause.
        displayName: $select
      $expand?:
        type: string
        description: An OData $expand clause.
        displayName: $expand
      maxresults?:
        type: integer
        description: The maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: CloudPoolListResult
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
    (extras.Pagination):
      nextLinkName: odata.nextLink
  post:
    displayName: Adds a pool to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: PoolAddParameter
    responses:
      201:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
          DataServiceId?:
            type: string
            description: The OData id of the resource to which the request applied.
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
/poolusagemetrics:
  get:
    displayName: Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account.
    queryParameters:
      starttime?:
        type: datetime
        description: The earliest time from which to include metrics. This must be at least two and a half hours before the current time.
        displayName: starttime
      endtime?:
        type: datetime
        description: The latest time from which to include metrics. This must be at least two hours before the current time.
        displayName: endtime
      $filter?:
        type: string
        description: An OData $filter clause.
        displayName: $filter
      maxresults?:
        type: integer
        description: The maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Whether the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    responses:
      200:
        description: ''
        headers:
          client-request-id?:
            type: string
            description: The ClientRequestId provided by the client during the request, if present and requested to be returned.
          request-id?:
            type: string
            description: The value that uniquely identifies a request.
          ETag?:
            type: string
            description: The content of the ETag HTTP response header.
          Last-Modified?:
            type: string
            description: The content of the Last-Modified HTTP response header.
        body:
          application/json:
            type: PoolListPoolUsageMetricsResult
      500:
        description: The error from the Batch service.
        body:
          application/json:
            type: BatchError
    (extras.Pagination):
      nextLinkName: odata.nextLink
