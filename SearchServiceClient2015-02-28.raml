#%RAML 1.0
title: SearchServiceClient
version: '2015-02-28'
description: Client that can be used to manage and query indexes and documents, as well as manage other resources, on an Azure Search service.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  IndexerExecutionStatus:
    type: string
    description: Represents the status of an individual indexer execution.
    enum:
    - transientFailure
    - success
    - inProgress
    - reset
  IndexerStatus:
    type: string
    description: Represents the overall indexer status.
    enum:
    - unknown
    - error
    - running
  ScoringFunctionAggregation:
    type: string
    description: Defines the aggregation function used to combine the results of all the scoring functions in a scoring profile.
    enum:
    - sum
    - average
    - minimum
    - maximum
    - firstMatching
  ScoringFunctionInterpolation:
    type: string
    description: Defines the function used to interpolate score boosting across a range of documents.
    enum:
    - linear
    - constant
    - quadratic
    - logarithmic
  SuggesterSearchMode:
    type: string
    description: Describes the type of suggester to use.
    enum:
    - analyzingInfixMatching
  CorsOptions:
    type: object
    properties:
      allowedOrigins:
        type: array
        description: Gets the list of origins from which JavaScript code will be granted access to your index. Can contain a list of hosts of the form {protocol}://{fully-qualified-domain-name}[:{port#}], or a single '*' to allow all origins (not recommended).
        items:
          type: string
      maxAgeInSeconds?:
        type: integer
        description: Gets or sets the duration for which browsers should cache CORS preflight responses. Defaults to 5 mintues.
        format: int64
    description: Defines options to control Cross-Origin Resource Sharing (CORS) for an index.
  DataChangeDetectionPolicy:
    type: object
    properties:
      '@odata.type':
        type: string
    description: Abstract base class for data change detection policies.
    discriminator: '@odata.type'
  DataContainer:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the name of the table or view (for Azure SQL data source) or collection (for DocumentDB data source) that will be indexed.
      query?:
        type: string
        description: Gets or sets a query that is applied to this data container. Only supported by DocumentDb datasources.
    description: Represents information about the entity (such as Azure SQL table or DocumentDb collection) that will be indexed.
  DataDeletionDetectionPolicy:
    type: object
    properties:
      '@odata.type':
        type: string
    description: Abstract base class for data deletion detection policies.
    discriminator: '@odata.type'
  DataSource:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the name of the datasource.
      description?:
        type: string
        description: Gets or sets the description of the datasource.
      type:
        type: string
        description: Gets or sets the type of the datasource.
      credentials:
        type: DataSourceCredentials
        description: Gets or sets credentials for the datasource.
      container:
        type: DataContainer
        description: Gets or sets the data container for the datasource.
      dataChangeDetectionPolicy?:
        type: DataChangeDetectionPolicy
        description: Gets or sets the data change detection policy for the datasource.
      dataDeletionDetectionPolicy?:
        type: DataDeletionDetectionPolicy
        description: Gets or sets the data deletion detection policy for the datasource.
    description: The definition of the datasource to create or update.
  DataSourceCredentials:
    type: object
    properties:
      connectionString:
        type: string
        description: Gets or sets the connection string for the datasource.
    description: Represents credentials that can be used to connect to a datasource.
  DataSourceListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets the datasources in the Search service.
        items:
          type: DataSource
    description: Response from a List Datasources request. If successful, it includes the full definitions of all datasources.
  DistanceScoringFunction:
    type: ScoringFunction
    description: Defines a function that boosts scores based on distance from a geographic location.
  DistanceScoringParameters:
    type: object
    properties:
      referencePointParameter:
        type: string
        description: Gets or sets the name of the parameter passed in search queries to specify the reference location.
      boostingDistance:
        type: number
        description: Gets or sets the distance in kilometers from the reference location where the boosting range ends.
        format: double
    description: Provides parameter values to a distance scoring function.
  Field:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the name of the field.
      type:
        type: string
        description: Gets or sets the data type of the field.
      analyzer?:
        type: string
        description: Name of the text analyzer to use.
      key?:
        type: boolean
        description: Gets or sets a value indicating whether the field is the key of the index. Valid only for string fields. Every index must have exactly one key field.
      searchable?:
        type: boolean
        description: Gets or sets a value indicating whether the field is included in full-text searches. Valid only forstring or string collection fields. Default is false.
      filterable?:
        type: boolean
        description: Gets or sets a value indicating whether the field can be used in filter expressions. Default is false.
      sortable?:
        type: boolean
        description: Gets or sets a value indicating whether the field can be used in orderby expressions. Not valid for string collection fields. Default is false.
      facetable?:
        type: boolean
        description: Gets or sets a value indicating whether it is possible to facet on this field. Not valid for geo-point fields. Default is false.
      retrievable?:
        type: boolean
        description: Gets or sets a value indicating whether the field can be returned in a search result. Default is true.
    description: Represents a field in an index definition in Azure Search, which describes the name, data type, and search behavior of a field.
  FreshnessScoringFunction:
    type: ScoringFunction
    description: Defines a function that boosts scores based on the value of a date-time field.
  FreshnessScoringParameters:
    type: object
    properties:
      boostingDuration:
        type: string
        description: Gets or sets the expiration period after which boosting will stop for a particular document.
    description: Provides parameter values to a freshness scoring function.
  HighWaterMarkChangeDetectionPolicy:
    type: DataChangeDetectionPolicy
    description: Defines a data change detection policy that captures changes based on the value of a high water mark column.
  Index:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the name of the index.
      fields:
        type: array
        description: Gets or sets the fields of the index.
        items:
          type: Field
      scoringProfiles?:
        type: array
        description: Gets or sets the scoring profiles for the index.
        items:
          type: ScoringProfile
      defaultScoringProfile?:
        type: string
        description: Gets or sets the name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used.
      corsOptions?:
        type: CorsOptions
        description: Gets or sets options to control Cross-Origin Resource Sharing (CORS) for the index.
      suggesters?:
        type: array
        description: Gets or sets the suggesters for the index.
        items:
          type: Suggester
    description: The definition of the index to create or update.
  IndexGetStatisticsResult:
    type: object
    properties:
      documentCount?:
        type: integer
        description: Gets the number of documents in the index.
        format: int64
      storageSize?:
        type: integer
        description: Gets the amount of storage in bytes consumed by the index.
        format: int64
    description: Statistics for a given index. Statistics are collected periodically and are not guaranteed to always be up-to-date.
  IndexListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets the indexes in the Search service.
        items:
          type: Index
    description: Response from a List Indexes request. If successful, it includes the full definitions of all indexes.
  Indexer:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the name of the indexer.
      description?:
        type: string
        description: Gets or sets the description of the indexer.
      dataSourceName:
        type: string
        description: Gets or sets the name of the datasource from which this indexer reads data.
      targetIndexName:
        type: string
        description: Gets or sets the name of the index to which this indexer writes data.
      schedule?:
        type: IndexingSchedule
        description: Gets or sets the schedule for this indexer.
      parameters?:
        type: IndexingParameters
        description: Gets or sets parameters for indexer execution.
    description: The definition of the indexer to create or update.
  IndexerExecutionInfo:
    type: object
    properties:
      status?:
        type: IndexerStatus
        description: Overall indexer status.
      lastResult?:
        type: IndexerExecutionResult
        description: The result of the most recent or an in-progress indexer execution.
      executionHistory?:
        type: array
        description: History of the recent indexer executions, sorted in reverse chronological order.
        items:
          type: IndexerExecutionResult
    description: Represents the current status and execution history of an indexer.
  IndexerExecutionResult:
    type: object
    properties:
      status?:
        type: IndexerExecutionStatus
        description: Gets the outcome of this indexer execution.
      errorMessage?:
        type: string
        description: Gets the error message indicating the top-level error, if any.
      startTime?:
        type: datetime
        description: Gets the start time of this indexer execution.
      endTime?:
        type: datetime
        description: Gets the end time of this indexer execution, if the execution has already completed.
      errors?:
        type: array
        description: Gets the item-level indexing errors
        items:
          type: ItemError
      itemsProcessed?:
        type: integer
        description: Gets the number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed.
        format: int32
      itemsFailed?:
        type: integer
        description: Gets the number of items that failed to be indexed during this indexer execution.
        format: int32
      initialTrackingState?:
        type: string
        description: Change tracking state with which an indexer execution started.
      finalTrackingState?:
        type: string
        description: Change tracking state with which an indexer execution finished.
    description: Represents result of an individual indexer execution.
  IndexerListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets the indexers in the Search service.
        items:
          type: Indexer
    description: Response from a List Indexers request. If successful, it includes the full definitions of all indexers.
  IndexingParameters:
    type: object
    properties:
      maxFailedItems?:
        type: integer
        description: Gets or sets the maximum number of items that can fail indexing for indexer execution to still be considered successful. -1 means no limit. Default is 0.
        format: int32
      maxFailedItemsPerBatch?:
        type: integer
        description: Gets or sets the maximum number of items in a single batch that can fail indexing for the batch to still be considered successful. -1 means no limit. Default is 0.
        format: int32
      base64EncodeKeys?:
        type: boolean
        description: Gets or sets whether indexer will base64-encode all values that are inserted into key field of the target index. This is needed if keys can contain characters that are invalid in keys (such as dot '.'). Default is false.
    description: Represents parameters for indexer execution.
  IndexingSchedule:
    type: object
    properties:
      interval:
        type: string
        description: Gets or sets the interval of time between indexer executions.
      startTime?:
        type: datetime
        description: Gets or sets the time when an indexer should start running.
    description: Represents a schedule for indexer execution.
  ItemError:
    type: object
    properties:
      key?:
        type: string
        description: Gets the key of the item for which indexing failed.
      errorMessage?:
        type: string
        description: Gets the message describing the error that occurred while attempting to index the item.
    description: Represents an item- or document-level indexing error.
  MagnitudeScoringFunction:
    type: ScoringFunction
    description: Defines a function that boosts scores based on the magnitude of a numeric field.
  MagnitudeScoringParameters:
    type: object
    properties:
      boostingRangeStart:
        type: number
        description: Gets or sets the field value at which boosting starts.
        format: double
      boostingRangeEnd:
        type: number
        description: Gets or sets the field value at which boosting ends.
        format: double
      constantBoostBeyondRange?:
        type: boolean
        description: Gets or sets a value indicating whether to apply a constant boost for field values beyond the range end value; default is false.
    description: Provides parameter values to a magnitude scoring function.
  ScoringFunction:
    type: object
    properties:
      type:
        type: string
      fieldName:
        type: string
        description: Gets or sets the name of the field used as input to the scoring function.
      boost:
        type: number
        description: Gets or sets a multiplier for the raw score. Must be a positive number not equal to 1.0.
        format: double
      interpolation?:
        type: ScoringFunctionInterpolation
        description: Gets or sets a value indicating how boosting will be interpolated across document scores; defaults to "Linear".
    description: Abstract base class for functions that can modify document scores during ranking.
    discriminator: type
  ScoringProfile:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the name of the scoring profile.
      text?:
        type: TextWeights
        description: Gets or sets parameters that boost scoring based on text matches in certain index fields.
      functions?:
        type: array
        description: Gets the collection of functions that influence the scoring of documents.
        items:
          type: ScoringFunction
      functionAggregation?:
        type: ScoringFunctionAggregation
        description: Gets or sets a value indicating how the results of individual scoring functions should be combined. Defaults to "Sum". Ignored if there are no scoring functions.
    description: Defines parameters for an Azure Search index that influence scoring in search queries.
  SoftDeleteColumnDeletionDetectionPolicy:
    type: DataDeletionDetectionPolicy
    description: Defines a data deletion detection policy that implements a soft-deletion strategy. It determines whether an item should be deleted based on the value of a designated 'soft delete' column.
  SqlIntegratedChangeTrackingPolicy:
    type: DataChangeDetectionPolicy
    description: Defines a data change detection policy that captures changes using the Integrated Change Tracking feature of Azure SQL Database.
  Suggester:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the name of the suggester.
      searchMode:
        type: SuggesterSearchMode
        description: Gets or sets a value indicating the capabilities of the suggester.
      sourceFields:
        type: array
        description: Gets the list of field names to which the suggester applies. Each field must be searchable.
        items:
          type: string
    description: Defines how the Suggest API should apply to a group of fields in the index.
  TagScoringFunction:
    type: ScoringFunction
    description: Defines a function that boosts scores of documents with string values matching a given list of tags.
  TagScoringParameters:
    type: object
    properties:
      tagsParameter:
        type: string
        description: Gets or sets the name of the parameter passed in search queries to specify the list of tags to compare against the target field.
    description: Provides parameter values to a tag scoring function.
  TextWeights:
    type: object
    properties:
      weights:
        type: object
        properties:
          //:
            type: number
            format: double
        description: Gets the dictionary of per-field weights to boost document scoring. The keys are field names and the values are the weights for each field.
    description: Defines weights on index fields for which matches should boost scoring in search queries.
/datasources:
  get:
    description: Lists all datasources available for an Azure Search service.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      200:
        description: ''
        body:
          application/json:
            type: DataSourceListResult
  post:
    description: Creates a new Azure Search datasource.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    body:
      application/json: DataSource
    responses:
      201:
        description: ''
        body:
          application/json:
            type: DataSource
/datasources('{dataSourceName}'):
  uriParameters:
    dataSourceName:
      type: string
      description: The name of the datasource to retrieve.
      displayName: dataSourceName
  get:
    description: Retrieves a datasource definition from Azure Search.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      200:
        description: ''
        body:
          application/json:
            type: DataSource
  delete:
    description: Deletes an Azure Search datasource.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      204:
        description: ''
      404:
        description: ''
  put:
    description: Creates a new Azure Search datasource or updates a datasource if it already exists.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    body:
      application/json: DataSource
    responses:
      200:
        description: ''
        body:
          application/json:
            type: DataSource
      201:
        description: ''
        body:
          application/json:
            type: DataSource
/indexers:
  get:
    description: Lists all indexers available for an Azure Search service.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      200:
        description: ''
        body:
          application/json:
            type: IndexerListResult
  post:
    description: Creates a new Azure Search indexer.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    body:
      application/json: Indexer
    responses:
      201:
        description: ''
        body:
          application/json:
            type: Indexer
/indexers('{indexerName}'):
  uriParameters:
    indexerName:
      type: string
      description: The name of the indexer to retrieve.
      displayName: indexerName
  /search.reset:
    post:
      description: Resets the change tracking state associated with an Azure Search indexer.
      queryParameters:
        api-version:
          type: string
          description: Client Api Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: commons.uuid
          description: Tracking ID sent with the request to help with debugging.
          displayName: client-request-id
      responses:
        204:
          description: ''
  /search.run:
    post:
      description: Runs an Azure Search indexer on-demand.
      queryParameters:
        api-version:
          type: string
          description: Client Api Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: commons.uuid
          description: Tracking ID sent with the request to help with debugging.
          displayName: client-request-id
      responses:
        202:
          description: ''
  /search.status:
    get:
      description: Returns the current status and execution history of an indexer.
      queryParameters:
        api-version:
          type: string
          description: Client Api Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: commons.uuid
          description: Tracking ID sent with the request to help with debugging.
          displayName: client-request-id
      responses:
        200:
          description: ''
          body:
            application/json:
              type: IndexerExecutionInfo
  get:
    description: Retrieves an indexer definition from Azure Search.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      200:
        description: ''
        body:
          application/json:
            type: Indexer
  delete:
    description: Deletes an Azure Search indexer.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      204:
        description: ''
      404:
        description: ''
  put:
    description: Creates a new Azure Search indexer or updates an indexer if it already exists.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    body:
      application/json: Indexer
    responses:
      200:
        description: ''
        body:
          application/json:
            type: Indexer
      201:
        description: ''
        body:
          application/json:
            type: Indexer
/indexes:
  get:
    description: Lists all indexes available for an Azure Search service.
    queryParameters:
      $select?:
        type: string
        description: Selects which properties of the index definitions to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties.
        displayName: $select
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      200:
        description: ''
        body:
          application/json:
            type: IndexListResult
  post:
    description: Creates a new Azure Search index.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    body:
      application/json: Index
    responses:
      201:
        description: ''
        body:
          application/json:
            type: Index
/indexes('{indexName}'):
  uriParameters:
    indexName:
      type: string
      description: The name of the index to retrieve.
      displayName: indexName
  /search.stats:
    get:
      description: Returns statistics for the given index, including a document count and storage usage.
      queryParameters:
        api-version:
          type: string
          description: Client Api Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: commons.uuid
          description: Tracking ID sent with the request to help with debugging.
          displayName: client-request-id
      responses:
        200:
          description: ''
          body:
            application/json:
              type: IndexGetStatisticsResult
  get:
    description: Retrieves an index definition from Azure Search.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      200:
        description: ''
        body:
          application/json:
            type: Index
  delete:
    description: Deletes an Azure Search index and all the documents it contains.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    responses:
      204:
        description: ''
      404:
        description: ''
  put:
    description: Creates a new Azure Search index or updates an index if it already exists.
    queryParameters:
      api-version:
        type: string
        description: Client Api Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: commons.uuid
        description: Tracking ID sent with the request to help with debugging.
        displayName: client-request-id
    body:
      application/json: Index
    responses:
      200:
        description: ''
        body:
          application/json:
            type: Index
      201:
        description: ''
        body:
          application/json:
            type: Index
