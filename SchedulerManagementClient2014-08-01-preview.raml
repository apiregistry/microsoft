#%RAML 1.0
title: SchedulerManagementClient
version: 2014-08-01-preview
baseUri: management.azure.com
mediaType:
- application/json
- text/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  azure_auth:
    type: OAuth 2.0
    description: Azure Active Directory OAuth2 Flow
    settings:
      authorizationGrants:
      - implicit
      authorizationUri: https://login.microsoftonline.com/common/oauth2/authorize
      accessTokenUri: https://login.microsoftonline.com/common/oauth2/authorize
      scopes:
      - user_impersonation
types:
  JobExecutionStatus:
    type: string
    description: Gets the job execution status.
    enum:
    - Completed
    - Failed
    - Postponed
  JobState:
    type: string
    description: Gets or set the job state.
    enum:
    - Enabled
    - Disabled
    - Faulted
    - Completed
  RecurrenceFrequency:
    type: string
    description: Gets or sets the frequency of recurrence (minute, hour, day, week, month).
    enum:
    - Minute
    - Hour
    - Day
    - Week
    - Month
  BasicAuthentication:
    type: HttpAuthentication
  ClientCertAuthentication:
    type: HttpAuthentication
  HttpAuthentication:
    type: object
    properties:
      type?:
        type: string
        description: Gets or sets the http authentication type.
        enum:
        - NotSpecified
        - ClientCertificate
        - ActiveDirectoryOAuth
        - Basic
  HttpRequest:
    type: object
    properties:
      authentication?:
        type: HttpAuthentication
        description: Gets or sets the http authentication.
      uri?:
        type: string
        description: Gets or sets the Uri.
      method?:
        type: string
        description: Gets or sets the method of the request.
      body?:
        type: string
        description: Gets or sets the request body.
      headers?:
        type: object
        properties:
          //:
            type: string
        description: Gets or sets the headers.
  JobAction:
    type: object
    properties:
      type?:
        type: string
        description: Gets or sets the job action type.
        enum:
        - Http
        - Https
        - StorageQueue
        - ServiceBusQueue
        - ServiceBusTopic
      request?:
        type: HttpRequest
        description: Gets or sets the http requests.
      queueMessage?:
        type: StorageQueueMessage
        description: Gets or sets the storage queue message.
      serviceBusQueueMessage?:
        type: ServiceBusQueueMessage
        description: Gets or sets the service bus queue message.
      serviceBusTopicMessage?:
        type: ServiceBusTopicMessage
        description: Gets or sets the service bus topic message.
      retryPolicy?:
        type: RetryPolicy
        description: Gets or sets the retry policy.
      errorAction?:
        type: JobErrorAction
        description: Gets or sets the error action.
  JobCollectionDefinition:
    type: object
    properties:
      id?:
        type: string
        description: Gets the job collection resource identifier.
      type?:
        type: string
        description: Gets the job collection resource type.
      name?:
        type: string
        description: Gets or sets the job collection resource name.
      location?:
        type: string
        description: Gets or sets the storage account location.
      tags?:
        type: object
        properties:
          //:
            type: string
        description: Gets or sets the tags.
      properties?:
        type: JobCollectionProperties
        description: Gets or sets the job collection properties.
    description: The job collection definition.
  JobCollectionListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets the job collections.
        items:
          type: JobCollectionDefinition
      nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of job collections.
  JobCollectionProperties:
    type: object
    properties:
      sku?:
        type: Sku
        description: Gets or sets the SKU.
      state?:
        type: string
        description: Gets or sets the state.
        enum:
        - Enabled
        - Disabled
        - Suspended
        - Deleted
      quota?:
        type: JobCollectionQuota
        description: Gets or sets the job collection quota.
  JobCollectionQuota:
    type: object
    properties:
      maxJobCount?:
        type: integer
        description: Gets or set the maximum job count.
      maxJobOccurrence?:
        type: integer
        description: Gets or sets the maximum job occurrence.
      maxRecurrence?:
        type: JobMaxRecurrence
        description: Gets or set the maximum recurrence.
  JobDefinition:
    type: object
    properties:
      id?:
        type: string
        description: Gets the job resource identifier.
      type?:
        type: string
        description: Gets the job resource type.
      name?:
        type: string
        description: Gets the job resource name.
      properties?:
        type: JobProperties
        description: Gets or sets the job properties.
    description: The job definition.
  JobErrorAction:
    type: object
    properties:
      type?:
        type: string
        description: Gets or sets the job error action type.
        enum:
        - Http
        - Https
        - StorageQueue
        - ServiceBusQueue
        - ServiceBusTopic
      request?:
        type: HttpRequest
        description: Gets or sets the http requests.
      queueMessage?:
        type: StorageQueueMessage
        description: Gets or sets the storage queue message.
      serviceBusQueueMessage?:
        type: ServiceBusQueueMessage
        description: Gets or sets the service bus queue message.
      serviceBusTopicMessage?:
        type: ServiceBusTopicMessage
        description: Gets or sets the service bus topic message.
      retryPolicy?:
        type: RetryPolicy
        description: Gets or sets the retry policy.
  JobHistoryDefinition:
    type: object
    properties:
      id?:
        type: string
        description: Gets the job history identifier.
      type?:
        type: string
        description: Gets the job history resource type.
      name?:
        type: string
        description: Gets the job history name.
      properties?:
        type: JobHistoryDefinitionProperties
        description: Gets or sets the job history properties.
  JobHistoryDefinitionProperties:
    type: object
    properties:
      startTime?:
        type: datetime
        description: Gets the start time for this job.
      endTime?:
        type: datetime
        description: Gets the end time for this job.
      expectedExecutionTime?:
        type: datetime
        description: Gets the expected execution time for this job.
      actionName?:
        type: string
        description: Gets the job history action name.
        enum:
        - MainAction
        - ErrorAction
      status?:
        type: JobExecutionStatus
        description: Gets the job history status.
      message?:
        type: string
        description: Gets the message for the job history.
      retryCount?:
        type: integer
        description: Gets the retry count for job.
      repeatCount?:
        type: integer
        description: Gets the repeat count for the job.
  JobHistoryFilter:
    type: object
    properties:
      status?:
        type: JobExecutionStatus
        description: Gets or sets the job execution status.
  JobHistoryListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the job histories under job.
        items:
          type: JobHistoryDefinition
      nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of job histories.
  JobListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets all jobs under job collection.
        items:
          type: JobDefinition
      nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of jobs.
  JobMaxRecurrence:
    type: object
    properties:
      frequency?:
        type: string
        description: Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
        enum:
        - Minute
        - Hour
        - Day
        - Week
        - Month
      interval?:
        type: integer
        description: Gets or sets the interval between retries.
  JobProperties:
    type: object
    properties:
      startTime?:
        type: datetime
        description: Gets or sets the job start time.
      action?:
        type: JobAction
        description: Gets or sets the job action.
      recurrence?:
        type: JobRecurrence
        description: Gets or sets the job recurrence.
      state?:
        type: JobState
        description: Gets or set the job state.
      status?:
        type: JobStatus
        description: Gets the job status.
  JobRecurrence:
    type: object
    properties:
      frequency?:
        type: string
        description: Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
        enum:
        - Minute
        - Hour
        - Day
        - Week
        - Month
      interval?:
        type: integer
        description: Gets or sets the interval between retries.
      count?:
        type: integer
        description: Gets or sets the maximum number of times that the job should run.
      endTime?:
        type: datetime
        description: Gets or sets the time at which the job will complete.
      schedule?:
        type: JobRecurrenceSchedule
  JobRecurrenceSchedule:
    type: object
    properties:
      weekDays?:
        type: array
        description: Gets or sets the days of the week that the job should execute on.
        items:
          type: string
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
      hours?:
        type: array
        description: Gets or sets the hours of the day that the job should execute at.
        items:
          type: integer
      minutes?:
        type: array
        description: Gets or sets the minutes of the hour that the job should execute at.
        items:
          type: integer
      monthDays?:
        type: array
        description: Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.
        items:
          type: integer
      monthlyOccurrences?:
        type: array
        description: Gets or sets the occurrences of days within a month.
        items:
          type: JobRecurrenceScheduleMonthlyOccurrence
  JobRecurrenceScheduleMonthlyOccurrence:
    type: object
    properties:
      day?:
        type: string
        description: Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
        enum:
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
        - Sunday
      Occurrence?:
        type: integer
        description: Gets or sets the occurrence. Must be between -5 and 5.
  JobStateFilter:
    type: object
    properties:
      state?:
        type: JobState
        description: Gets or sets the job state.
  JobStatus:
    type: object
    properties:
      executionCount?:
        type: integer
        description: Gets the number of times this job has executed.
      failureCount?:
        type: integer
        description: Gets the number of times this job has failed.
      faultedCount?:
        type: integer
        description: Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states).
      lastExecutionTime?:
        type: datetime
        description: Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet.
      nextExecutionTime?:
        type: datetime
        description: Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed.
  OAuthAuthentication:
    type: HttpAuthentication
  RetryPolicy:
    type: object
    properties:
      retryType?:
        type: string
        description: Gets or sets the retry strategy to be used.
        enum:
        - None
        - Fixed
      retryInterval?:
        type: string
        description: Gets or sets the retry interval between retries.
      retryCount?:
        type: integer
        description: Gets or sets the number of times a retry should be attempted.
  ServiceBusAuthentication:
    type: object
    properties:
      sasKey?:
        type: string
        description: Gets or sets the SAS key.
      sasKeyName?:
        type: string
        description: Gets or sets the SAS key name.
      type?:
        type: string
        description: Gets or sets the authentication type.
        enum:
        - NotSpecified
        - SharedAccessKey
  ServiceBusBrokeredMessageProperties:
    type: object
    properties:
      contentType?:
        type: string
        description: Gets or sets the content type.
      correlationId?:
        type: string
        description: Gets or sets the correlation id.
      forcePersistence?:
        type: boolean
        description: Gets or sets the force persistence.
      label?:
        type: string
        description: Gets or sets the label.
      messageId?:
        type: string
        description: Gets or sets the message id.
      partitionKey?:
        type: string
        description: Gets or sets the partition key.
      replyTo?:
        type: string
        description: Gets or sets the reply to.
      replyToSessionId?:
        type: string
        description: Gets or sets the reply to session id.
      scheduledEnqueueTimeUtc?:
        type: datetime
        description: Gets or sets the scheduled enqueue time UTC.
      sessionId?:
        type: string
        description: Gets or sets the session id.
      timeToLive?:
        type: datetime
        description: Gets or sets the time to live.
      to?:
        type: string
        description: Gets or sets the to.
      viaPartitionKey?:
        type: string
        description: Gets or sets the via partition key.
  ServiceBusMessage:
    type: object
    properties:
      authentication?:
        type: ServiceBusAuthentication
        description: Gets or sets the authentication.
      brokeredMessageProperties?:
        type: ServiceBusBrokeredMessageProperties
        description: Gets or sets the brokered message properties.
      customMessageProperties?:
        type: object
        properties:
          //:
            type: string
        description: Gets or sets the custom message properties.
      message?:
        type: string
        description: Gets or sets the message.
      namespace?:
        type: string
        description: Gets or sets the namespace.
      transportType?:
        type: string
        description: Gets or sets the transport type.
        enum:
        - NotSpecified
        - NetMessaging
        - AMQP
  ServiceBusQueueMessage:
    type: ServiceBusMessage
  ServiceBusTopicMessage:
    type: ServiceBusMessage
  Sku:
    type: object
    properties:
      name?:
        type: string
        description: Gets or set the SKU.
        enum:
        - Standard
        - Free
        - Premium
  StorageQueueMessage:
    type: object
    properties:
      storageAccount?:
        type: string
        description: Gets or sets the storage account name.
      queueName?:
        type: string
        description: Gets or sets the queue name.
      sasToken?:
        type: string
        description: Gets or sets the SAS key.
      message?:
        type: string
        description: Gets or sets the message.
/subscriptions:
  /{subscriptionId}:
    uriParameters:
      subscriptionId:
        type: string
        description: The subscription id.
        displayName: subscriptionId
    /providers:
      /Microsoft.Scheduler:
        /jobCollections:
          get:
            description: Gets all job collections under specified subscription.
            queryParameters:
              api-version:
                type: string
                description: The API version.
                displayName: api-version
    /resourceGroups:
      /{resourceGroupName}:
        uriParameters:
          resourceGroupName:
            type: string
            description: The resource group name.
            displayName: resourceGroupName
        /providers:
          /Microsoft.Scheduler:
            /jobCollections:
              /{jobCollectionName}:
                uriParameters:
                  jobCollectionName:
                    type: string
                    description: The job collection name.
                    displayName: jobCollectionName
                /disable:
                  post:
                    description: Disables all of the jobs in the job collection.
                    queryParameters:
                      api-version:
                        type: string
                        description: The API version.
                        displayName: api-version
                /enable:
                  post:
                    description: Enables all of the jobs in the job collection.
                    queryParameters:
                      api-version:
                        type: string
                        description: The API version.
                        displayName: api-version
                /jobs:
                  /{jobName}:
                    uriParameters:
                      jobName:
                        type: string
                        description: The job name.
                        displayName: jobName
                    /history:
                      get:
                        description: Lists job history.
                        queryParameters:
                          api-version:
                            type: string
                            description: The API version.
                            displayName: api-version
                          $top?:
                            type: integer
                            description: the number of job history to request, in the of range [1..100].
                            displayName: $top
                          $skip?:
                            type: integer
                            description: The (0-based) index of the job history list from which to begin requesting entries.
                            displayName: $skip
                          $filter?:
                            type: string
                            description: The filter to apply on the job state.
                            displayName: $filter
                    /run:
                      post:
                        description: Runs a job.
                        queryParameters:
                          api-version:
                            type: string
                            description: The API version.
                            displayName: api-version
                    get:
                      description: Gets a job.
                      queryParameters:
                        api-version:
                          type: string
                          description: The API version.
                          displayName: api-version
                    delete:
                      description: Deletes a job.
                      queryParameters:
                        api-version:
                          type: string
                          description: The API version.
                          displayName: api-version
                    patch:
                      description: Patches an existing job.
                      queryParameters:
                        api-version:
                          type: string
                          description: The API version.
                          displayName: api-version
                      body:
                        application/json: JobDefinition
                        text/json: JobDefinition
                    put:
                      description: Provisions a new job or updates an existing job.
                      queryParameters:
                        api-version:
                          type: string
                          description: The API version.
                          displayName: api-version
                      body:
                        application/json: JobDefinition
                        text/json: JobDefinition
                  get:
                    description: Lists all jobs under the specified job collection.
                    queryParameters:
                      api-version:
                        type: string
                        description: The API version.
                        displayName: api-version
                      $top?:
                        type: integer
                        description: The number of jobs to request, in the of range [1..100].
                        displayName: $top
                      $skip?:
                        type: integer
                        description: The (0-based) index of the job history list from which to begin requesting entries.
                        displayName: $skip
                      $filter?:
                        type: string
                        description: The filter to apply on the job state.
                        displayName: $filter
                get:
                  description: Gets a job collection.
                  queryParameters:
                    api-version:
                      type: string
                      description: The API version.
                      displayName: api-version
                delete:
                  description: Deletes a job collection.
                  queryParameters:
                    api-version:
                      type: string
                      description: The API version.
                      displayName: api-version
                patch:
                  description: Patches an existing job collection.
                  queryParameters:
                    api-version:
                      type: string
                      description: The API version.
                      displayName: api-version
                  body:
                    application/json: JobCollectionDefinition
                    text/json: JobCollectionDefinition
                put:
                  description: Provisions a new job collection or updates an existing job collection.
                  queryParameters:
                    api-version:
                      type: string
                      description: The API version.
                      displayName: api-version
                  body:
                    application/json: JobCollectionDefinition
                    text/json: JobCollectionDefinition
              get:
                description: Gets all job collections under specified resource group.
                queryParameters:
                  api-version:
                    type: string
                    description: The API version.
                    displayName: api-version
