#%RAML 1.0
title: StorageManagementClient
version: '2016-01-01'
baseUri: management.azure.com
description: The Storage Management Client.
mediaType:
- application/json
- text/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  CheckNameAvailabilityResult:
    type: object
    properties:
      nameAvailable?:
        type: boolean
        description: Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.
      reason?:
        type: string
        description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        enum:
        - AccountNameInvalid
        - AlreadyExists
      message?:
        type: string
        description: Gets an error message explaining the Reason value in more detail.
    description: The CheckNameAvailability operation response.
  CustomDomain:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the custom domain name. Name is the CNAME source.
      useSubDomain?:
        type: boolean
        description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
    description: The custom domain assigned to this storage account. This can be set via Update.
  Encryption:
    type: object
    properties:
      services?:
        type: EncryptionServices
        description: Gets the services which are encrypted.
      keySource:
        type: string
        description: 'Gets the encryption keySource(provider). Possible values (case-insensitive):  Microsoft.Storage'
        enum:
        - Microsoft.Storage
    description: The encryption settings on the account.
  EncryptionService:
    type: object
    properties:
      enabled?:
        type: boolean
        description: A boolean indicating whether or not the service is encrypted.
      lastEnabledTime?:
        type: datetime
        description: Gets a time value indicating when was the encryption enabled by the user last time. We return this value only when encryption is enabled. There might be some unencrypted blobs which were written after this time. This time is just to give a rough estimate of when encryption was enabled.
    description: An encrypted service.
  EncryptionServices:
    type: object
    properties:
      blob?:
        type: EncryptionService
        description: The blob service.
    description: The encrypted services.
  Endpoints:
    type: object
    properties:
      blob?:
        type: string
        description: Gets the blob endpoint.
      queue?:
        type: string
        description: Gets the queue endpoint.
      table?:
        type: string
        description: Gets the table endpoint.
      file?:
        type: string
        description: Gets the file endpoint.
    description: The URIs that are used to perform a retrieval of a public blob, queue or table object.
  Resource:
    type: object
    properties:
      id?:
        type: string
        description: Resource Id
      name?:
        type: string
        description: Resource name
      type?:
        type: string
        description: Resource type
      location?:
        type: string
        description: Resource location
      tags?:
        type: object
        properties:
          //:
            type: string
        description: Resource tags
  Sku:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the sku name. Required for account creation, optional for update. Note that in older versions, sku name was called accountType.
        enum:
        - Standard_LRS
        - Standard_GRS
        - Standard_RAGRS
        - Standard_ZRS
        - Premium_LRS
      tier?:
        type: string
        description: Gets the sku tier. This is based on the SKU name.
        enum:
        - Standard
        - Premium
    description: The SKU of the storage account.
  StorageAccount:
    type: Resource
    description: The storage account.
  StorageAccountCheckNameAvailabilityParameters:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
        enum:
        - Microsoft.Storage/storageAccounts
    description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  StorageAccountCreateParameters:
    type: object
    properties:
      sku:
        type: Sku
        description: Required. Gets or sets the sku type.
      kind:
        type: string
        description: Required. Indicates the type of storage account.
        enum:
        - Storage
        - BlobStorage
      location:
        type: string
        description: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update the request will succeed.
      tags?:
        type: object
        properties:
          //:
            type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
      properties?:
        type: StorageAccountPropertiesCreateParameters
    description: The parameters to provide for the created account.
  StorageAccountKey:
    type: object
    properties:
      keyName?:
        type: string
        description: Name of the key.
      value?:
        type: string
        description: Base 64 encoded value of the key.
      permissions?:
        type: string
        description: Permissions for the key.
        enum:
        - READ
        - FULL
    description: An access key for the storage account.
  StorageAccountListKeysResult:
    type: object
    properties:
      keys?:
        type: array
        description: Gets the list of account keys and their properties.
        items:
          type: StorageAccountKey
    description: The ListKeys operation response.
  StorageAccountListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets the list of storage accounts and their properties.
        items:
          type: StorageAccount
    description: The list storage accounts operation response.
  StorageAccountProperties:
    type: object
    properties:
      provisioningState?:
        type: string
        description: Gets the status of the storage account at the time the operation was called.
        enum:
        - Creating
        - ResolvingDNS
        - Succeeded
      primaryEndpoints?:
        type: Endpoints
        description: Gets the URLs that are used to perform a retrieval of a public blob, queue or table object.Note that StandardZRS and PremiumLRS accounts only return the blob endpoint.
      primaryLocation?:
        type: string
        description: Gets the location of the primary for the storage account.
      statusOfPrimary?:
        type: string
        description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
        enum:
        - Available
        - Unavailable
      lastGeoFailoverTime?:
        type: datetime
        description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is StandardGRS or StandardRAGRS.
      secondaryLocation?:
        type: string
        description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
      statusOfSecondary?:
        type: string
        description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the accountType is StandardGRS or StandardRAGRS.
        enum:
        - Available
        - Unavailable
      creationTime?:
        type: datetime
        description: Gets the creation date and time of the storage account in UTC.
      customDomain?:
        type: CustomDomain
        description: Gets the user assigned custom domain assigned to this storage account.
      secondaryEndpoints?:
        type: Endpoints
        description: Gets the URLs that are used to perform a retrieval of a public blob, queue or table object from the secondary location of the storage account. Only available if the accountType is StandardRAGRS.
      encryption?:
        type: Encryption
        description: Gets the encryption settings on the account. If unspecified the account is unencrypted.
      accessTier?:
        type: string
        description: The access tier used for billing. Access tier cannot be changed more than once every 7 days (168 hours). Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.
        enum:
        - Hot
        - Cool
  StorageAccountPropertiesCreateParameters:
    type: object
    properties:
      customDomain?:
        type: CustomDomain
        description: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
      encryption?:
        type: Encryption
        description: Provides the encryption settings on the account. If left unspecified the account encryption settings will remain. The default setting is unencrypted.
      accessTier?:
        type: string
        description: Required for StandardBlob accounts. The access tier used for billing. Access tier cannot be changed more than once every 7 days (168 hours). Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.
        enum:
        - Hot
        - Cool
  StorageAccountPropertiesUpdateParameters:
    type: object
    properties:
      customDomain?:
        type: CustomDomain
        description: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
      encryption?:
        type: Encryption
        description: Provides the encryption settings on the account. The default setting is unencrypted.
      accessTier?:
        type: string
        description: The access tier used for billing. Access tier cannot be changed more than once every 7 days (168 hours). Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.
        enum:
        - Hot
        - Cool
  StorageAccountRegenerateKeyParameters:
    type: object
    properties:
      keyName:
        type: string
    description: Specifies name of the key which should be regenerated. key1 or key2 for the default keys
  StorageAccountUpdateParameters:
    type: object
    properties:
      sku?:
        type: Sku
        description: Gets or sets the sku type. Note that sku cannot be updated to StandardZRS or ProvisionedLRS, nor can accounts of that sku type be updated to any other value.
      tags?:
        type: object
        properties:
          //:
            type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
      properties?:
        type: StorageAccountPropertiesUpdateParameters
    description: The parameters to provide for the updated account.
  Usage:
    type: object
    properties:
      unit?:
        type: string
        description: Gets the unit of measurement.
        enum:
        - Count
        - Bytes
        - Seconds
        - Percent
        - CountsPerSecond
        - BytesPerSecond
      currentValue?:
        type: integer
        description: Gets the current count of the allocated resources in the subscription.
        format: int32
      limit?:
        type: integer
        description: Gets the maximum count of the resources that can be allocated in the subscription.
        format: int32
      name?:
        type: UsageName
        description: Gets the name of the type of usage.
    description: Describes Storage Resource Usage.
  UsageListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list Storage Resource Usages.
        items:
          type: Usage
    description: The List Usages operation response.
  UsageName:
    type: object
    properties:
      value?:
        type: string
        description: Gets a string describing the resource name.
      localizedValue?:
        type: string
        description: Gets a localized string describing the resource name.
    description: The Usage Names.
/subscriptions:
  /{subscriptionId}:
    uriParameters:
      subscriptionId:
        type: string
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        displayName: subscriptionId
    /providers:
      /Microsoft.Storage:
        /checkNameAvailability:
          post:
            description: Checks that account name is valid and is not in use.
            queryParameters:
              api-version:
                type: string
                description: Client Api Version.
                displayName: api-version
            body:
              application/json: StorageAccountCheckNameAvailabilityParameters
              text/json: StorageAccountCheckNameAvailabilityParameters
        /storageAccounts:
          get:
            description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            queryParameters:
              api-version:
                type: string
                description: Client Api Version.
                displayName: api-version
        /usages:
          get:
            description: Gets the current usage count and the limit for the resources under the subscription.
            queryParameters:
              api-version:
                type: string
                description: Client Api Version.
                displayName: api-version
    /resourceGroups:
      /{resourceGroupName}:
        uriParameters:
          resourceGroupName:
            type: string
            description: The name of the resource group within the user's subscription.
            displayName: resourceGroupName
        /providers:
          /Microsoft.Storage:
            /storageAccounts:
              /{accountName}:
                uriParameters:
                  accountName:
                    type: string
                    description: 'The name of the storage account within the specified
                      resource group. Storage account names must be between 3 and
                      24 characters in length and use numbers and lower-case letters
                      only.  '
                    displayName: accountName
                    maxLength: 24
                    minLength: 3
                /listKeys:
                  post:
                    description: Lists the access keys for the specified storage account.
                    queryParameters:
                      api-version:
                        type: string
                        description: Client Api Version.
                        displayName: api-version
                /regenerateKey:
                  post:
                    description: Regenerates the access keys for the specified storage account.
                    queryParameters:
                      api-version:
                        type: string
                        description: Client Api Version.
                        displayName: api-version
                    body:
                      application/json: StorageAccountRegenerateKeyParameters
                      text/json: StorageAccountRegenerateKeyParameters
                get:
                  description: Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.
                  queryParameters:
                    api-version:
                      type: string
                      description: Client Api Version.
                      displayName: api-version
                delete:
                  description: Deletes a storage account in Microsoft Azure.
                  queryParameters:
                    api-version:
                      type: string
                      description: Client Api Version.
                      displayName: api-version
                patch:
                  description: The update operation can be used to update the account type, encryption, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account and. replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value may be set. Update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change storage account keys, use the regenerate keys operation.  The location and name of the storage account cannot be changed after creation.
                  queryParameters:
                    api-version:
                      type: string
                      description: Client Api Version.
                      displayName: api-version
                  body:
                    application/json: StorageAccountUpdateParameters
                    text/json: StorageAccountUpdateParameters
                put:
                  description: Asynchronously creates a new storage account with the specified parameters. If an account is already created and subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and subsequent create or update request is issued with exact same set of properties, the request will succeed.
                  queryParameters:
                    api-version:
                      type: string
                      description: Client Api Version.
                      displayName: api-version
                  body:
                    application/json: StorageAccountCreateParameters
                    text/json: StorageAccountCreateParameters
              get:
                description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
                queryParameters:
                  api-version:
                    type: string
                    description: Client Api Version.
                    displayName: api-version
