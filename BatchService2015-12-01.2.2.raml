#%RAML 1.0
title: BatchService
version: 2015-12-01.2.2
baseUri: batch.core.windows.net
description: A client for issuing REST requests to the Azure Batch service.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AffinityInformation:
    type: object
    properties:
      affinityId?:
        type: string
        description: Gets or sets an opaque string representing the location of a compute node or a task that has run previously.  You can pass the AffinityId of a compute node or task to indicate that this task needs to be placed close to the node or task.
    description: A locality hint that can be used by the Batch service to select a compute node on which to start a task.
  ApplicationListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of applications available in the account.
        items:
          type: ApplicationSummary
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a ApplicationOperations.List request.
  ApplicationPackageReference:
    type: object
    properties:
      applicationId:
        type: string
        description: Gets or sets the application package id.
      version?:
        type: string
        description: Gets or sets the application package version. If not specified, the default is used.
    description: A reference to an application package to be installed on compute nodes in a pool.
  ApplicationSummary:
    type: object
    properties:
      id:
        type: string
        description: Gets or sets a string that uniquely identifies the application within the account.
      displayName:
        type: string
        description: Gets or sets the display name for the application.
      versions:
        type: array
        items:
          type: string
    description: Contains information about an application in an Azure Batch account.
  AutoPoolSpecification:
    type: object
    properties:
      autoPoolIdPrefix?:
        type: string
        description: Gets or sets a prefix to be added to the unique identifier when a pool is automatically created. The prefix can be up to 20 characters long.
      poolLifetimeOption:
        type: string
        description: Gets or sets the minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools.
        enum:
        - jobschedule
        - job
        - unmapped
      keepAlive?:
        type: boolean
        description: Gets or sets whether to keep an auto pool alive after its lifetime expires.
      pool?:
        type: PoolSpecification
        description: Gets or sets the pool specification for the auto pool.
    description: Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool, run all the tasks for the job on it, and will delete the pool once the job has completed.
  AutoScaleRun:
    type: object
    properties:
      timestamp:
        type: datetime
        description: Gets or sets the time at which the autoscale formula was last evaluated.
      results?:
        type: string
        description: Gets or sets the final values of all variables used in the evaluation of the autoscale formula.  Each variable value is returned in the form $variable=value, and variables are separated by semicolons.
      error?:
        type: AutoScaleRunError
        description: Gets or sets details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.
    description: The results and errors from an execution of a pool autoscale formula.
  AutoScaleRunError:
    type: object
    properties:
      code?:
        type: string
        description: Gets or sets an identifier for the autoscale error.  Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        description: Gets or sets a message describing the autoscale error, intended to be suitable for display in a user interface.
      values?:
        type: array
        description: Gets or sets a list of additional error details related to the autoscale error.
        items:
          type: NameValuePair
    description: An error that occurred when executing or evaluating a pool autoscale formula.
  BatchError:
    type: object
    properties:
      code?:
        type: string
        description: Gets or sets an identifier for the error. Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: ErrorMessage
        description: Gets or sets a message describing the error, intended to be suitable for display in a user interface.
      values?:
        type: array
        description: Gets or sets a collection of key-value pairs containing additional details about the error.
        items:
          type: BatchErrorDetail
    description: An error response received from the Azure Batch service.
  BatchErrorDetail:
    type: object
    properties:
      key?:
        type: string
        description: Gets or sets an identifier specifying the meaning of the Value property.
      value?:
        type: string
        description: Gets or sets the additional information included with the error response.
    description: An item of additional information included in an Azure Batch error response.
  Certificate:
    type: object
    properties:
      thumbprint?:
        type: string
        description: Get or sets the X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
      thumbprintAlgorithm?:
        type: string
        description: Gets or sets the algorithm used to derive the thumbprint. This must be sha1.
      url?:
        type: string
        description: Gets or sets the URL of the certificate.
      state?:
        type: string
        description: Gets or sets the current state of the certificate.
        enum:
        - active
        - deleting
        - deletefailed
      stateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the certificate entered its current state.
      previousState?:
        type: string
        description: Gets or sets the previous state of the certificate. This property is not set if the certificate is in its initial Active state.
        enum:
        - active
        - deleting
        - deletefailed
      previousStateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the certificate entered its previous state.  This property is not set if the certificate is in its initial Active state.
      publicData?:
        type: string
        description: Gets or sets the public part of the certificate as a base-64 encoded .cer file.
      deleteCertificateError?:
        type: DeleteCertificateError
        description: Gets or sets the error that occurred on the last attempt to delete this certificate.  This property is set only if the certificate is in the deletefailed state.
    description: A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine.
  CertificateAddParameter:
    type: object
    properties:
      thumbprint:
        type: string
        description: Get or sets the X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
      thumbprintAlgorithm:
        type: string
        description: Gets or sets the algorithm used to derive the thumbprint. This must be sha1.
      data:
        type: string
        description: Gets or sets the base64-encoded contents of the .pfx file containing the certificate. The maximum size is 10KB. This property is not populated by the Get Certificate operation.
      certificateFormat?:
        type: string
        description: Gets or sets the format of the certificate data. This must be pfx.
        enum:
        - pfx
        - cer
        - unmapped
      password?:
        type: string
        description: Gets or sets the password to access the certificate's private key. This property is not populated by the Get Certificate operation.
    description: Specifies the certificate to be added.
  CertificateListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of certificates.
        items:
          type: Certificate
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a CertificateOperations.List request.
  CertificateReference:
    type: object
    properties:
      thumbprint:
        type: string
        description: Gets or sets the thumbprint of the certificate.
      thumbprintAlgorithm:
        type: string
        description: Gets or sets the algorithm with which the thumbprint is associated.  This must be sha1.
      storeLocation?:
        type: string
        description: Gets or sets the location of the certificate store on the compute node into which to install the certificate. The default value is CurrentUser.
        enum:
        - currentuser
        - localmachine
        - unmapped
      storeName?:
        type: string
        description: Gets or sets the name of the certificate store on the compute node into which to install the certificate. The default value is My.
      visibility?:
        type: string
        description: Gets or sets which user accounts on the compute node should have access to the private data of the certificate. This may be any subset of the values 'starttask', 'task' and 'rdp', separated by commas. The default is all accounts, corresponding to the string 'starttask,task,rdp'.
    description: A reference to a certificate to be installed on compute nodes in a pool.
  CloudJob:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets a string that uniquely identifies the job within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
      displayName?:
        type: string
        description: Gets or sets the display name for the job.
      usesTaskDependencies?:
        type: boolean
        description: Gets or sets the flag that determines if this job will use tasks with dependencies.
      url?:
        type: string
        description: Gets or sets the URL of the job.
      eTag?:
        type: string
        description: Gets or sets the ETag of the job.
      lastModified?:
        type: datetime
        description: Gets or sets the last modified time of the job.
      creationTime?:
        type: datetime
        description: Gets or sets the creation time of the job.
      state?:
        type: string
        description: Gets or sets the current state of the job.
        enum:
        - active
        - disabling
        - disabled
        - enabling
        - terminating
        - completed
        - deleting
      stateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the job entered its current state.
      previousState?:
        type: string
        description: Gets or sets the previous state of the job. This property is not set if the job is in its initial Active state.
        enum:
        - active
        - disabling
        - disabled
        - enabling
        - terminating
        - completed
        - deleting
      previousStateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the job entered its previous state. This property is not set if the job is in its initial Active state.
      priority?:
        type: integer
        description: Gets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
        format: int32
      constraints?:
        type: JobConstraints
        description: Gets or sets the execution constraints for the job.
      jobManagerTask?:
        type: JobManagerTask
        description: Gets or sets details of a Job Manager task to be launched when the job is started.
      jobPreparationTask?:
        type: JobPreparationTask
        description: Gets or sets the Job Preparation task.
      jobReleaseTask?:
        type: JobReleaseTask
        description: Gets or sets the Job Release task.
      commonEnvironmentSettings?:
        type: array
        description: Gets or sets the list of common environment variable settings.  These environment variables are set for all tasks in the job (including the Job Manager, Job Preparation and Job Release tasks).
        items:
          type: EnvironmentSetting
      poolInfo?:
        type: PoolInformation
        description: Gets or sets the pool on which the Batch service runs the job’s tasks.
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with the job as metadata.
        items:
          type: MetadataItem
      executionInfo?:
        type: JobExecutionInformation
        description: Gets or sets the execution information for the job.
      stats?:
        type: JobStatistics
        description: Gets or sets resource usage statistics for the entire lifetime of the job.
    description: An Azure Batch job.
  CloudJobListPreparationAndReleaseTaskStatusResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets a list of Job Preparation and Job Release task execution information.
        items:
          type: JobPreparationAndReleaseTaskExecutionInformation
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
  CloudJobListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of jobs.
        items:
          type: CloudJob
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a CloudJobOperations.List or ListFromJobSchedule request.
  CloudJobSchedule:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets a string that uniquely identifies the schedule within the account. A GUID is recommended.
      displayName?:
        type: string
        description: Gets or sets the display name for the schedule.
      url?:
        type: string
        description: Gets or sets the URL of the job schedule.
      eTag?:
        type: string
        description: Gets or sets the ETag of the job schedule.
      lastModified?:
        type: datetime
        description: Gets or sets the last modified time of the job schedule.
      creationTime?:
        type: datetime
        description: Gets or sets the creation time of the job schedule.
      state?:
        type: string
        description: Gets or sets the current state of the job schedule.
        enum:
        - active
        - completed
        - disabled
        - terminating
        - deleting
      stateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the job schedule entered the current state.
      previousState?:
        type: string
        description: Gets or sets the previous state of the job schedule.
        enum:
        - active
        - completed
        - disabled
        - terminating
        - deleting
      previousStateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the job schedule entered its previous state.
      schedule?:
        type: Schedule
        description: Gets or sets the schedule according to which jobs will be created.
      jobSpecification?:
        type: JobSpecification
        description: Gets or sets the details of the jobs to be created on this schedule.
      executionInfo?:
        type: JobScheduleExecutionInformation
        description: Gets or sets information about jobs that have been and will be run under this schedule.
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with the schedule as metadata.
        items:
          type: MetadataItem
      stats?:
        type: JobScheduleStatistics
        description: Gets or sets the lifetime resource usage statistics for the job schedule.
    description: A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
  CloudJobScheduleListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of job schedules.
        items:
          type: CloudJobSchedule
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a CloudJobScheduleOperations.List request.
  CloudPool:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets a string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
      displayName?:
        type: string
        description: Gets or sets the display name for the pool.
      url?:
        type: string
        description: Gets or sets the URL of the pool.
      eTag?:
        type: string
        description: Gets or sets the ETag of the pool.
      lastModified?:
        type: datetime
        description: Gets or sets the last modified time of the pool.
      creationTime?:
        type: datetime
        description: Gets or sets the creation time of the pool.
      state?:
        type: string
        description: Gets or sets the current state of the pool.
        enum:
        - active
        - deleting
        - upgrading
      stateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the pool entered its current state.
      allocationState?:
        type: string
        description: Gets or sets whether the pool is resizing.
        enum:
        - steady
        - resizing
        - stopping
      allocationStateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the pool entered its current allocation state.
      vmSize?:
        type: string
        description: Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
      osFamily?:
        type: string
        description: Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
      targetOSVersion?:
        type: string
        description: Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified family.
      currentOSVersion?:
        type: string
        description: Gets or sets the Azure Guest OS Version currently installed on the virtual machines in the pool. This may differ from TargetOSVersion if the pool state is Upgrading.
      resizeTimeout?:
        type: string
        description: Gets or sets the timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
      resizeError?:
        type: ResizeError
        description: Gets or sets details of any error encountered while performing the last resize on the pool. This property is set only if an error occurred during the last pool resize, and only when the pool AllocationState is Steady.
      currentDedicated?:
        type: integer
        description: Gets or sets the number of compute nodes currently in the pool.
        format: int32
      targetDedicated?:
        type: integer
        description: Gets or sets the desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
        format: int32
      enableAutoScale?:
        type: boolean
        description: Gets or sets whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
      autoScaleFormula?:
        type: string
        description: Gets or sets a formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        description: Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
      autoScaleRun?:
        type: AutoScaleRun
        description: Gets or sets the results and errors from the last execution of the autoscale formula.
      enableInterNodeCommunication?:
        type: boolean
        description: Gets or sets whether the pool permits direct communication between nodes.
      startTask?:
        type: StartTask
        description: Gets or sets a task specified to run on each compute node as it joins the pool.
      certificateReferences?:
        type: array
        description: Gets or sets the list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        description: Gets or sets the list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      maxTasksPerNode?:
        type: integer
        description: Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
        format: int32
      taskSchedulingPolicy?:
        type: TaskSchedulingPolicy
        description: Gets or sets how the Batch service distributes tasks between compute nodes in the pool.
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
      stats?:
        type: PoolStatistics
        description: Gets or sets utilization and resource usage statistics for the entire lifetime of the pool.
    description: A pool in the Azure Batch service.
  CloudPoolListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of pools.
        items:
          type: CloudPool
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a CloudPoolOperations.List request.
  CloudTask:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets a string that uniquely identifies the task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
      displayName?:
        type: string
        description: Gets or sets a display name for the task.
      url?:
        type: string
        description: Gets or sets the URL of the task.
      eTag?:
        type: string
        description: Gets or sets the ETag of the task.
      lastModified?:
        type: datetime
        description: Gets or sets the last modified time of the task.
      creationTime?:
        type: datetime
        description: Gets or sets the creation time of the task.
      state?:
        type: string
        description: Gets or sets the current state of the task.
        enum:
        - active
        - preparing
        - running
        - completed
      stateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the task entered its current state.
      previousState?:
        type: string
        description: Gets or sets the previous state of the task. This property is not set if the task is in its initial Active state.
        enum:
        - active
        - preparing
        - running
        - completed
      previousStateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the task entered its previous state. This property is not set if the task is in its initial Active state.
      commandLine?:
        type: string
        description: Gets or sets the command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordianation command line.
      resourceFiles?:
        type: array
        description: Gets or sets a list of files that Batch will download to the compute node before running the command line. For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        description: Gets or sets a list of environment variable settings for the task.
        items:
          type: EnvironmentSetting
      affinityInfo?:
        type: AffinityInformation
        description: Gets or sets a locality hint that can be used by the Batch service to select a compute node on which to start the new task.
      constraints?:
        type: TaskConstraints
        description: Gets or sets the execution constraints that apply to this task.
      runElevated?:
        type: boolean
        description: Gets or sets whether to run the task in elevated mode.
      executionInfo?:
        type: TaskExecutionInformation
        description: Gets or sets information about the execution of the task.
      nodeInfo?:
        type: ComputeNodeInformation
        description: Gets or sets information about the compute node on which the task ran.
      multiInstanceSettings?:
        type: MultiInstanceSettings
        description: Gets or sets information about how to run the multi-instance task.
      stats?:
        type: TaskStatistics
        description: Gets or sets resource usage statistics for the task.
      dependsOn?:
        type: TaskDependencies
        description: Gets or sets any dependencies this task has.
    description: An Azure Batch task.
  CloudTaskListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of tasks.
        items:
          type: CloudTask
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a CloudTaskOperations.List request.
  CloudTaskListSubtasksResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of information of subtasks.
        items:
          type: SubtaskInformation
    description: Response to a CloudTaskOperations.ListSubtasks request.
  ComputeNode:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets the id of the compute node.
      url?:
        type: string
        description: Gets or sets the URL of the compute node.
      state?:
        type: string
        description: Gets or sets the current state of the compute node.
        enum:
        - idle
        - rebooting
        - reimaging
        - running
        - unusable
        - creating
        - starting
        - waitingforstarttask
        - starttaskfailed
        - unknown
        - leavingpool
        - offline
      schedulingState?:
        type: string
        description: Gets or sets whether the compute node should be available for task scheduling.
        enum:
        - enabled
        - disabled
      stateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the compute node entered its current state.
      lastBootTime?:
        type: datetime
        description: Gets or sets the time at which the compute node was started.
      allocationTime?:
        type: datetime
        description: Gets or sets the time at which this compute node was allocated to the pool.
      ipAddress?:
        type: string
        description: Gets or sets the IP address that other compute nodes can use to communicate with this compute node.
      affinityId?:
        type: string
        description: Gets or sets an identifier which can be passed in the Add Task API to request that the task be scheduled close to this compute node.
      vmSize?:
        type: string
        description: Gets or sets the size of the virtual machine hosting the compute node.
      totalTasksRun?:
        type: integer
        description: Gets or sets the total number of job tasks completed on the compute node. This includes Job Preparation, Job Release and Job Manager tasks, but not the pool start task.
        format: int32
      recentTasks?:
        type: array
        description: Gets or sets the list of tasks that are currently running on the compute node.
        items:
          type: TaskInformation
      startTask?:
        type: StartTask
        description: Gets or sets the task specified to run on the compute node as it joins the pool.
      startTaskInfo?:
        type: StartTaskInformation
        description: Gets or sets runtime information about the execution of the start task on the compute node.
      certificateReferences?:
        type: array
        description: Gets or sets the list of certificates installed on the compute node.
        items:
          type: CertificateReference
      errors?:
        type: array
        description: Gets or sets the list of errors that are currently being encountered by the compute node.
        items:
          type: ComputeNodeError
    description: A compute node in the Batch service.
  ComputeNodeError:
    type: object
    properties:
      code?:
        type: string
        description: Gets or sets an identifier for the compute node error.  Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        description: Gets or sets a message describing the compute node error, intended to be suitable for display in a user interface.
      errorDetails?:
        type: array
        description: Gets or sets the list of additional error details related to the compute node error.
        items:
          type: NameValuePair
    description: An error encountered by a compute node.
  ComputeNodeInformation:
    type: object
    properties:
      affinityId?:
        type: string
        description: Gets or sets an identifier for the compute node on which the task ran, which can be passed when adding a task to request that the task be scheduled close to this compute node.
      nodeUrl?:
        type: string
        description: 'Gets or sets the URL of the node on which the task ran. '
      poolId?:
        type: string
        description: Gets or sets the id of the pool on which the task ran.
      nodeId?:
        type: string
        description: Gets or sets the id of the node on which the task ran.
      taskRootDirectory?:
        type: string
        description: Gets or sets the root directory of the task on the compute node.
      taskRootDirectoryUrl?:
        type: string
        description: Gets or sets the URL to the root directory of the task on the compute node.
    description: Information about the compute node on which a task ran.
  ComputeNodeListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of compute nodes.
        items:
          type: ComputeNode
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a ComputeNodeOperations.List request.
  ComputeNodeUser:
    type: object
    properties:
      name:
        type: string
        description: Gets or sets the user name of the account.
      isAdmin?:
        type: boolean
        description: Gets or sets whether the account should be an administrator on the compute node.
      expiryTime?:
        type: datetime
        description: Gets or sets the time at which the account should expire. If omitted, the default is 1 day from the current time.
      password:
        type: string
        description: Gets or sets the password of the account.
    description: Specifies the user account to be created.
  DeleteCertificateError:
    type: object
    properties:
      code?:
        type: string
        description: Gets or sets an identifier for the certificate deletion error.  Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        description: Gets or sets a message describing the certificate deletion error, intended to be suitable for display in a user interface.
      values?:
        type: array
        description: Gets or sets a list of additional error details related to the certificate deletion error.
        items:
          type: NameValuePair
    description: An error encountered by the Batch service when deleting a certificate.
  EnvironmentSetting:
    type: object
    properties:
      name?:
        type: string
        description: Gets or sets the name of the environment variable.
      value?:
        type: string
        description: Gets or sets the value of the environment variable.
    description: An environment variable to be set on a task process.
  ErrorMessage:
    type: object
    properties:
      lang?:
        type: string
        description: Gets or sets the language code of the error message
      value?:
        type: string
        description: Gets or sets the text of the message.
    description: An error message received in an Azure Batch error response.
  FileProperties:
    type: object
    properties:
      creationTime?:
        type: datetime
        description: Gets or sets the file creation time.
      lastModified:
        type: datetime
        description: Gets or sets the time at which the file was last modified.
      contentLength:
        type: integer
        description: Gets or sets the length of the file.
        format: int64
      contentType?:
        type: string
        description: Gets or sets the content type of the file.
    description: The properties of a file on a compute node.
  JobAddParameter:
    type: object
    properties:
      id:
        type: string
        description: Gets or sets a string that uniquely identifies the job within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
      displayName?:
        type: string
        description: Gets or sets the display name for the job.
      priority?:
        type: integer
        description: Gets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
        format: int32
      constraints?:
        type: JobConstraints
        description: Gets or sets the execution constraints for the job.
      jobManagerTask?:
        type: JobManagerTask
        description: Gets or sets details of a Job Manager task to be launched when the job is started.
      jobPreparationTask?:
        type: JobPreparationTask
        description: Gets or sets the Job Preparation task.
      jobReleaseTask?:
        type: JobReleaseTask
        description: Gets or sets the Job Release task.
      commonEnvironmentSettings?:
        type: array
        description: Gets or sets the list of common environment variable settings.  These environment variables are set for all tasks in the job (including the Job Manager, Job Preparation and Job Release tasks).
        items:
          type: EnvironmentSetting
      poolInfo:
        type: PoolInformation
        description: Gets or sets the pool on which the Batch service runs the job’s tasks.
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with the job as metadata.
        items:
          type: MetadataItem
      usesTaskDependencies?:
        type: boolean
        description: Gets or sets the flag that determines if this job will use tasks with dependencies.
    description: Specifies the job to be added.
  JobConstraints:
    type: object
    properties:
      maxWallClockTime?:
        type: string
        description: Gets or sets the maximum elapsed time that the job may run, measured from the time the job starts. If the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running.
      maxTaskRetryCount?:
        type: integer
        description: Gets or sets the maximum number of times each task may be retried. The Batch service retries a task if its exit code is nonzero.
        format: int32
    description: Specifies the execution constraints for jobs created on a schedule.
  JobDisableParameter:
    type: object
    properties:
      disableTasks:
        type: string
        description: Sets what to do with active tasks associated with the job.
        enum:
        - requeue
        - terminate
        - wait
    description: The parameters for the request.
  JobExecutionInformation:
    type: object
    properties:
      startTime:
        type: datetime
        description: Gets or sets the start time of the job.
      endTime?:
        type: datetime
        description: Gets or sets the completion time of the job. This property is set only if the job is in the completed state.
      poolId?:
        type: string
        description: Gets or sets the id of the pool to which this job is assigned.
      schedulingError?:
        type: JobSchedulingError
        description: Gets or sets details of any error encountered by the service in starting the job.
      terminateReason?:
        type: string
        description: Gets or sets a string describing the reason the job ended.
    description: Contains information about the execution of a job in the Azure Batch service.
  JobManagerTask:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets a string that uniquely identifies the Job Manager task. A GUID is recommended.
      displayName?:
        type: string
        description: Gets or sets the display name of the Job Manager task.
      commandLine?:
        type: string
        description: Gets or sets the command line of the Job Manager task.
      resourceFiles?:
        type: array
        description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        description: Gets or sets a list of environment variable settings for the Job Manager task.
        items:
          type: EnvironmentSetting
      constraints?:
        type: TaskConstraints
        description: Gets or sets constraints that apply to the Job Manager task.
      killJobOnCompletion?:
        type: boolean
        description: Gets or sets whether completion of the Job Manager task signifies completion of the entire job.
      runElevated?:
        type: boolean
        description: Gets or sets whether to run the Job Manager task in elevated mode. The default value is false.
      runExclusive?:
        type: boolean
        description: Gets or sets whether the Job Manager task requires exclusive use of the compute node where it runs.
    description: Specifies details of a Job Manager task.
  JobPatchParameter:
    type: object
    properties:
      priority?:
        type: integer
        description: Sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged.
        format: int32
      constraints?:
        type: JobConstraints
        description: Sets the execution constraints for the job. If omitted, the existing execution constraints are left unchanged.
      poolInfo?:
        type: PoolInformation
        description: Sets the pool on which the Batch service runs the job's tasks. If omitted, the job continues to run on its current pool.
      metadata?:
        type: array
        description: Sets a list of name-value pairs associated with the job as metadata. If omitted, the existing job metadata is left unchanged.
        items:
          type: MetadataItem
    description: The parameters for the request.
  JobPreparationAndReleaseTaskExecutionInformation:
    type: object
    properties:
      poolId?:
        type: string
        description: Gets or sets the id of the pool containing the compute node to which this entry refers.
      nodeId?:
        type: string
        description: Gets or sets the id of the compute node to which this entry refers.
      nodeUrl?:
        type: string
        description: Gets or sets the URL of the compute node to which this entry refers.
      jobPreparationTaskExecutionInfo?:
        type: JobPreparationTaskExecutionInformation
        description: Gets or sets information about the execution status of the Job Preparation task on this compute node.
      jobReleaseTaskExecutionInfo?:
        type: JobReleaseTaskExecutionInformation
        description: Gets or sets information about the execution status of the Job Release task on this compute node. This property is set only if the Job Release task has run on the node.
    description: The status of the Job Preparation and Job Release tasks on a particular compute node.
  JobPreparationTask:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets a string that uniquely identifies the job preparation task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
      commandLine?:
        type: string
        description: Gets or sets the command line of the Job Preparation task.
      resourceFiles?:
        type: array
        description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        description: Gets or sets a list of environment variable settings for the Job Preparation task.
        items:
          type: EnvironmentSetting
      constraints?:
        type: TaskConstraints
        description: Gets or sets constraints that apply to the Job Preparation task..
      waitForSuccess?:
        type: boolean
        description: Gets or sets whether the Batch Service should wait for the Job Preparation task to complete successfully before scheduling any other tasks of the job on the compute node.
      runElevated?:
        type: boolean
        description: Gets or sets whether to run the Job Preparation task in elevated mode. The default value is false.
      rerunOnNodeRebootAfterSuccess?:
        type: boolean
        description: Gets or sets whether the Batch service should rerun the Job Preparation task after a compute node reboots. The default value is true.
    description: A Job Preparation task to run before any tasks of the job on any given compute node.
  JobPreparationTaskExecutionInformation:
    type: object
    properties:
      startTime:
        type: datetime
        description: Gets or sets the time at which the Job Preparation task started running.
      endTime?:
        type: datetime
        description: Gets or sets the time at which the Job Preparation task completed. This property is set only if the task is in the Completed state.
      state:
        type: string
        description: Gets or sets the current running state of the Job Preparation task on the compute node.
        enum:
        - running
        - completed
      taskRootDirectory?:
        type: string
        description: Gets or sets the root directory of the Job Preparation task on the compute node.
      taskRootDirectoryUrl?:
        type: string
        description: Gets or sets the URL to the root directory of the Job Preparation task on the compute node.
      exitCode?:
        type: integer
        description: Gets or sets the exit code of the Job Preparation task. This property is set only if the task is in the Completed state.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        description: Gets or sets any error starting the Job Preparation task.
      retryCount:
        type: integer
        description: Gets or sets the number of times the Job Preparation task has been retried by the Batch service.
        format: int32
      lastRetryTime?:
        type: datetime
        description: Gets or sets the most recent time at which a retry of the Job Preparation task started running. This property is set only if the task was retried (i.e. retryCount is nonzero).
    description: Contains information about the execution of a Job Preparation task on a compute node.
  JobReleaseTask:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets a string that uniquely identifies the Job Release task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
      commandLine?:
        type: string
        description: Gets or sets the command line of the Job Release task.
      resourceFiles?:
        type: array
        description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        description: Gets or sets a list of environment variable settings for the Job Release task.
        items:
          type: EnvironmentSetting
      maxWallClockTime?:
        type: string
        description: Gets or sets the maximum elapsed time that the Job Release task may run on a given compute node, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes.
      retentionTime?:
        type: string
        description: Gets or sets the minimum time to retain the working directory for the Job Release task on the compute node.  After this time, the Batch service may delete the working directory and all its contents. The default is infinite.
      runElevated?:
        type: boolean
        description: Gets or sets whether to run the Job Release task in elevated mode. The default value is false.
    description: A Job Release task to run on job completion on any compute node where the job has run.
  JobReleaseTaskExecutionInformation:
    type: object
    properties:
      startTime:
        type: datetime
        description: Gets or sets the time at which the Job Release task started running.
      endTime?:
        type: datetime
        description: Gets or sets the time at which the Job Release task completed. This property is set only if the task is in the Completed state.
      state:
        type: string
        description: Gets or sets the current running state of the Job Release task on the compute node.
        enum:
        - running
        - completed
      taskRootDirectory?:
        type: string
        description: Gets or sets the root directory of the Job Release task on the compute node.
      taskRootDirectoryUrl?:
        type: string
        description: Gets or sets the URL to the root directory of the Job Release task on the compute node.
      exitCode?:
        type: integer
        description: Gets or sets the exit code of the Job Release task. This property is set only if the task is in the Completed state.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        description: Gets or sets any error starting the Job Release task.
    description: Contains information about the execution of a Job Release task on a compute node.
  JobScheduleAddParameter:
    type: object
    properties:
      id:
        type: string
        description: Gets or sets a string that uniquely identifies the schedule within the account. A GUID is recommended.
      displayName?:
        type: string
        description: Gets or sets the display name for the schedule.
      schedule:
        type: Schedule
        description: Gets or sets the schedule according to which jobs will be created.
      jobSpecification:
        type: JobSpecification
        description: Gets or sets the details of the jobs to be created on this schedule.
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with the schedule as metadata.
        items:
          type: MetadataItem
    description: Specifies the job schedule to be added.
  JobScheduleExecutionInformation:
    type: object
    properties:
      nextRunTime?:
        type: datetime
        description: Gets or sets the next time at which a job will be created under this schedule.
      recentJob?:
        type: RecentJob
        description: Gets or sets information about the most recent job under the job schedule.
      endTime?:
        type: datetime
        description: Gets or sets the time at which the schedule ended. This property is set only if the job schedule is in the completed state.
    description: Specifies how tasks should be run in a job associated with a job schedule.
  JobSchedulePatchParameter:
    type: object
    properties:
      schedule?:
        type: Schedule
        description: Sets the schedule according to which jobs will be created. If you do not specify this element, the existing schedule is not modified.
      jobSpecification?:
        type: JobSpecification
        description: Sets the details of the jobs to be created on this schedule.
      metadata?:
        type: array
        description: Sets a list of name-value pairs associated with the job schedule as metadata.
        items:
          type: MetadataItem
    description: The parameters for the request.
  JobScheduleStatistics:
    type: object
    properties:
      url:
        type: string
        description: Gets or sets the URL for the statistics.
      startTime:
        type: datetime
        description: Gets or sets the start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      userCPUTime:
        type: string
        description: Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
      kernelCPUTime:
        type: string
        description: Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
      wallClockTime:
        type: string
        description: Gets or sets the total wall clock time of all the tasks in all the jobs created under the schedule.
      readIOps:
        type: integer
        description: Gets or sets the total number of I/O read operations performed by all the tasks in all the jobs created under the schedule.
        format: int64
      writeIOps:
        type: integer
        description: Gets or sets the total number of I/O write operations performed by all the tasks in all the jobs created under the schedule.
        format: int64
      readIOGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of I/O read by all the tasks in all the jobs created under the schedule.
        format: double
      writeIOGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of I/O written by all the tasks in all the jobs created under the schedule.
        format: double
      numSucceededTasks:
        type: integer
        description: Gets or sets the total number of tasks successfully completed during the given time range in jobs created under the schedule.  A task completes successfully if it returns exit code 0.
        format: int64
      numFailedTasks:
        type: integer
        description: Gets or sets the total number of tasks that failed during the given time range in jobs created under the schedule. A task fails if it exhausts its maximum retry count without returning exit code 0.
        format: int64
      numTaskRetries:
        type: integer
        description: Gets or sets the total number of retries during the given time range on all the tasks in jobs created under the schedule.
        format: int64
      waitTime:
        type: string
        description: Gets or sets the total wait time of all the tasks in jobs created under the schedule.
    description: The lifetime resource usage statistics for a job schedule.
  JobScheduleUpdateParameter:
    type: object
    properties:
      schedule:
        type: Schedule
        description: 'Sets the schedule according to which jobs will be created. If
          you do not specify this element, it is equivalent to passing the default
          schedule: that is, a single job scheduled to run immediately.'
      jobSpecification:
        type: JobSpecification
        description: Sets details of the jobs to be created on this schedule.
      metadata?:
        type: array
        description: Sets a list of name-value pairs associated with the job schedule as metadata. If you do not specify this element, it takes the default value of an empty list; in effect, any existing metadata is deleted.
        items:
          type: MetadataItem
    description: The parameters for the request.
  JobSchedulingError:
    type: object
    properties:
      category:
        type: string
        description: Gets or sets the category of the job scheduling error.
        enum:
        - usererror
        - servererror
        - unmapped
      code?:
        type: string
        description: Gets or sets an identifier for the job scheduling error.  Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        description: Gets or sets a message describing the job scheduling error, intended to be suitable for display in a user interface.
      details?:
        type: array
        description: Gets or sets a list of additional error details related to the scheduling error.
        items:
          type: NameValuePair
    description: An error encountered by the Batch service when scheduling a job.
  JobSpecification:
    type: object
    properties:
      priority?:
        type: integer
        description: Gets or sets the priority of jobs created under this schedule. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
        format: int32
      displayName?:
        type: string
        description: Gets or sets the display name for jobs created under this schedule. It need not be unique and can contain any Unicode characters up to a maximum length of 1024.
      usesTaskDependencies?:
        type: boolean
        description: Gets or sets the flag that determines if this job will use tasks with dependencies.
      constraints?:
        type: JobConstraints
        description: Gets or sets the execution constraints for jobs created under this schedule.
      jobManagerTask?:
        type: JobManagerTask
        description: Gets or sets the details of a Job Manager task to be launched when a job is started under this schedule.
      jobPreparationTask?:
        type: JobPreparationTask
        description: Gets or sets the Job Preparation task for jobs created under this schedule.
      jobReleaseTask?:
        type: JobReleaseTask
        description: Gets or sets the Job Release task for jobs created under this schedule.
      commonEnvironmentSettings?:
        type: array
        description: Gets or sets a list of common environment variable settings.  These environment variables are set for all tasks in jobs created under this schedule (including the Job Manager, Job Preparation and Job Release tasks).
        items:
          type: EnvironmentSetting
      poolInfo?:
        type: PoolInformation
        description: Gets or sets the pool on which the Batch service runs the tasks of jobs created under this schedule.
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with each job created under this schedule as metadata.
        items:
          type: MetadataItem
    description: Specifies details of the jobs to be created on a schedule.
  JobStatistics:
    type: object
    properties:
      url:
        type: string
        description: Gets or sets the URL for the statistics.
      startTime:
        type: datetime
        description: Gets or sets the start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between StartTime and LastUpdateTime.
      userCPUTime:
        type: string
        description: Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in the job.
      kernelCPUTime:
        type: string
        description: Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in the job.
      wallClockTime:
        type: string
        description: Gets or sets the total wall clock time of all the tasks in the job.
      readIOps:
        type: integer
        description: Gets or sets the total number of I/O read operations performed by all the tasks in the job.
        format: int64
      writeIOps:
        type: integer
        description: Gets or sets the total number of I/O write operations performed by all the tasks in the job.
        format: int64
      readIOGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of I/O read by all the tasks in the job.
        format: double
      writeIOGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of I/O written by all the tasks in the job.
        format: double
      numSucceededTasks:
        type: integer
        description: Gets or sets the total number of tasks successfully completed in the job during the given time range.
        format: int64
      numFailedTasks:
        type: integer
        description: Gets or sets the total number of tasks in the job that failed during the given time range.
        format: int64
      numTaskRetries:
        type: integer
        description: Gets or sets the total number of retries on all the tasks in the job during the given time range.
        format: int64
      waitTime:
        type: string
        description: Gets or sets the total wait time of all the tasks in the job.  The wait time for a task is defined as the elapsed time between the creation of the task creation and the start of task execution.  This value is reported only in the account lifetime statistics; it is not included in individual job statistics.
    description: Resource usage statistics for a job.
  JobTerminateParameter:
    type: object
    properties:
      terminateReason?:
        type: string
        description: Sets the text you want to appear as the job's TerminateReason. The default is 'UserTerminate'.
    description: The parameters for the request.
  JobUpdateParameter:
    type: object
    properties:
      priority?:
        type: integer
        description: Sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged.
        format: int32
      constraints?:
        type: JobConstraints
        description: Sets the execution constraints for the job. If omitted, the existing execution constraints are left unchanged.
      poolInfo:
        type: PoolInformation
        description: Sets the pool on which the Batch service runs the job's tasks. If omitted, the job continues to run on its current pool.
      metadata?:
        type: array
        description: Sets a list of name-value pairs associated with the job as metadata. If omitted, the existing job metadata is left unchanged.
        items:
          type: MetadataItem
    description: The parameters for the request.
  MetadataItem:
    type: object
    properties:
      name?:
        type: string
        description: Gets or sets the name of the metadata item.
      value?:
        type: string
        description: Gets or sets the value of the metadata item.
    description: A metadata item associated with an Azure Batch resource. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
  MultiInstanceSettings:
    type: object
    properties:
      numberOfInstances:
        type: integer
        description: Gets or sets the number of compute node instances used for multi-instance task.
        format: int32
      coordinationCommandLine?:
        type: string
        description: Gets or sets the command to be run on the compute node instances to setup coordination among the subtasks.
      commonResourceFiles?:
        type: array
        description: Gets or sets a list of files that Batch will download on all subtasks.
        items:
          type: ResourceFile
    description: Information about the settings required for multi-instance task.
  NameValuePair:
    type: object
    properties:
      name?:
        type: string
        description: Gets or sets the name in the name-value pair.
      value?:
        type: string
        description: Gets or sets the value in the name-value pair.
    description: Represents a name-value pair.
  NodeDisableSchedulingParameter:
    type: object
    properties:
      nodeDisableSchedulingOption?:
        type: string
        description: Gets or sets what to do with currently running tasks when disable task scheduling on the compute node. The default value is requeue.
        enum:
        - requeue
        - terminate
        - taskcompletion
    description: The parameters for the request.
  NodeFile:
    type: object
    properties:
      name?:
        type: string
        description: Gets or sets the file path.
      url?:
        type: string
        description: Gets or sets the URL of the file.
      isDirectory?:
        type: boolean
        description: Gets or sets whether the object represents a directory.
      properties?:
        type: FileProperties
        description: Gets or sets the file properties.
    description: Information about a file or directory on a compute node.
  NodeFileListResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the list of files.
        items:
          type: NodeFile
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to a NodeFileOperations.ListFromComputeNode or NodeFileOperations.ListFromTask request.
  NodeRebootParameter:
    type: object
    properties:
      nodeRebootOption?:
        type: string
        description: Sets when to reboot the compute node and what to do with currently running tasks. The default value is requeue.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    description: The parameters for the request.
  NodeReimageParameter:
    type: object
    properties:
      nodeReimageOption?:
        type: string
        description: Sets when to reimage the compute node and what to do with currently running tasks. The default value is requeue.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    description: The parameters for the request.
  NodeRemoveParameter:
    type: object
    properties:
      nodeList:
        type: array
        description: Sets a list containing the id of the compute nodes to be removed from the specified pool.
        items:
          type: string
      resizeTimeout?:
        type: string
        description: Sets the timeout for removal of compute nodes to the pool. The default value is 10 minutes.
      nodeDeallocationOption?:
        type: string
        description: Sets when compute nodes may be removed from the pool.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    description: The parameters for the request.
  NodeUpdateUserParameter:
    type: object
    properties:
      password:
        type: string
        description: Sets the password of the account.
      expiryTime?:
        type: datetime
        description: Sets the time at which the account should expire. If omitted, the default is 1 day from the current time.
    description: The parameters for the request.
  PoolAddParameter:
    type: object
    properties:
      id:
        type: string
        description: Gets or sets a string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
      displayName?:
        type: string
        description: Gets or sets the display name for the pool.
      vmSize:
        type: string
        description: Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
      osFamily:
        type: string
        description: Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
      targetOSVersion?:
        type: string
        description: Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified family.
      resizeTimeout?:
        type: string
        description: Gets or sets the timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
      targetDedicated?:
        type: integer
        description: Gets or sets the desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
        format: int32
      enableAutoScale?:
        type: boolean
        description: Gets or sets whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
      autoScaleFormula?:
        type: string
        description: Gets or sets a formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        description: Gets or sets a time interval for the desired autoscale evaluation period in the pool.
      enableInterNodeCommunication?:
        type: boolean
        description: Gets or sets whether the pool permits direct communication between nodes.
      startTask?:
        type: StartTask
        description: Gets or sets a task specified to run on each compute node as it joins the pool.
      certificateReferences?:
        type: array
        description: Gets or sets the list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        description: Gets or sets the list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      maxTasksPerNode?:
        type: integer
        description: Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
        format: int32
      taskSchedulingPolicy?:
        type: TaskSchedulingPolicy
        description: Gets or sets how the Batch service distributes tasks between compute nodes in the pool.
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
    description: Specifies the pool to be added.
  PoolEnableAutoScaleParameter:
    type: object
    properties:
      autoScaleFormula?:
        type: string
        description: Sets the formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        description: Gets or sets a time interval for the desired autoscale evaluation period in the pool.
    description: The parameters for the request.
  PoolEvaluateAutoScaleParameter:
    type: object
    properties:
      autoScaleFormula:
        type: string
        description: Sets a formula for the desired number of compute nodes in the pool.
    description: The parameters for the request.
  PoolInformation:
    type: object
    properties:
      poolId?:
        type: string
        description: Gets or sets the id of an existing pool. All the tasks of the job will run on the specified pool. You must specify either PoolId or AutoPoolSpecification, but not both.
      autoPoolSpecification?:
        type: AutoPoolSpecification
        description: Gets or sets characteristics for a temporary 'auto pool.' The Batch service will create this auto pool and run all the tasks of the job on it, and will delete the pool once the job has completed. You must specify either PoolId or AutoPoolSpecification, but not both.
    description: Specifies how a job should be assigned to a pool.
  PoolListPoolUsageMetricsResult:
    type: object
    properties:
      value?:
        type: array
        description: Gets or sets the pool usage metrics data.
        items:
          type: PoolUsageMetrics
      odata.nextLink?:
        type: string
        description: Gets or sets the URL to get the next set of results.
    description: Response to an AccountOperations.ListPoolUsageMetrics request.
  PoolPatchParameter:
    type: object
    properties:
      startTask?:
        type: StartTask
        description: Sets a task to run on each compute node as it joins the pool. If omitted, any existing start task is left unchanged.
      certificateReferences?:
        type: array
        description: Sets a list of certificates to be installed on each compute node in the pool. If omitted, any existing certificate references are left unchanged.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        description: Sets a list of application packages to be installed on each compute node in the pool. If omitted, any existing application package references are left unchanged.
        items:
          type: ApplicationPackageReference
      metadata?:
        type: array
        description: Sets a list of name-value pairs associated with the pool as metadata. If omitted, any existing metadata is left unchanged.
        items:
          type: MetadataItem
    description: The parameters for the request.
  PoolResizeParameter:
    type: object
    properties:
      targetDedicated:
        type: integer
        description: Sets the desired number of compute nodes in the pool.
        format: int32
      resizeTimeout?:
        type: string
        description: Sets the timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. The default value is 10 minutes.
      nodeDeallocationOption?:
        type: string
        description: Sets when nodes may be removed from the pool, if the pool size is decreasing.
        enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
    description: The parameters for the request.
  PoolSpecification:
    type: object
    properties:
      displayName?:
        type: string
        description: Gets or sets the display name for the pool.
      vmSize?:
        type: string
        description: Gets or sets the size of the virtual machines in the pool. All VMs in a pool are the same size.
      osFamily?:
        type: string
        description: Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
      targetOSVersion?:
        type: string
        description: Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool.
      maxTasksPerNode?:
        type: integer
        description: Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
        format: int32
      taskSchedulingPolicy?:
        type: TaskSchedulingPolicy
        description: Gets or sets how tasks are distributed among compute nodes in the pool.
      resizeTimeout?:
        type: string
        description: Gets or sets the timeout for allocation of compute nodes to the pool.
      targetDedicated?:
        type: integer
        description: Gets or sets the desired number of compute nodes in the pool.
        format: int32
      enableAutoScale?:
        type: boolean
        description: Gets or sets whether the pool size should automatically adjust over time.
      autoScaleFormula?:
        type: string
        description: Gets or sets the formula for the desired number of compute nodes in the pool.
      autoScaleEvaluationInterval?:
        type: string
        description: Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
      enableInterNodeCommunication?:
        type: boolean
        description: Gets or sets whether the pool permits direct communication between nodes.
      startTask?:
        type: StartTask
        description: Gets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.
      certificateReferences?:
        type: array
        description: Gets or sets a list of certificates to be installed on each compute node in the pool.
        items:
          type: CertificateReference
      applicationPackageReferences?:
        type: array
        description: Gets or sets the list of application packages to be installed on each compute node in the pool.
        items:
          type: ApplicationPackageReference
      metadata?:
        type: array
        description: Gets or sets a list of name-value pairs associated with the pool as metadata.
        items:
          type: MetadataItem
    description: Specification for creating a new pool.
  PoolStatistics:
    type: object
    properties:
      url:
        type: string
        description: Gets or sets the URL for the statistics.
      startTime:
        type: datetime
        description: Gets or sets the start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      usageStats?:
        type: UsageStatistics
        description: Gets or sets statistics related to pool usage information, such as the amount of core-time used.
      resourceStats?:
        type: ResourceStatistics
        description: Gets or sets statistics related to resource consumption by compute nodes in the pool.
    description: Contains utilization and resource usage statistics for the lifetime of a pool.
  PoolUpdatePropertiesParameter:
    type: object
    properties:
      startTask?:
        type: StartTask
        description: Sets a task to run on each compute node as it joins the pool. If omitted, any existing start task is removed from the pool.
      certificateReferences:
        type: array
        description: Sets a list of certificates to be installed on each compute node in the pool. If you specify an empty collection, any existing certificate references are removed from the pool.
        items:
          type: CertificateReference
      applicationPackageReferences:
        type: array
        description: Sets a list of application packages to be installed on each compute node in the pool. If you specify an empty collection, any existing application packages references are removed from the pool.
        items:
          type: ApplicationPackageReference
      metadata:
        type: array
        description: Sets a list of name-value pairs associated with the pool as metadata. If you specify an empty collection, any existing metadata is removed from the pool.
        items:
          type: MetadataItem
    description: The parameters for the request.
  PoolUpgradeOSParameter:
    type: object
    properties:
      targetOSVersion:
        type: string
        description: Sets the Azure Guest OS version to be installed on the virtual machines in the pool.
    description: The parameters for the request.
  PoolUsageMetrics:
    type: object
    properties:
      poolId:
        type: string
        description: Gets or sets the id of the pool whose metrics are being aggregated.
      startTime:
        type: datetime
        description: Gets or sets the start time of the aggregation interval.
      endTime:
        type: datetime
        description: Gets or sets the end time of the aggregation interval.
      vmSize:
        type: string
        description: Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
      totalCoreHours:
        type: number
        description: Gets or sets the total core hours used in the pool during this aggregation interval.
        format: double
      dataIngressGiB:
        type: number
        description: Gets or sets the cross data center network ingress in GiB to the pool during this interval.
        format: double
      dataEgressGiB:
        type: number
        description: Gets or sets the cross data center network egress in GiB from the pool during this interval.
        format: double
    description: Usage metrics for a pool across an aggregation interval.
  RecentJob:
    type: object
    properties:
      id?:
        type: string
        description: Gets or sets the id of the job.
      url?:
        type: string
        description: Gets or sets the URL of the job.
    description: Information about the most recent job to run under the job schedule.
  ResizeError:
    type: object
    properties:
      code?:
        type: string
        description: Gets or sets an identifier for the pool resize error.  Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        description: Gets or sets a message describing the pool resize error, intended to be suitable for display in a user interface.
      values?:
        type: array
        description: Gets or sets a list of additional error details related to the pool resize error.
        items:
          type: NameValuePair
    description: An error that occurred when resizing a pool.
  ResourceFile:
    type: object
    properties:
      blobSource?:
        type: string
        description: Gets or sets the URL of a blob in Azure storage. The Batch service downloads the blob to the specified file path. The URL must be readable using anonymous access.
      filePath?:
        type: string
        description: Gets or sets the location on the compute node to which the file should be downloaded.
    description: A file to be downloaded from Azure blob storage to a compute node.
  ResourceStatistics:
    type: object
    properties:
      startTime:
        type: datetime
        description: Gets or sets the start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      avgCPUPercentage:
        type: number
        description: Gets or sets the average CPU usage across all nodes in the pool (percentage per node).
        format: double
      avgMemoryGiB:
        type: number
        description: Gets or sets the average memory usage in GiB across all nodes in the pool.
        format: double
      peakMemoryGiB:
        type: number
        description: Gets or sets the peak memory usage in GiB across all nodes in the pool.
        format: double
      avgDiskGiB:
        type: number
        description: Gets or sets the average used disk space in GiB across all nodes in the pool.
        format: double
      peakDiskGiB:
        type: number
        description: Gets or sets the peak used disk space in GiB across all nodes in the pool.
        format: double
      diskReadIOps:
        type: integer
        description: Gets or sets the total number of disk read operations across all nodes in the pool.
        format: int64
      diskWriteIOps:
        type: integer
        description: Gets or sets the total number of disk write operations across all nodes in the pool.
        format: int64
      diskReadGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of disk reads across all nodes in the pool.
        format: double
      diskWriteGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of disk writes across all nodes in the pool.
        format: double
      networkReadGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of network reads across all nodes in the pool.
        format: double
      networkWriteGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of network writes across all nodes in the pool.
        format: double
    description: Statistics related to resource consumption by compute nodes in a pool.
  Schedule:
    type: object
    properties:
      doNotRunUntil?:
        type: datetime
        description: Gets or sets the earliest time at which any job may be created under this job schedule. If you do not specify a doNotRunUntil time, the schedule becomes ready to create jobs immediately.
      doNotRunAfter?:
        type: datetime
        description: Gets or sets a time after which no job will be created under this job schedule.  The schedule will move to the completed state as soon as this deadline is past and there is no active job under this job schedule.
      startWindow?:
        type: string
        description: Gets or sets the time interval, starting from the time at which the schedule indicates a job should be created, within which a job must be created.  If a job is not created within the startWindow interval, then the 'opportunity' is lost; no job will be created until the next recurrence of the schedule.
      recurrenceInterval?:
        type: string
        description: Gets or sets the time interval between the start times of two successive jobs under the job schedule. A job schedule can have at most one active job under it at any given time.
    description: The schedule according to which jobs will be created
  StartTask:
    type: object
    properties:
      commandLine?:
        type: string
        description: Gets or sets the command line of the start task.
      resourceFiles?:
        type: array
        description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        description: Gets or sets a list of environment variable settings for the start task.
        items:
          type: EnvironmentSetting
      runElevated?:
        type: boolean
        description: Gets or sets whether to run the start task in elevated mode. The default value is false.
      maxTaskRetryCount?:
        type: integer
        description: Gets or sets the maximum number of times the task may be retried.
        format: int32
      waitForSuccess?:
        type: boolean
        description: Gets or sets whether the Batch Service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.
    description: A task defined on a pool and run by compute nodes when they join the pool.
  StartTaskInformation:
    type: object
    properties:
      state:
        type: string
        description: Gets or sets the state of the start task on the compute node.
        enum:
        - running
        - completed
      startTime:
        type: datetime
        description: Gets or sets the time at which the start task started running.
      endTime?:
        type: datetime
        description: Gets or sets the time at which the start task stopped running.
      exitCode?:
        type: integer
        description: Gets or sets the exit code of the start task.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        description: Gets or sets any error encountered scheduling the start task.
      retryCount:
        type: integer
        description: Gets or sets the number of times the task has been retried by the Batch service.
        format: int32
      lastRetryTime?:
        type: datetime
        description: Gets or sets the most recent time at which a retry of the task started running.
    description: Information about a start task running on a compute node.
  SubtaskInformation:
    type: object
    properties:
      id?:
        type: integer
        description: Gets or sets the id of the subtask.
        format: int32
      nodeInfo?:
        type: ComputeNodeInformation
        description: Gets or sets information about the compute node on which the subtask ran.
      startTime?:
        type: datetime
        description: Gets or sets the time at which the subtask started running. If the subtask has been restarted or retried, this is the most recent time at which the subtask started running.
      endTime?:
        type: datetime
        description: Gets or sets the time at which the subtask completed. This property is set only if the subtask is in the Completed state.
      exitCode?:
        type: integer
        description: Gets or sets the exit code of the subtask. This property is set only if the subtask is in the Completed state.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        description: Gets or sets details of any error encountered scheduling the subtask.
      state?:
        type: string
        description: Gets or sets the current state of the subtask.
        enum:
        - active
        - preparing
        - running
        - completed
      stateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the subtask entered its current state.
      previousState?:
        type: string
        description: Gets or sets the previous state of the subtask. This property is not set if the subtask is in its initial Active state.
        enum:
        - active
        - preparing
        - running
        - completed
      previousStateTransitionTime?:
        type: datetime
        description: Gets or sets the time at which the subtask entered its previous state. This property is not set if the subtask is in its initial Active state.
    description: Information about an Azure Batch subtask.
  TaskAddParameter:
    type: object
    properties:
      id:
        type: string
        description: Gets or sets a string that uniquely identifies the task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
      displayName?:
        type: string
        description: Gets or sets a display name for the task.
      commandLine:
        type: string
        description: Gets or sets the command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordianation command line.
      resourceFiles?:
        type: array
        description: Gets or sets a list of files that Batch will download to the compute node before running the command line. For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
        items:
          type: ResourceFile
      environmentSettings?:
        type: array
        description: Gets or sets a list of environment variable settings for the task.
        items:
          type: EnvironmentSetting
      affinityInfo?:
        type: AffinityInformation
        description: Gets or sets a locality hint that can be used by the Batch service to select a compute node on which to start the new task.
      constraints?:
        type: TaskConstraints
        description: Gets or sets the execution constraints that apply to this task.
      runElevated?:
        type: boolean
        description: Gets or sets whether to run the task in elevated mode.
      multiInstanceSettings?:
        type: MultiInstanceSettings
        description: Gets or sets information about how to run the multi-instance task.
      dependsOn?:
        type: TaskDependencies
        description: Gets or sets any dependencies this task has.
    description: Specifies the task to be added.
  TaskConstraints:
    type: object
    properties:
      maxWallClockTime?:
        type: string
        description: Gets or sets the maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.
      retentionTime?:
        type: string
        description: Gets or sets the minimum time to retain the working directory for the task on the compute node where it ran. After this time, the Batch service may delete the working directory and all its contents. The default is infinite.
      maxTaskRetryCount?:
        type: integer
        description: Gets or sets the maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.
        format: int32
    description: Constraints to apply to the Job Manager task.
  TaskDependencies:
    type: object
    properties:
      taskIds?:
        type: array
        description: Gets or sets the list of task ids that must complete before this task can be scheduled.
        items:
          type: string
      taskIdRanges?:
        type: array
        description: Gets or sets the list of task ranges that must complete before this task can be scheduled.
        items:
          type: TaskIdRange
    description: Specifies any dependencies of a task.  Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled.
  TaskExecutionInformation:
    type: object
    properties:
      startTime?:
        type: datetime
        description: Gets or sets the time at which the task started running. If the task has been restarted or retried, this is the most recent time at which the task started running.
      endTime?:
        type: datetime
        description: Gets or sets the time at which the task completed. This property is set only if the task is in the Completed state.
      exitCode?:
        type: integer
        description: Gets or sets the exit code of the task. This property is set only if the task is in completed state.
        format: int32
      schedulingError?:
        type: TaskSchedulingError
        description: Gets or sets details of any error encountered scheduling the task.
      retryCount:
        type: integer
        description: Gets or sets the number of times the task has been retried by the Batch service.
        format: int32
      lastRetryTime?:
        type: datetime
        description: Gets or sets the most recent time at which a retry of the task started running.
      requeueCount:
        type: integer
        description: Gets or sets the number of times the task has been requeued by the Batch service as the result of a user request.
        format: int32
      lastRequeueTime?:
        type: datetime
        description: Gets or sets the most recent time at which the task has been requeued by the Batch service as the result of a user request.
    description: Information about the execution of a task.
  TaskIdRange:
    type: object
    properties:
      start:
        type: integer
        description: Gets or sets the first task id in the range.
        format: int32
      end:
        type: integer
        description: Gets or sets the last task id in the range.
        format: int32
  TaskInformation:
    type: object
    properties:
      taskUrl?:
        type: string
        description: Gets or sets the URL of the task.
      jobId?:
        type: string
        description: Gets or sets the id of the job to which the task belongs.
      taskId?:
        type: string
        description: Gets or sets the id of the task.
      subtaskId?:
        type: integer
        description: Gets or sets the id of the subtask if the task is a multi-instance task.
        format: int32
      taskState:
        type: string
        description: Gets or sets the current state of the task.
        enum:
        - active
        - preparing
        - running
        - completed
      executionInfo?:
        type: TaskExecutionInformation
        description: Gets or sets information about the execution of the task.
    description: Information about a task running on a compute node.
  TaskSchedulingError:
    type: object
    properties:
      category:
        type: string
        description: Gets or sets the category of the task scheduling error.
        enum:
        - usererror
        - servererror
        - unmapped
      code?:
        type: string
        description: Gets or sets an identifier for the task scheduling error.  Codes are invariant and are intended to be consumed programmatically.
      message?:
        type: string
        description: Gets or sets a message describing the task scheduling error, intended to be suitable for display in a user interface.
      details?:
        type: array
        description: Gets or sets the list of additional error details related to the scheduling error.
        items:
          type: NameValuePair
    description: Information about an error when scheduling a task.
  TaskSchedulingPolicy:
    type: object
    properties:
      nodeFillType:
        type: string
        description: Gets or sets how tasks should be distributed across compute nodes
        enum:
        - spread
        - pack
        - unmapped
    description: Specifies how tasks should be distributed across compute nodes.
  TaskStatistics:
    type: object
    properties:
      url:
        type: string
        description: Gets or sets the URL for the statistics.
      startTime:
        type: datetime
        description: Gets or sets the start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      userCPUTime:
        type: string
        description: Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by the task.
      kernelCPUTime:
        type: string
        description: Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by the task.
      wallClockTime:
        type: string
        description: Gets or sets the total wall clock time of the task.
      readIOps:
        type: integer
        description: Gets or sets the total number of I/O read operations performed by the task.
        format: int64
      writeIOps:
        type: integer
        description: Gets or sets the total number of I/O write operations performed by the task.
        format: int64
      readIOGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of I/O read by the task.
        format: double
      writeIOGiB:
        type: number
        description: Gets or sets the total amount of data in GiB of I/O written by the task.
        format: double
      waitTime:
        type: string
        description: Gets or sets the elapsed time between the creation of the task and the start of task execution.
    description: Resource usage statistics for a task.
  TaskUpdateParameter:
    type: object
    properties:
      constraints?:
        type: TaskConstraints
        description: Sets constraints that apply to this task. If omitted, the task is given the default constraints.
    description: The parameters for the request.
  UsageStatistics:
    type: object
    properties:
      startTime:
        type: datetime
        description: Gets or sets the start time of the time range covered by the statistics.
      lastUpdateTime:
        type: datetime
        description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
      dedicatedCoreTime:
        type: string
        description: Gets or sets the aggregated wall-clock time of the dedicated compute node cores being part of the pool.
    description: Statistics related to pool usage information.
/applications:
  /{applicationId}:
    uriParameters:
      applicationId:
        type: string
        description: The id of the application.
        displayName: applicationId
    get:
      description: Gets information about the specified application.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
  get:
    description: Lists all of the applications available in the specified account.
    queryParameters:
      maxresults?:
        type: integer
        description: Sets the maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
/certificates:
  get:
    description: Lists all of the certificates that have been added to the specified account.
    queryParameters:
      $filter?:
        type: string
        description: Sets an OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: Sets an OData $select clause.
        displayName: $select
      maxresults?:
        type: integer
        description: Sets the maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
  post:
    description: Adds a certificate to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: CertificateAddParameter
/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint}):
  uriParameters:
    thumbprintAlgorithm:
      type: string
      description: The algorithm used to derive the thumbprint parameter. This must be sha1.
      displayName: thumbprintAlgorithm
    thumbprint:
      type: string
      description: The thumbprint of the certificate to get.
      displayName: thumbprint
  /canceldelete:
    post:
      description: Cancels a failed deletion of a certificate from the specified account.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
  get:
    description: Gets information about the specified certificate.
    queryParameters:
      $select?:
        type: string
        description: Sets an OData $select clause.
        displayName: $select
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
  delete:
    description: Deletes a certificate from the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
/jobs:
  /{jobId}:
    uriParameters:
      jobId:
        type: string
        description: The id of the job.
        displayName: jobId
    /disable:
      post:
        description: Disables the specified job, preventing new tasks from running.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: JobDisableParameter
    /enable:
      post:
        description: Enables the specified job, allowing new tasks to run.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
    /jobpreparationandreleasetaskstatus:
      get:
        description: Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.
        queryParameters:
          $filter?:
            type: string
            description: Sets an OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: Sets an OData $select clause.
            displayName: $select
          maxresults?:
            type: integer
            description: Sets the maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
    /tasks:
      /{taskId}:
        uriParameters:
          taskId:
            type: string
            description: The id of the task to get information about.
            displayName: taskId
        /files:
          /{fileName}:
            uriParameters:
              fileName:
                type: string
                description: The path to the task file that you want to get the content of.
                displayName: fileName
            get:
              description: Gets the content of the specified task file.
              queryParameters:
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                ocp-range?:
                  type: string
                  description: Specifies the byte range to be retrieved. The default is to retrieve the entire file.  The format is startRange-endRange.
                  displayName: ocp-range
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
            head:
              description: Gets the properties of the specified task file.
              queryParameters:
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
            delete:
              description: Deletes the specified task file from the compute node where the task ran.
              queryParameters:
                recursive?:
                  type: boolean
                  description: Sets whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail.
                  displayName: recursive
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
          get:
            description: Lists the files in a task's directory on its compute node.
            queryParameters:
              $filter?:
                type: string
                description: Sets an OData $filter clause.
                displayName: $filter
              recursive?:
                type: boolean
                description: Sets whether to list children of a directory.
                displayName: recursive
              maxresults?:
                type: integer
                description: Sets the maximum number of items to return in the response.
                displayName: maxresults
                format: int32
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
        /subtasksinfo:
          get:
            description: Lists all of the subtasks that are associated with the specified multi-instance task.
            queryParameters:
              $select?:
                type: string
                description: Sets an OData $select clause.
                displayName: $select
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
        /terminate:
          post:
            description: Terminates the specified task.
            queryParameters:
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
              If-Match?:
                type: string
                description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
                displayName: If-Match
              If-None-Match?:
                type: string
                description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
                displayName: If-None-Match
              If-Modified-Since?:
                type: string
                description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                displayName: If-Modified-Since
              If-Unmodified-Since?:
                type: string
                description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                displayName: If-Unmodified-Since
        get:
          description: Gets information about the specified task.
          queryParameters:
            $select?:
              type: string
              description: Sets an OData $select clause.
              displayName: $select
            $expand?:
              type: string
              description: Sets an OData $expand clause.
              displayName: $expand
            timeout?:
              type: integer
              description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Specifies if the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
            If-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
              displayName: If-Match
            If-None-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
              displayName: If-None-Match
            If-Modified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
              displayName: If-Modified-Since
            If-Unmodified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
              displayName: If-Unmodified-Since
        delete:
          description: Deletes a task from the specified job.
          queryParameters:
            timeout?:
              type: integer
              description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Specifies if the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
            If-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
              displayName: If-Match
            If-None-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
              displayName: If-None-Match
            If-Modified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
              displayName: If-Modified-Since
            If-Unmodified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
              displayName: If-Unmodified-Since
        put:
          description: Updates the properties of the specified task.
          queryParameters:
            timeout?:
              type: integer
              description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Specifies if the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
            If-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
              displayName: If-Match
            If-None-Match?:
              type: string
              description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
              displayName: If-None-Match
            If-Modified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
              displayName: If-Modified-Since
            If-Unmodified-Since?:
              type: string
              description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
              displayName: If-Unmodified-Since
          body:
            application/json: TaskUpdateParameter
      get:
        description: Lists all of the tasks that are associated with the specified job.
        queryParameters:
          $filter?:
            type: string
            description: Sets an OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: Sets an OData $select clause.
            displayName: $select
          $expand?:
            type: string
            description: Sets an OData $expand clause.
            displayName: $expand
          maxresults?:
            type: integer
            description: Sets the maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
      post:
        description: Adds a task to the specified job.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        body:
          application/json: TaskAddParameter
    /terminate:
      post:
        description: Terminates the specified job, marking it as completed.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: JobTerminateParameter
    get:
      description: Gets information about the specified job.
      queryParameters:
        $select?:
          type: string
          description: Sets an OData $select clause.
          displayName: $select
        $expand?:
          type: string
          description: Sets an OData $expand clause.
          displayName: $expand
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
    delete:
      description: Deletes a job.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
    patch:
      description: Updates the properties of a job.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobPatchParameter
    put:
      description: Updates the properties of a job.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobUpdateParameter
  get:
    description: Lists all of the jobs in the specified account.
    queryParameters:
      $filter?:
        type: string
        description: Sets an OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: Sets an OData $select clause.
        displayName: $select
      $expand?:
        type: string
        description: Sets an OData $expand clause.
        displayName: $expand
      maxresults?:
        type: integer
        description: Sets the maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
  post:
    description: Adds a job to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: JobAddParameter
/jobschedules:
  /{jobScheduleId}:
    uriParameters:
      jobScheduleId:
        type: string
        description: The id of the job schedule to get.
        displayName: jobScheduleId
    /disable:
      post:
        description: Disables a job schedule.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
    /enable:
      post:
        description: Enables a job schedule.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
    /jobs:
      get:
        description: Lists the jobs that have been created under the specified job schedule.
        queryParameters:
          $filter?:
            type: string
            description: Sets an OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: Sets an OData $select clause.
            displayName: $select
          $expand?:
            type: string
            description: Sets an OData $expand clause.
            displayName: $expand
          maxresults?:
            type: integer
            description: Sets the maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
    /terminate:
      post:
        description: Terminates a job schedule.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
    get:
      description: Gets information about the specified job schedule.
      queryParameters:
        $select?:
          type: string
          description: Sets an OData $select clause.
          displayName: $select
        $expand?:
          type: string
          description: Sets an OData $expand clause.
          displayName: $expand
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
    head:
      description: Checks the specified job schedule exists.
      queryParameters:
        $select?:
          type: string
          description: Sets an OData $select clause.
          displayName: $select
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
    delete:
      description: Deletes a job schedule from the specified account.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
    patch:
      description: Updates the properties of the specified job schedule.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobSchedulePatchParameter
    put:
      description: Updates the properties of the specified job schedule.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: JobScheduleUpdateParameter
  get:
    description: Lists all of the job schedules in the specified account.
    queryParameters:
      $filter?:
        type: string
        description: Sets an OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: Sets an OData $select clause.
        displayName: $select
      $expand?:
        type: string
        description: Sets an OData $expand clause.
        displayName: $expand
      maxresults?:
        type: integer
        description: Sets the maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
  post:
    description: Adds a job schedule to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: JobScheduleAddParameter
/lifetimejobstats:
  get:
    description: Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.
    queryParameters:
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
/lifetimepoolstats:
  get:
    description: Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
    queryParameters:
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
/pools:
  /{poolId}:
    uriParameters:
      poolId:
        type: string
        description: The id of the pool to get.
        displayName: poolId
    /disableautoscale:
      post:
        description: Disables automatic scaling for a pool.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
    /enableautoscale:
      post:
        description: Enables automatic scaling for a pool.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: PoolEnableAutoScaleParameter
    /evaluateautoscale:
      post:
        description: Gets the result of evaluating an automatic scaling formula on the pool.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        body:
          application/json: PoolEvaluateAutoScaleParameter
    /nodes:
      /{nodeId}:
        uriParameters:
          nodeId:
            type: string
            description: The id of the compute node that you want to get information about.
            displayName: nodeId
        /disablescheduling:
          post:
            description: Disable task scheduling of the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: NodeDisableSchedulingParameter
        /enablescheduling:
          post:
            description: Enable task scheduling of the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
        /files:
          /{fileName}:
            uriParameters:
              fileName:
                type: string
                description: The path to the task file that you want to get the content of.
                displayName: fileName
            get:
              description: Gets the content of the specified task file.
              queryParameters:
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                ocp-range?:
                  type: string
                  description: Specifies the byte range to be retrieved. The default is to retrieve the entire file.  The format is startRange-endRange.
                  displayName: ocp-range
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
            head:
              description: Gets the properties of the specified compute node file.
              queryParameters:
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
                If-Modified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
                  displayName: If-Modified-Since
                If-Unmodified-Since?:
                  type: string
                  description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
                  displayName: If-Unmodified-Since
            delete:
              description: Deletes the specified task file from the compute node.
              queryParameters:
                recursive?:
                  type: boolean
                  description: Sets whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail.
                  displayName: recursive
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
          get:
            description: Lists all of the files in task directories on the specified compute node.
            queryParameters:
              $filter?:
                type: string
                description: Sets an OData $filter clause.
                displayName: $filter
              recursive?:
                type: boolean
                description: Sets whether to list children of a directory.
                displayName: recursive
              maxresults?:
                type: integer
                description: Sets the maximum number of items to return in the response.
                displayName: maxresults
                format: int32
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
        /rdp:
          get:
            description: Gets the Remote Desktop Protocol file for the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
        /reboot:
          post:
            description: Restarts the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: NodeRebootParameter
        /reimage:
          post:
            description: Reinstalls the operating system on the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: NodeReimageParameter
        /users:
          /{userName}:
            uriParameters:
              userName:
                type: string
                description: The name of the user account to delete.
                displayName: userName
            delete:
              description: Deletes a user account from the specified compute node.
              queryParameters:
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
            put:
              description: Updates the password or expiration time of a user account on the specified compute node.
              queryParameters:
                timeout?:
                  type: integer
                  description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                  displayName: timeout
                  default: 30
                  format: int32
                api-version:
                  type: string
                  description: Client API Version.
                  displayName: api-version
              headers:
                client-request-id?:
                  type: string
                  description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                  displayName: client-request-id
                return-client-request-id?:
                  type: boolean
                  description: Specifies if the server should return the client-request-id identifier in the response.
                  displayName: return-client-request-id
                ocp-date?:
                  type: string
                  description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                  displayName: ocp-date
              body:
                application/json: NodeUpdateUserParameter
          post:
            description: Adds a user account to the specified compute node.
            queryParameters:
              timeout?:
                type: integer
                description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
                displayName: timeout
                default: 30
                format: int32
              api-version:
                type: string
                description: Client API Version.
                displayName: api-version
            headers:
              client-request-id?:
                type: string
                description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
                displayName: client-request-id
              return-client-request-id?:
                type: boolean
                description: Specifies if the server should return the client-request-id identifier in the response.
                displayName: return-client-request-id
              ocp-date?:
                type: string
                description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
                displayName: ocp-date
            body:
              application/json: ComputeNodeUser
        get:
          description: Gets information about the specified compute node.
          queryParameters:
            $select?:
              type: string
              description: Sets an OData $select clause.
              displayName: $select
            timeout?:
              type: integer
              description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
              displayName: timeout
              default: 30
              format: int32
            api-version:
              type: string
              description: Client API Version.
              displayName: api-version
          headers:
            client-request-id?:
              type: string
              description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
              displayName: client-request-id
            return-client-request-id?:
              type: boolean
              description: Specifies if the server should return the client-request-id identifier in the response.
              displayName: return-client-request-id
            ocp-date?:
              type: string
              description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
              displayName: ocp-date
      get:
        description: Lists the compute nodes in the specified pool.
        queryParameters:
          $filter?:
            type: string
            description: Sets an OData $filter clause.
            displayName: $filter
          $select?:
            type: string
            description: Sets an OData $select clause.
            displayName: $select
          maxresults?:
            type: integer
            description: Sets the maximum number of items to return in the response.
            displayName: maxresults
            format: int32
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
    /removenodes:
      post:
        description: Removes compute nodes from the specified pool.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: NodeRemoveParameter
    /resize:
      post:
        description: Changes the number of compute nodes that are assigned to a pool.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: PoolResizeParameter
    /stopresize:
      post:
        description: 'Stops an ongoing resize operation on the pool. This does not
          restore the pool to its previous state before the resize operation: it only
          stops any further changes being made, and the pool maintains its current
          state.'
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
    /updateproperties:
      post:
        description: Updates the properties of a pool.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
        body:
          application/json: PoolUpdatePropertiesParameter
    /upgradeos:
      post:
        description: Upgrades the operating system of the specified pool.
        queryParameters:
          timeout?:
            type: integer
            description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
            displayName: timeout
            default: 30
            format: int32
          api-version:
            type: string
            description: Client API Version.
            displayName: api-version
        headers:
          client-request-id?:
            type: string
            description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            displayName: client-request-id
          return-client-request-id?:
            type: boolean
            description: Specifies if the server should return the client-request-id identifier in the response.
            displayName: return-client-request-id
          ocp-date?:
            type: string
            description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
            displayName: ocp-date
          If-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
            displayName: If-Match
          If-None-Match?:
            type: string
            description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
            displayName: If-None-Match
          If-Modified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
            displayName: If-Modified-Since
          If-Unmodified-Since?:
            type: string
            description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
            displayName: If-Unmodified-Since
        body:
          application/json: PoolUpgradeOSParameter
    get:
      description: Gets information about the specified pool.
      queryParameters:
        $select?:
          type: string
          description: Sets an OData $select clause.
          displayName: $select
        $expand?:
          type: string
          description: Sets an OData $expand clause.
          displayName: $expand
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
    head:
      description: Gets basic properties of a pool.
      queryParameters:
        $select?:
          type: string
          description: Sets an OData $select clause.
          displayName: $select
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
    delete:
      description: Deletes a pool from the specified account.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
    patch:
      description: Updates the properties of a pool.
      queryParameters:
        timeout?:
          type: integer
          description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          displayName: timeout
          default: 30
          format: int32
        api-version:
          type: string
          description: Client API Version.
          displayName: api-version
      headers:
        client-request-id?:
          type: string
          description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          displayName: client-request-id
        return-client-request-id?:
          type: boolean
          description: Specifies if the server should return the client-request-id identifier in the response.
          displayName: return-client-request-id
        ocp-date?:
          type: string
          description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          displayName: ocp-date
        If-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          displayName: If-Match
        If-None-Match?:
          type: string
          description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          displayName: If-None-Match
        If-Modified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          displayName: If-Modified-Since
        If-Unmodified-Since?:
          type: string
          description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          displayName: If-Unmodified-Since
      body:
        application/json: PoolPatchParameter
  get:
    description: Lists all of the pools in the specified account.
    queryParameters:
      $filter?:
        type: string
        description: Sets an OData $filter clause.
        displayName: $filter
      $select?:
        type: string
        description: Sets an OData $select clause.
        displayName: $select
      $expand?:
        type: string
        description: Sets an OData $expand clause.
        displayName: $expand
      maxresults?:
        type: integer
        description: Sets the maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
  post:
    description: Adds a pool to the specified account.
    queryParameters:
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
    body:
      application/json: PoolAddParameter
/poolusagemetrics:
  get:
    description: Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account.
    queryParameters:
      starttime?:
        type: datetime
        description: The earliest time from which to include metrics. This must be at least two and a half hours before the current time.
        displayName: starttime
      endtime?:
        type: datetime
        description: The latest time from which to include metrics. This must be at least two hours before the current time.
        displayName: endtime
      $filter?:
        type: string
        description: Sets an OData $filter clause.
        displayName: $filter
      maxresults?:
        type: integer
        description: Sets the maximum number of items to return in the response.
        displayName: maxresults
        format: int32
      timeout?:
        type: integer
        description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        displayName: timeout
        default: 30
        format: int32
      api-version:
        type: string
        description: Client API Version.
        displayName: api-version
    headers:
      client-request-id?:
        type: string
        description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        displayName: client-request-id
      return-client-request-id?:
        type: boolean
        description: Specifies if the server should return the client-request-id identifier in the response.
        displayName: return-client-request-id
      ocp-date?:
        type: string
        description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
        displayName: ocp-date
